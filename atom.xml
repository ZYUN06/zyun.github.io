<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZYUN</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zyunn.com/"/>
  <updated>2019-05-02T08:58:11.303Z</updated>
  <id>http://zyunn.com/</id>
  
  <author>
    <name>ZYUN</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>译 | 单选按钮与下拉菜单的 7 个使用原则</title>
    <link href="http://zyunn.com/2019/05/02/%E5%8D%95%E9%80%89%E6%8C%89%E9%92%AE%E4%B8%8E%E4%B8%8B%E6%8B%89%E8%8F%9C%E5%8D%95%E7%9A%84-7-%E4%B8%AA%E4%BD%BF%E7%94%A8%E5%8E%9F%E5%88%99/"/>
    <id>http://zyunn.com/2019/05/02/单选按钮与下拉菜单的-7-个使用原则/</id>
    <published>2019-05-02T07:45:14.000Z</published>
    <updated>2019-05-02T08:58:11.303Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="question"> 原文：<a href="https://blog.prototypr.io/7-rules-of-using-radio-buttons-vs-drop-down-menus-fddf50d312d1" target="_blank" rel="noopener">7 Rules of Using Radio Buttons vs Drop-Down Menus</a><br>作者：Saadia Minhas (2018-05-06)<br>阅读时长：3m43s </blockquote><p>不管你正在使用移动应用还是基于网页的工具，表单都是用户界面中至关重要的一部分。同时，表单也是用户交互的最佳来源。用户通过表单录入、提供信息，系统则通过理解这些信息来满足用户需求。</p><p>输入控件、输入校验、错误处理、用户反馈等等，都是可用表单中的一些项目。</p><p>单选按钮和下拉菜单是其中两个非常重要的输入控件。当用户需要输入时，它们可以互换使用。然而，如果我们仔细研究这两个控件的可用性，很明显，它们都有各自特定的使用场景，以便用户更简单地选择给定的输入。<a id="more"></a> </p><p>以下是基于这个可用性研究的一些使用原则，它们将有助于你在设计表单时决定使用哪个控件更合适。<br><br></p><h1 id="使用单选按钮"><a href="#使用单选按钮" class="headerlink" title="使用单选按钮"></a>使用单选按钮</h1><h3 id="1-当需要强调选项时"><a href="#1-当需要强调选项时" class="headerlink" title="#1 当需要强调选项时"></a>#1 当需要强调选项时</h3><p>下面是一些需要强调选项的情况：<br>• &nbsp; 没有明确的默认选项或推荐选项<br>• &nbsp; 希望用户阅读所有选项<br>• &nbsp; 用户不熟悉这些选项，并且较少有机会甚至没有机会预知它们</p><img src="/2019/05/02/单选按钮与下拉菜单的-7-个使用原则/when-options-need-to-be-emphasize.png"><p><center><p style="font-size:12px; color:#C0C0C0">当需要强调选项时</p><center></center></center></p><p>在上面这个例子中，使用下拉菜单并不是一个很好的方案，因为默认选项并没有提供关于其他选项的线索。</p><h3 id="2-当选项少于-5-个时"><a href="#2-当选项少于-5-个时" class="headerlink" title="#2 当选项少于 5 个时"></a>#2 当选项少于 5 个时</h3><p>选项较少时最好并排放置，以便：<br>• &nbsp; 用户可轻松快速的浏览所有选项<br>• &nbsp; 提供快速响应，而不是打开下拉菜单后再从多个选项中进行选择</p><img src="/2019/05/02/单选按钮与下拉菜单的-7-个使用原则/less-number-of-options.png"><p><center><p style="font-size:12px; color:#C0C0C0">选项较少时</p><center></center></center></p><p>如上面的例子所示，当用户需要从 2 至 4 个选项中进行选择时，使用单选按钮更合适。</p><h3 id="3-当选项之间需要进行明确的比较时"><a href="#3-当选项之间需要进行明确的比较时" class="headerlink" title="#3 当选项之间需要进行明确的比较时"></a>#3 当选项之间需要进行明确的比较时</h3><p>可比较的选项最好并排放置，因为：<br>• &nbsp; 用户可对所有选项一目了然，并轻松进行比较<br>• &nbsp; 从下拉菜单中比较和确定选项需要耗费时间<br>• &nbsp; 如果使用下拉菜单，那么用户每次需要检查已选项时，都必须再次打开下拉菜单对选项进行比较</p><img src="/2019/05/02/单选按钮与下拉菜单的-7-个使用原则/comparison-of-options-is-required.png"><p><center><p style="font-size:12px; color:#C0C0C0">当需要比较选项时</p><center></center></center></p><p>上面这个比较好的例子是，关于用户必须做出严肃决定的订阅计划的选择。</p><h3 id="4-当需要优先考虑可见性和快速响应时"><a href="#4-当需要优先考虑可见性和快速响应时" class="headerlink" title="#4 当需要优先考虑可见性和快速响应时"></a>#4 当需要优先考虑可见性和快速响应时</h3><p>清晰的可见性及选项的可快速浏览对用户来说更容易理解。<br>• &nbsp; 对于较长的表单，可更简单快捷地扫描并标记所需选项<br>• &nbsp; 每次都点击下拉菜单去选择某个选项，会耗费很多时间</p><img src="/2019/05/02/单选按钮与下拉菜单的-7-个使用原则/long-forms.png"><p><center><p style="font-size:12px; color:#C0C0C0">长表单──Survey Monkey Questionnaire</p><center></center></center></p><p>从上面例子可明显看出，所有可选项对用户可见的长表单提供了更好的用户体验。<br><br></p><h1 id="使用下拉菜单"><a href="#使用下拉菜单" class="headerlink" title="使用下拉菜单"></a>使用下拉菜单</h1><h3 id="1-当默认选项是推荐选项时"><a href="#1-当默认选项是推荐选项时" class="headerlink" title="#1 当默认选项是推荐选项时"></a>#1 当默认选项是推荐选项时</h3><p>这种情况下，仅查看推荐选项使用户更容易做出选择，因为：<br>• &nbsp; 显示所有选项将吸引用户的注意力<br>• &nbsp; 不鼓励用户更改默认选项</p><img src="/2019/05/02/单选按钮与下拉菜单的-7-个使用原则/default-recommended-option.png"><p><center><p style="font-size:12px; color:#C0C0C0">默认推荐选项</p><center></center></center></p><p>在上面的例子中，用户基本不需要改变默认选项，所以没有必要显示所有的选项。</p><h3 id="2-当有大量相似的选项可选时"><a href="#2-当有大量相似的选项可选时" class="headerlink" title="#2 当有大量相似的选项可选时"></a>#2 当有大量相似的选项可选时</h3><p>当有大量相似选项时，推荐使用下拉菜单，因为：<br>• &nbsp; 用户很容易预知这些选项<br>• &nbsp; 用户没有必要并排查看所有选项</p><img src="/2019/05/02/单选按钮与下拉菜单的-7-个使用原则/A-lot-of-familiar-options.png"><p><center><p style="font-size:12px; color:#C0C0C0">大量相似选项</p><center></center></center></p><h3 id="3-当选项超过-7-个时"><a href="#3-当选项超过-7-个时" class="headerlink" title="#3 当选项超过 7 个时"></a>#3 当选项超过 7 个时</h3><p>当选项个数较多时，并不适合并排显示，因为：<br>• &nbsp; 如果一大堆选项并排放置，用户界面将变得杂乱。用户在查看时有可能会感到困惑。<br>• &nbsp; 扫描大量的单选选项需要耗费时间</p><img src="/2019/05/02/单选按钮与下拉菜单的-7-个使用原则/More-than-7-options.png"><p><center><p style="font-size:12px; color:#C0C0C0">超过 7 个选项</p><center></center></center></p><p>此外，对于长下拉列表，提供文本输入框是一个不错的方法。用户在其中输入选项名称后，列表仅显示出过滤选项。这将使选择更轻松快捷。</p><img src="/2019/05/02/单选按钮与下拉菜单的-7-个使用原则/Enter-option-to-filter-the-list.png"><p><center><p style="font-size:12px; color:#C0C0C0">输入选项来过滤列表</p><center></center></center></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>为提高表单的用户体验，提供正确的控件以便用户输入是非常重要的。由于大量的选项会使表单变得很长，如果用户需要额外点击来输入信息的话，这将变得十分枯燥。<br>以上这些规则将帮助你决定在设计表单时使用哪个控件，单选按钮或者下拉菜单。</p><p><br></p><hr><p style="font-size:14px; color:#C0C0C0">以上翻译包含个人理解，仅用于个人学习。如有错误，求指正呀，非常感谢。^^<br>感谢原文作者及所有分享想法与经验的人。^^</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;question&quot;&gt; 原文：&lt;a href=&quot;https://blog.prototypr.io/7-rules-of-using-radio-buttons-vs-drop-down-menus-fddf50d312d1&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;7 Rules of Using Radio Buttons vs Drop-Down Menus&lt;/a&gt;&lt;br&gt;作者：Saadia Minhas (2018-05-06)&lt;br&gt;阅读时长：3m43s &lt;/blockquote&gt;

&lt;p&gt;不管你正在使用移动应用还是基于网页的工具，表单都是用户界面中至关重要的一部分。同时，表单也是用户交互的最佳来源。用户通过表单录入、提供信息，系统则通过理解这些信息来满足用户需求。&lt;/p&gt;
&lt;p&gt;输入控件、输入校验、错误处理、用户反馈等等，都是可用表单中的一些项目。&lt;/p&gt;
&lt;p&gt;单选按钮和下拉菜单是其中两个非常重要的输入控件。当用户需要输入时，它们可以互换使用。然而，如果我们仔细研究这两个控件的可用性，很明显，它们都有各自特定的使用场景，以便用户更简单地选择给定的输入。&lt;/p&gt;
    
    </summary>
    
      <category term="译文" scheme="http://zyunn.com/categories/%E8%AF%91%E6%96%87/"/>
    
    
      <category term="译文" scheme="http://zyunn.com/tags/%E8%AF%91%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>译 | 字符计数器的 6 项设计原则</title>
    <link href="http://zyunn.com/2019/05/02/%E5%AD%97%E7%AC%A6%E8%AE%A1%E6%95%B0%E5%99%A8%E7%9A%84-6-%E9%A1%B9%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/"/>
    <id>http://zyunn.com/2019/05/02/字符计数器的-6-项设计原则/</id>
    <published>2019-05-02T04:22:54.000Z</published>
    <updated>2019-05-02T07:20:12.230Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="question"> 原文：<a href="http://www.breck-mckye.com/blog/2012/05/character-count-design-some-guidelines/" target="_blank" rel="noopener">Character count design: some guidelines</a><br>作者：Jimmy Breck-McKye (2012-05-30)<br>阅读时长：7m22s </blockquote><p>字符数限制在互联网产品中无处不在，尤其是在依赖于用户产生内容的应用中。尽管如此常见，字符数限制却总被设计得很糟糕。值得庆幸的是，通过遵循以下 6 个关于输入长度限制设计与字符计数器显示的简单原则，便可使输入受字符数限制的文本变得简单方便。<a id="more"></a></p><h4 id="总的来说，有以下-6-个设计字符有限的文本域的主要准则："><a href="#总的来说，有以下-6-个设计字符有限的文本域的主要准则：" class="headerlink" title="总的来说，有以下 6 个设计字符有限的文本域的主要准则："></a>总的来说，有以下 6 个设计字符有限的文本域的主要准则：</h4><ol><li>避免对文本输入作字数限制</li><li>为字符数限制增加视觉提示</li><li>在字数到达限制之前显示字符计数器</li><li>允许用户在达到字数限制之后继续编辑文本</li><li>允许用户方便地查看所有文本内容，以决定哪些内容需要被删减</li><li>为用户的内容输入提供其他渠道</li></ol><p>现在，我们依次来看这些原则。</p><h3 id="首先，避免对文本输入作字数限制。"><a href="#首先，避免对文本输入作字数限制。" class="headerlink" title="首先，避免对文本输入作字数限制。"></a>首先，避免对文本输入作字数限制。</h3><p>由于技术或架构上的限制，我们经常被迫需要对输入字数作出限制，因此导致输入变得非常不方便。但除此之外，这些限制毫无必要。有时我们本可以重新设计界面来满足更长长度的文本输入，有时我们草率地对用户如何构建他们的文本作出假设，有时我们并未作深入思考就对字数作了限制。我们要多思考与探寻是否有限制用户之外的其他替代方案。</p><h3 id="第二，-为字符数限制增加视觉提示。"><a href="#第二，-为字符数限制增加视觉提示。" class="headerlink" title="第二， 为字符数限制增加视觉提示。"></a>第二， 为字符数限制增加视觉提示。</h3><p>200 个字符有多长？您能想象得出来吗？300 个字符呢？40 个呢？抽象的数字对于人们来说并不重要，我们很难猜出一个特定的字符限制对于文本输入意味着什么。所以，我们需要为用户提供其他的提示以帮助他们更好的理解内容的最大输入长度，以及他们当前已输入的长度。</p><p>有一种方法是，设计尺寸合适的输入区域，以便粗略地表示允许输入的最长文本长度。虽然这很难做到绝对准确（因为 140 个字母「i」将比140 个字母「w」显示的行数更少），但这种方式可为用户提供一个直观的字符限制的感受。例如 Twitter，发帖输入框的尺寸就大致等于输入最大限制字数时的尺寸。</p><img src="/2019/05/02/字符计数器的-6-项设计原则/character-twitter.png"><p><center><p style="font-size:12px; color:#C0C0C0">Twitter 的发帖输入框</p><center></center></center></p><p>另一个方法是，当用户的输入接近最大限制字数时，改变字符计数器的颜色。例如 Stack-exchange 网站的评论输入框，当评论字数逐渐增加，计数器从灰色变成金色，最后变成红色。</p><img src="/2019/05/02/字符计数器的-6-项设计原则/character-soverflow.png"><p><center><p style="font-size:12px; color:#C0C0C0">Stack-exchange 网站的评论输入框</p><center></center></center></p><h3 id="第三，在达到最大字数限制之前，显示字符计数器。"><a href="#第三，在达到最大字数限制之前，显示字符计数器。" class="headerlink" title="第三，在达到最大字数限制之前，显示字符计数器。"></a>第三，在达到最大字数限制之前，显示字符计数器。</h3><p>您一定不希望用户在提交内容时才发现字数超出限制了，因为这将迫使用户不得不重新思考他们已经输入的内容，甚至是其他他们已经计划好提交的内容的结构。从认知上来说，这将耗费非常大的成本。您一定也不希望用超出字数限制的错误提示来打扰用户，所以，最好从一开始就显示字符计数器。如果计数器使你的设计变得凌乱，可以考虑给它设置一个不显眼的样式，比如灰色，当用户输入更多文字时，逐渐增强它的显眼程度。</p><h3 id="第四，允许用户超出字符限制，并且在超出之后进行编辑。"><a href="#第四，允许用户超出字符限制，并且在超出之后进行编辑。" class="headerlink" title="第四，允许用户超出字符限制，并且在超出之后进行编辑。"></a>第四，允许用户超出字符限制，并且在超出之后进行编辑。</h3><p>有一些字符数限制的设计是，一旦用户输入的文字达到最大限制，就禁止输入更多的文字。这是一个非常糟糕的设计，原因有两个。第一，它打断了用户复制和粘贴的操作；第二，提炼和修改文字内容比在输入完整文字前进行编辑来得更容易。允许用户输入完整的文字内容可帮助用户记住页面上的主要概念，然后开始编辑他们的素材。</p><h3 id="第五，方便用户清楚了解哪部分内容是需要被删减的。"><a href="#第五，方便用户清楚了解哪部分内容是需要被删减的。" class="headerlink" title="第五，方便用户清楚了解哪部分内容是需要被删减的。"></a>第五，方便用户清楚了解哪部分内容是需要被删减的。</h3><p>正如以上第 2 点所提到的，对于用户来说，一定数量的字符数在字数层面上究竟意味着什么是难以理解的。这就是为什么以其他的方式提示用户当前已超出限制的程度是非常重要的。调整输入区域的尺寸，以暗示可输入的内容数量，这是一种不错的方式。但另一种更好的方式是，高亮用户已输入的文本中超出字数限制的那部分。</p><p>如下图的例子中，超出字数限制的文字为红色，所以用户可以一目了然哪些内容是需要被删减的。同时，这里还将红色的错误提示信息与触发它的文本联系起来了。</p><img src="/2019/05/02/字符计数器的-6-项设计原则/character-red.png"><p><center><p style="font-size:12px; color:#C0C0C0">超出字数限制的文字为红色</p><center></center></center></p><h3 id="第六，为用户的内容提供其他的输入渠道。"><a href="#第六，为用户的内容提供其他的输入渠道。" class="headerlink" title="第六，为用户的内容提供其他的输入渠道。"></a>第六，为用户的内容提供其他的输入渠道。</h3><p>如果用户正在打破字符限制，那么很有可能他正在以一种不恰当的方式使用此输入区域。因此，可以使用字数限制的错误提示引导用户使用更适合他们的内容长度的渠道或者输入区域。</p><p>例如，在 Facebook 中，当用户发布过长的 Status 更新时，将会弹出错误对话框，建议用户使用长度不限制的 Notes 功能。这促使用户使用适合冗长日志的 Statuses 功能，而不是专用的日志系统。如果你的用户正在打破字符限制，仅仅是因为他们误解了某一功能的使用目的，那么这个方法将会有所帮助。<br><br></p><h4 id="用自己的话总结一下，就是："><a href="#用自己的话总结一下，就是：" class="headerlink" title="用自己的话总结一下，就是："></a>用自己的话总结一下，就是：</h4><p><strong>1. 在对文本输入作字数限制前先考虑是不是有其他方案。</strong><br>字数限制，并不是一种很好的方式，你有可能并未对用户的这个输入行为作深入了解，就草率地决定了这个最大限制字数。</p><p><strong>2. 为这个「最大限制字数」增加一些视觉提示。</strong><br>单纯地放一个数字「200」对用户来说是比较难理解的，他们并不知道 200 个字是什么概念。<br>增加提示的方式：如，将输入框的初始高度设置为刚好输入最大限制字数时的高度；或者，当用户的输入逐渐接近最大限制字数时，逐步改变字符计数器的颜色。</p><p><strong>3. 一开始就显示字符计数器，而不是等到用户的输入超过最大限制字数时才显示。</strong><br>当用户的输入超过最大限制字数时才显示字符计数器的话，用户可能需要重新思考和安排他们已经填好的内容，甚至可能因为这一个修改影响其他本来就已经准备好录入的内容。<br>如果担心你的界面设计因为字符计数器显得杂乱，可以给它设置一个比较不显眼的颜色 (如灰色)，当用户输入更多字数时，再慢慢提高字符计数器的显眼程度。</p><p><strong>4. 在用户的输入达到最大限制字数后，也要允许用户继续输入。</strong><br>有一些字符计数器是，当用户达到最大字数限制后，就禁止用户输入了。这是很糟糕的一种设计方式，首先，这样可能使用户复制粘贴的内容被截断；另外，在原本完整的文本内容上进行修改总是比在被截断所以不完整的内容上修改来得容易。</p><p><strong>5. 当用户的输入超出最大限制字数时，让用户清晰地知道哪些内容是超出的。</strong><br>例如，第 2 点中，将输入框的初始高度设置为刚好输入最大限制字数时的高度，这样，用户就知道超出这个输入框的部分就是超出的，需要把内容删减到能在这个输入框内完整显示；另一个更好的方式是，将超出最大字数限制的那部分文本变为红色。</p><p><strong>6. 如果用户输入的内容超出限定的最大字数，说明他们很可能正在以一种不恰当的方式使用这个输入框，这种情况下，可利用错误信息引导用户改用更适合他们想输入的内容的途径或文本框。</strong></p><blockquote class="question"> 其他相关讨论：<a href="https://ux.stackexchange.com/questions/60515/what-is-the-best-placement-of-character-counter-relative-to-the-text-field" target="_blank" rel="noopener">字符计数器应该放置在相应文本框的什么位置？</a></blockquote><p><br></p><hr><p style="font-size:14px; color:#C0C0C0">以上翻译包含个人理解，仅用于个人学习。如有错误，求指正呀，非常感谢。^^<br>感谢原文作者及所有分享想法与经验的人。^^</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;question&quot;&gt; 原文：&lt;a href=&quot;http://www.breck-mckye.com/blog/2012/05/character-count-design-some-guidelines/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Character count design: some guidelines&lt;/a&gt;&lt;br&gt;作者：Jimmy Breck-McKye (2012-05-30)&lt;br&gt;阅读时长：7m22s &lt;/blockquote&gt;

&lt;p&gt;字符数限制在互联网产品中无处不在，尤其是在依赖于用户产生内容的应用中。尽管如此常见，字符数限制却总被设计得很糟糕。值得庆幸的是，通过遵循以下 6 个关于输入长度限制设计与字符计数器显示的简单原则，便可使输入受字符数限制的文本变得简单方便。&lt;/p&gt;
    
    </summary>
    
      <category term="译文" scheme="http://zyunn.com/categories/%E8%AF%91%E6%96%87/"/>
    
    
      <category term="译文" scheme="http://zyunn.com/tags/%E8%AF%91%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>译 | 只有不超过 5% 的用户会调整默认设置</title>
    <link href="http://zyunn.com/2019/05/02/%E8%AF%91-%E5%8F%AA%E6%9C%89%E4%B8%8D%E8%B6%85%E8%BF%87-5-%E7%9A%84%E7%94%A8%E6%88%B7%E4%BC%9A%E8%B0%83%E6%95%B4%E9%BB%98%E8%AE%A4%E9%80%89%E9%A1%B9/"/>
    <id>http://zyunn.com/2019/05/02/译-只有不超过-5-的用户会调整默认选项/</id>
    <published>2019-05-02T03:53:06.000Z</published>
    <updated>2019-05-02T04:33:06.726Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="question"> 原文：<a href="https://www.uie.com/brainsparks/2011/09/14/do-users-change-their-settings/" target="_blank" rel="noopener">Do users change their settings?</a><br>作者：<a href="https://en.wikipedia.org/wiki/Jared_Spool" target="_blank" rel="noopener">Jared Spool</a> (2011-09-14)<br>阅读时长：4m15s </blockquote><p>早在 PC 时代，我们就对<strong>「用户是如何使用软件设计师为他们的应用程序所设计的选项、控件和设置的」</strong>这个问题感兴趣了。我们想知道，在多大程度上，用户会自定义他们的应用程序。<a id="more"></a></p><p>为此，我们着手进行了一些试验。我们邀请了大量的用户将他们的 Microsoft Word 的设置文件发送给我们。当时，MS Word 将所有的设置存储在一个名称诸如 config.ini 的文件中，所以我们邀请用户们将这个文件存入硬盘中，并通过电子邮件发送给我们。于是，我们收到了几百份这样的邮件。</p><p>然后，我们写了一个程序来分析这些文件，对「有多少用户曾经更改过应用中的 150 多项设置以及他们更改的是哪些设置」进行统计。</p><p>我们的发现非常有趣。在我们调研的用户中，<strong>只有不到 5% 的用户更改了设置，超过 95% 的用户则保留了应用程序安装时的默认设置。</strong></p><p>这令人非常惊讶，因为程序中有一些默认设置是非常重要的。例如，此应用有一个功能是，在你编辑文件的过程中为你自动保存文件，以防在系统或应用程序突然崩溃时丢失任何内容。而在我们分析调查的的版本中，这个功能是默认关闭的。用户必须手动打开它，才能使它生效。</p><p>所以，这就意味着，<strong>有 95% 的用户是在自动保存功能关闭的情况下使用此应用程序的。</strong>当我们对这些用户中的一部分人进行访问时，他们都告诉了我们同一个事情：他们认为 Microsoft 关闭这个功能肯定是有原因的，否则他们为什么要这么设置。还有一些用户告诉我们，「Microsoft 一定知道他们在做什么」。</p><p>我们再三思考了这个问题，并且对「将如此重要的一个功能设为默认关闭」的原因进行了猜想。我们猜想，之所以这么做或许是考虑到「用户使用的是软驱或者用户使用的硬盘空间较小运行较慢」，而自动保存会对性能造成影响，所以他们希望为最坏的情况做一些优化，而且，如果用户需要用到这个功能，他们自然会去打开它。</p><p>我们有朋友在 Microsoft Office 团队中工作，于是我们向他们询问了将这个功能默认设为关闭的原因，并且提出了我们关于性能优化的这个假设。但他们进行了解之后告诉我们，我们的假设是错的。</p><p>事实证明，在该版本中，将该功能默认关闭，并不是因为他们考虑到了用户的需求。相反的，这只是因为一个程序员决定将 config.ini 文件初始化。将一个文件初始化是一个又快工作量又小的工程，所以他就先这么做了，寄希望于之后会有人告诉他实际需要的默认设置应该是什么样的。但是结果并没有人这么做。</p><p>由于二进制中 0 代表关闭，所以「自动保存」以及其他一些功能，都被默认设为关闭。<strong>用户认为 Microsoft 一定是经过仔细考虑才这么设置的，但事实并非如此。</strong></p><p>我们向参与调查的用户了解一些背景资料，比如他们的年龄与职业，以看看是否存在一些区别。但毫无例外，<strong>只有一类人几乎总是主动调整他们的设置，这类人就是程序员和设计师</strong>。他们会调整应用程序中 40%，甚至多达 80% 的选项。</p><p>谁能想到，程序员和设计师们喜欢自定义他们的应用程序。这也许正好就是他们选择这份职业的原因？</p><p>（顺便说一句，<strong>如果你是一个程序员或者设计师，那么你将和大部人不一样</strong>。你习惯于调整你所使用的应用程序 的设置，并不意味着你的用户也会这么做，除非他们也是程序员或设计师。）</p><p>在几年的时间里，我们采用不同的形式重复了这个试验。我们发现，<strong>用户几乎不调整他们的设置</strong>。</p><p>如果你的应用程序也有很多设置，你是否曾调查研究过你的用户是如何使用它们的呢？有多少用户调整过这些设置？他们是否仍保持这些选项为默认状态？你的设置界面是否解释了每个设置的含义，并且告知用户为何要调整这些设置？<br><br></p><hr><p style="font-size:14px; color:#C0C0C0">以上翻译包含个人理解，仅用于个人学习。如有错误，求指正呀，非常感谢。^^<br>感谢原文作者及所有分享想法与经验的人。^^</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;question&quot;&gt; 原文：&lt;a href=&quot;https://www.uie.com/brainsparks/2011/09/14/do-users-change-their-settings/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Do users change their settings?&lt;/a&gt;&lt;br&gt;作者：&lt;a href=&quot;https://en.wikipedia.org/wiki/Jared_Spool&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Jared Spool&lt;/a&gt; (2011-09-14)&lt;br&gt;阅读时长：4m15s &lt;/blockquote&gt;

&lt;p&gt;早在 PC 时代，我们就对&lt;strong&gt;「用户是如何使用软件设计师为他们的应用程序所设计的选项、控件和设置的」&lt;/strong&gt;这个问题感兴趣了。我们想知道，在多大程度上，用户会自定义他们的应用程序。&lt;/p&gt;
    
    </summary>
    
      <category term="译文" scheme="http://zyunn.com/categories/%E8%AF%91%E6%96%87/"/>
    
    
      <category term="译文" scheme="http://zyunn.com/tags/%E8%AF%91%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>历经九九八万五千六百七十一难，迎来互联网生涯新高！</title>
    <link href="http://zyunn.com/2019/04/21/%E5%8E%86%E7%BB%8F%E4%B9%9D%E4%B9%9D%E5%85%AB%E4%B8%87%E4%BA%94%E5%8D%83%E5%85%AD%E7%99%BE%E4%B8%83%E5%8D%81%E4%B8%80%E9%9A%BE%EF%BC%8C%E8%BF%8E%E6%9D%A5%E4%BA%92%E8%81%94%E7%BD%91%E7%94%9F%E6%B6%AF%E6%96%B0%E9%AB%98%EF%BC%81/"/>
    <id>http://zyunn.com/2019/04/21/历经九九八万五千六百七十一难，迎来互联网生涯新高！/</id>
    <published>2019-04-21T10:18:18.000Z</published>
    <updated>2019-05-02T03:45:50.976Z</updated>
    
    <content type="html"><![CDATA[<p>折腾了两天之后，我终于拥有自己的部落格啦！哈哈哈哈哈哈开心！快乐！满足！充满希望！（止不住的膨胀 </p><p>谁能想到，这个普普通通的周末也许可能就是我这一生中用脑强度最大的两天了。在稀里糊涂地安装了 Git、Node.js、Xcode，新建了 repository，弄完了域名注册实名验证域名解析，各种注册各种设置，各种改样式，各种 hexo c、 hexo g、hexo s、hexo d，各种 error 各种 warning 之后，我终于迎来了自己的个人网站。<a id="more"></a> 辛苦我自己了（高光时刻儿 。</p><p>虽然还很简单，但暂时还够用儿，其他的边用边学就好啦。还是要好好学习，好好写文章呐。</p><p>感恩 Hexo，感恩 GitHub，感恩互联网，感恩所有分享经验和想法的人儿吖（扑通一声跪下（感恩「简书」不让我改昵称改头像让我有了建站的小动机儿 。</p><p>Cowabunga！</p><img src="/2019/04/21/历经九九八万五千六百七十一难，迎来互联网生涯新高！/cowabunga.jpeg"><p style="font-size:12px; color:#C0C0C0">图片来源：动画《探险活宝》</p>  ]]></content>
    
    <summary type="html">
    
      &lt;p&gt;折腾了两天之后，我终于拥有自己的部落格啦！哈哈哈哈哈哈开心！快乐！满足！充满希望！（止不住的膨胀 &lt;/p&gt;
&lt;p&gt;谁能想到，这个普普通通的周末也许可能就是我这一生中用脑强度最大的两天了。在稀里糊涂地安装了 Git、Node.js、Xcode，新建了 repository，弄完了域名注册实名验证域名解析，各种注册各种设置，各种改样式，各种 hexo c、 hexo g、hexo s、hexo d，各种 error 各种 warning 之后，我终于迎来了自己的个人网站。&lt;/p&gt;
    
    </summary>
    
      <category term="碎碎念儿" scheme="http://zyunn.com/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5%E5%84%BF/"/>
    
    
  </entry>
  
</feed>
