<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZYUN</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zyunn.com/"/>
  <updated>2019-05-07T13:54:41.178Z</updated>
  <id>http://zyunn.com/</id>
  
  <author>
    <name>ZYUN</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>译 | 「返回顶部」按钮设计指南</title>
    <link href="http://zyunn.com/2019/05/07/%E8%AF%91-%E3%80%8C%E5%9B%9E%E5%88%B0%E9%A1%B6%E9%83%A8%E3%80%8D%E6%8C%89%E9%92%AE%E8%AE%BE%E8%AE%A1%E6%8C%87%E5%8D%97/"/>
    <id>http://zyunn.com/2019/05/07/译-「回到顶部」按钮设计指南/</id>
    <published>2019-05-07T13:18:20.000Z</published>
    <updated>2019-05-07T13:54:41.178Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="question"> 原文：<a href="https://www.nngroup.com/articles/back-to-top/" target="_blank" rel="noopener">Back-to-Top Button Design Guidelines</a><br>作者：<a href="https://www.nngroup.com/articles/author/hoa-loranger/" target="_blank" rel="noopener">Hoa Loranger</a> (2017-08-27)<br>阅读时长：5m27s </blockquote><p>摘要：返回顶部按钮的 9 个 UX 准则，可帮助用户导航至长页面的顶部。根据用户需求，在某些网站上，使用其他技术可能更加恰当。<a id="more"></a></p><p><a href="https://www.nngroup.com/articles/responsive-web-design-definition/" target="_blank" rel="noopener">响应式网页设计</a>的流行导致了移动端和桌面端单列长页面设计的数量激增。这些设计带来的结果就是「返回顶部」按钮，这是一种允许用户快速导航至页面顶部的一种快捷方式。</p><p>当用户到达一个非常长的页面的底部时，他们通常需要回到顶部，以：<br>• &nbsp;查看导航菜单并选择一个新的目的页面<br>• &nbsp;使用筛选和排序功能<br>• &nbsp;在搜索框中输入或编辑问题</p><p>操作系统和浏览器已经提供了多种实现这一功能的方法：按下键盘上的 Home 键，点击 iOS 上 Safari 中的状态栏，使用快捷命令，等等。</p><p>然而，技术受众（如本文的读者）可能知道这些方法，但大多数用户却不知道。对一般 Web 用户来说，这些技术过于隐蔽和不适用，他们通常只使用手指或者鼠标来向上滚动。</p><p>当页面非常长时（比如，因为<a href="https://www.nngroup.com/articles/infinite-scrolling/" target="_blank" rel="noopener">无限滚动</a>），在屏幕和内容屏幕之间向上滚动就会变得非常乏味。因此，「返回顶部」按钮就发挥了作用。<br><br></p><h1 id="「返回顶部」按钮的-9-个设计准则"><a href="#「返回顶部」按钮的-9-个设计准则" class="headerlink" title="「返回顶部」按钮的 9 个设计准则"></a>「返回顶部」按钮的 9 个设计准则</h1><p>以下是一些关键指南，可以帮助您决定何时使用「返回顶部」按钮以及如何有效地设计它。</p><ol><li><p>对于<strong>长度超过 4 个屏幕</strong>的页面，请使用「返回顶部」按钮。对于相对较短的页面，返回顶部按钮则多余了———人们可以轻松地滚动返回，而无需过多的努力。如果您只需使用滚动条或手指便可快速导航至顶部，那就<a href="https://www.youtube.com/watch?v=dntokZAGr_c" target="_blank" rel="noopener">没有必要让界面变得杂乱</a>。</p></li><li><p>在页面的<strong>右下方</strong>放置一个持续显示的「返回顶部」按钮。这是人们期望看到它的位置。这个位置不碍事，但很明显。当按钮被放置在屏幕上其他地方时，通常会被忽略。</p></li><li><p><strong>文本标签「返回顶部」</strong>。这个词组最具描述性。 仅有图标（例如，向上的箭头）可能会产生歧义，并且，根据图形认识的不同，可能无法传达正确的含义。</p></li></ol><img src="/2019/05/07/译-「回到顶部」按钮设计指南/medicineplusmobile.jpg"><p><center><p style="font-size:12px; color:#C0C0C0">MedlinePlus.gov: 单独的箭头图标含义太模糊了，文本标签有助于解决这个情境中的歧义。</p><center></center></center></p><img src="/2019/05/07/译-「回到顶部」按钮设计指南/overstockmobile.jpg"><p><center><p style="font-size:12px; color:#C0C0C0">Overstock.com: 显示在箭头图标旁边的文本标签”返回顶部“，有助于解释该按钮。</p><center></center></center></p><ol start="4"><li>每个页面显示一个固定的「返回顶部」的链接，而不是在页面中的各个部分显示<a href="https://www.nngroup.com/articles/reduce-redundancydecrease-duplicated-design-decisions/" target="_blank" rel="noopener">多个链接</a>。（后一种模式曾经在具有<a href="https://www.nngroup.com/articles/in-page-links/" target="_blank" rel="noopener">锚链接</a>的页面上很流行。）在可用性研究中，我们观察到，人们忽略了这些重复的链接，因为它们是可预测的。</li></ol><img src="/2019/05/07/译-「回到顶部」按钮设计指南/usagov.png"><p><center><p style="font-size:12px; color:#C0C0C0">USA.gov: 重复的「返回顶部」链接增加了视觉上的混乱，导致它们被忽略了。</p><center></center></center></p><ol start="5"><li><p>保持按钮尺寸<strong>较小</strong>，这样它就不会覆盖重要的页面元素。但是，如果是在触摸屏上，请将其做得足够大，以便人们点击它。</p></li><li><p>使按钮在页面看起来更突出，而不是混在一起。当「返回顶部」与背景内容太过混合时，用户将不太可能会注意到并使用它。</p></li><li><p>考虑<strong>延迟显示</strong>「返回顶部」，直到用户滚动了几页并表明他们想要向上滚动（例如，向上移动滚动条，向上划动页面）。因此，按钮仅在最需要的时候才显示，而不会在其余时间覆盖屏幕上的重要部分。</p></li></ol><img src="/2019/05/07/译-「回到顶部」按钮设计指南/overstocksidebyside.jpg"><p><center><p style="font-size:12px; color:#C0C0C0">Overstock.com: 只有当页面向上滚动时，才会显示「返回顶部」链接。（并且正如我们所建议的那样，它位于右下方。）</p><center></center></center></p><ol start="8"><li><p><strong>固定显示</strong>按钮。一旦按钮出现，禁止它移动。移动的元素造成很大的干扰，因为眼睛会自动被屏幕上任何移动的元素所吸引。</p></li><li><p><strong>让用户控制滚动</strong>。永远不要让页面自动滚动，例如，当页面顶部出现新内容时。最好提供一个通知并允许用户决定是否滚动以查看任何新内容。<br><br></p></li></ol><h1 id="「返回顶部」按钮的替代方案"><a href="#「返回顶部」按钮的替代方案" class="headerlink" title="「返回顶部」按钮的替代方案"></a>「返回顶部」按钮的替代方案</h1><p>有其他方案可帮助人们去他们需要去的地方。回到顶部是达到目的的一种手段。如果您能预测用户想要什么内容并提供给他们，那就更好了。以下是一些方法：</p><ol><li><strong>页面底部的导航</strong>可以满足那些想要返回顶部去导航或搜索其他内容的用户。当用户倾向于滚动到网站上长页面的最底部时，这种方法最有效。</li></ol><img src="/2019/05/07/译-「回到顶部」按钮设计指南/etsy_footer.jpg"><p><center><p style="font-size:12px; color:#C0C0C0">Etsy.com：该网站在页脚内和页脚附近提供了链接以支持 user journey，而不是使用「返回顶部」。</p><center></center></center></p><ol start="2"><li>与「返回顶部」链接相比，<strong>sticky menus</strong> 有时候是更优雅的解决方案。如果滚动的主要目的是导航至网站中不同的话题或部分，那么当人们需要时，可直接使用菜单选项，而无需返回顶部。</li></ol><p>类似地，如果向上滚动页面的主要目的是访问页面顶部的常见功能（例如，筛选，排序，搜索，下一页），那么在人们向上滚动时显示这些功能可以提供及时的帮助。</p><img src="/2019/05/07/译-「回到顶部」按钮设计指南/nordstrom_stickymenu.jpg"><p><center><p style="font-size:12px; color:#C0C0C0">Nordstrom.com: 该网站将提炼出来的功能固定显示在页面一侧，防止大多数购物任务需要回到顶部。</p><center></center></center></p><ol start="3"><li><strong>社交网站上的「主页」按钮</strong>通常会将人们带到主页的顶部，主页恰好是一个有着很长 Feed 的页面，最需要的就是快速返回顶部的方法。在社交网站上，大多数人都习惯于点击「主页」按钮来滚动至 feed 的顶部。<br>虽然「主页」按钮可以在社交网站上使用，但不要指望它也适用于其他类型的网站。在一般的网站上，人们希望<a href="https://www.nngroup.com/articles/homepage-links/" target="_blank" rel="noopener">「主页」链接</a>将他们带到主页，而不是同一网页的顶部。</li></ol><img src="/2019/05/07/译-「回到顶部」按钮设计指南/twitter.jpg"><p><center><p style="font-size:12px; color:#C0C0C0">Twitter.com: 「主页」按钮同时有「返回顶部」的功能。</p><center><br><br></center></center></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>有许多好的解决方案可以帮助人们回到网页顶部。在您决定使用「返回顶部」链接之前，请考虑您的具体情况并确定哪种方法最适合于您的受众。<br><br></p><hr><p style="font-size:14px; color:#C0C0C0">以上翻译包含个人理解，仅用于个人学习。如有错误，求指正呀，非常感谢。^^<br>感谢原文作者及所有分享想法与经验的人。^^</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;question&quot;&gt; 原文：&lt;a href=&quot;https://www.nngroup.com/articles/back-to-top/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Back-to-Top Button Design Guidelines&lt;/a&gt;&lt;br&gt;作者：&lt;a href=&quot;https://www.nngroup.com/articles/author/hoa-loranger/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hoa Loranger&lt;/a&gt; (2017-08-27)&lt;br&gt;阅读时长：5m27s &lt;/blockquote&gt;

&lt;p&gt;摘要：返回顶部按钮的 9 个 UX 准则，可帮助用户导航至长页面的顶部。根据用户需求，在某些网站上，使用其他技术可能更加恰当。&lt;/p&gt;
    
    </summary>
    
      <category term="译文" scheme="http://zyunn.com/categories/%E8%AF%91%E6%96%87/"/>
    
    
      <category term="译文" scheme="http://zyunn.com/tags/%E8%AF%91%E6%96%87/"/>
    
      <category term="交互设计" scheme="http://zyunn.com/tags/%E4%BA%A4%E4%BA%92%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="导航" scheme="http://zyunn.com/tags/%E5%AF%BC%E8%88%AA/"/>
    
      <category term="NN/g" scheme="http://zyunn.com/tags/NN-g/"/>
    
  </entry>
  
  <entry>
    <title>译 | 用户体验中的「社会认同」</title>
    <link href="http://zyunn.com/2019/05/07/%E8%AF%91-%E7%94%A8%E6%88%B7%E4%BD%93%E9%AA%8C%E4%B8%AD%E7%9A%84%E3%80%8C%E7%A4%BE%E4%BC%9A%E8%AE%A4%E5%90%8C%E3%80%8D/"/>
    <id>http://zyunn.com/2019/05/07/译-用户体验中的「社会认同」/</id>
    <published>2019-05-07T12:56:59.000Z</published>
    <updated>2019-05-07T13:41:42.405Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="question"> 原文：<a href="https://www.nngroup.com/articles/social-proof-ux/" target="_blank" rel="noopener">Social Proof in the User Experience</a><br>作者：<a href="https://www.nngroup.com/articles/author/jennifer-cardello/" target="_blank" rel="noopener">Jen Cardello</a> (2014-10-19)<br>阅读时长：12m28s </blockquote><p>摘要：人们会受他人行为所引导，因此，我们可以在设计中体现一个群体的行为，信仰和建议，以影响用户。<a id="more"></a></p><p>Robert Cialdini 在他的著作《影响力：科学与实践》中提出了关于影响的 6 个原则：<br>• &nbsp;<a href="https://www.nngroup.com/articles/reciprocity-principle/" target="_blank" rel="noopener">回报</a><br>• &nbsp;社会认同<br>• &nbsp;<a href="https://www.nngroup.com/articles/liking-principle-ui-design/" target="_blank" rel="noopener">喜欢</a><br>• &nbsp;<a href="https://www.nngroup.com/articles/scarcity-principle-ux/" target="_blank" rel="noopener">稀缺性</a><br>• &nbsp;<a href="https://www.nngroup.com/articles/authority-principle/" target="_blank" rel="noopener">权威性</a><br>• &nbsp;<a href="https://www.nngroup.com/articles/commitment-consistency-ux/" target="_blank" rel="noopener">承诺与一致性</a></p><p>在本文中，我们将讨论此列表中的第二个原则：社会认同。</p><p><strong>社会认同</strong>是一种人们通过<strong>借鉴他人</strong>行为来指导自己的行为的心理现象。这种倾向是由我们希望在大多数情况下都“正确”行事的自然愿望所驱动的——无论是购物，决定去哪里吃饭，确定应该去哪里，说什么，跟谁说，等等。在现实生活中，社交认同最好的例子之一就是，新 iPhone 发布当前天 Apple Store 门前的长队。事实上，一群人发现这款新手机如此受欢迎，以至于花了相当长的时间站着（或睡觉！）排队，这会影响我们对这款手机的价值的感知（并使我们也垂涎三尺）。</p><img src="/2019/05/07/译-用户体验中的「社会认同」/apple-store-queue.jpg"><p><center><p style="font-size:12px; color:#C0C0C0">英国的苹果店开店当天的照片，由 Lucius Kwok 拍摄。通过 Creative Commons License 许可使用。</p><center></center></center></p><p>如果其他所有人都想要，那这件东西一定是好的。这就是为什么麦当劳在 1985 年贴出「售出超过 1 亿个汉堡包」的标语。<br><br></p><h1 id="社会认同界面模式的例子"><a href="#社会认同界面模式的例子" class="headerlink" title="社会认同界面模式的例子"></a>社会认同界面模式的例子</h1><p>Web 2.0 已经普及了将用户的行为与意见公之于众的做法，其目的是影响和告知他人。以下是几个社会认同原则发挥作用的例子。</p><h3 id="评价"><a href="#评价" class="headerlink" title="评价"></a>评价</h3><img src="/2019/05/07/译-用户体验中的「社会认同」/social-proof-adagio-teas.png"><p><center><p style="font-size:12px; color:#C0C0C0">Adagio Teas 使用评价来影响潜在的购买者：“如果其他人喜欢这种茶，那么也许我也会喜欢它。”</p><center></center></center></p><h3 id="行为（社交过滤器）"><a href="#行为（社交过滤器）" class="headerlink" title="行为（社交过滤器）"></a>行为（社交过滤器）</h3><img src="/2019/05/07/译-用户体验中的「社会认同」/social-proof_ebags.png"><p><center><p style="font-size:12px; color:#C0C0C0">eBags 根据其他（浏览过同个页面的）顾客的浏览情况展示相关的包包；“如果他们查看过这款包包，那他们查看过的其它包包一定也是我想要的。”</p><center></center></center></p><h3 id="观点"><a href="#观点" class="headerlink" title="观点"></a>观点</h3><img src="/2019/05/07/译-用户体验中的「社会认同」/etsy-admirers.png"><p><center><p style="font-size:12px; color:#C0C0C0">在 Etsy 的这个例子中，此界面包含了“欣赏”某个特定项目的人数及用户名。Etsy 上的商店通常包含唯一的或数量有限的商品，因此其他引人关注的相关介绍也利用了稀缺性原则的影响。</p><center><br><br></center></center></p><h1 id="社会认同原则的背景"><a href="#社会认同原则的背景" class="headerlink" title="社会认同原则的背景"></a>社会认同原则的背景</h1><p>社会认同是 Robert Cialdini 博士在其著作<a href="https://www.amazon.com/dp/006124189X?tag=useitcomusablein" target="_blank" rel="noopener">《影响力：说服心理学》</a>（最早出版于 1984 年）中详述的 6 个影响力原则之一。作为一名心理学教授，Cialdini 和他的学生进行了大量的研究，以确定和证明这些原则。社会认同可消除我们的不安全感和「做正确的事情」的欲望。</p><p>有时候，在可用性研究中，用户会告诉我们，他们不关心用户评论，不相信其他人的意见，他们所做的所有决定都基于自己独立的观点。但不幸的是，成千上万的心理学研究都证明了这种「孤狼」理论是完全错误的——这也是我们应当<a href="http://www.nngroup.com/articles/first-rule-of-usability-dont-listen-to-users/" target="_blank" rel="noopener">根据用户做什么而不是说什么来做设计决策</a>的另一个例子。</p><p>社会心理学研究一再表明，在我们所做的几乎所有决定中，我们都有意识或无意识的依靠对方作为线索。社会认同最普遍的用法之一是，情景喜剧中的普遍不受欢迎的「笑声音轨」。Cialdini 指出，“实验发现，当幽默的素材出现时，使用罐头笑声（预录笑声）会让观众笑得更久，更频繁，并且让观众觉得这些素材更有趣。此外，一些证据表明，罐头笑声对低劣笑话最为有效。“<br><br></p><h1 id="何时使用此技术"><a href="#何时使用此技术" class="headerlink" title="何时使用此技术"></a>何时使用此技术</h1><p>• &nbsp;<strong>增强可信度</strong>：用户确实会顾及其他人如何看待他们在网上找到的内容，服务和产品。添加一个指示，表明其他人，甚至更好的、熟悉的人喜欢此内容或产品，可消除决策的不确定性。<br>• &nbsp;<strong>鼓励采纳和接受</strong>：如果您想让人们订阅时事通讯或关注 Twitter 账户，告诉他们您已经拥有大量的订阅者，这样可以增加订阅量，因为这表明了其他人喜欢您的内容。（例子：我们自己的时事通讯的订阅页面。请允许我们使用我们自己的网站作为一个优秀例子，仅此一次 :- ）<br><br></p><h1 id="测试社会认同"><a href="#测试社会认同" class="headerlink" title="测试社会认同"></a>测试社会认同</h1><p>使用社会认同最大的风险是，人们会觉得很少人认可此内容、服务或产品。在最近的一次可用性讨论中，一个用户查看了一篇文章的分享人数，然后指出此文章不够受欢迎，因此它可能不太好。</p><img src="/2019/05/07/译-用户体验中的「社会认同」/atlantic-sharing-buttons-bottom.png"><p><center><p style="font-size:12px; color:#C0C0C0">当一位研究参与者注意到只有 1000 个人在 Fackbook 分享了这篇文章时，她就不会被打动。当然，只有 17 个人分享到 G+，这个给人的印象就更差了。</p><center></center></center></p><p>社会认同元素的另一个风险是，使界面变得繁忙，并且（可能）使页面加载过慢。社交小部件通常会使与社交网站（如 Facebook 和 Twitter）连接的后端通信变得复杂，并显著增加网站的响应时间，尤其是在移动设备上或者在网络连接较差的地方。</p><p>下表列出了您在考虑使用社会认同时需要提出的问题与采用的测试技巧：<br><img src="/2019/05/07/译-用户体验中的「社会认同」/ask-and-testing-techniques.png"></p><ul><li>问题：哪些社会保障机制（如果有的话）可增加转化率？<br>测试/数据：评论，评价，喜欢和推荐的 <a href="https://www.nngroup.com/articles/ab-testing-and-ux-research/" target="_blank" rel="noopener">A/B Testing</a></li><li>问题：社会认同功能会影响可信度吗？<br>测试/数据：<a href="https://www.nngroup.com/articles/anybody-can-do-usability/" target="_blank" rel="noopener">可用性测试</a>，使用特定任务的后续调查来衡量信心（例如，“在 1~7 的范围内，您对此选择有多自信？”“），以此引起对信息的情感反应。</li><li>问题：用户是否注意到社交认同功能？<br>测试/数据：可用性测试或<a href="https://www.nngroup.com/articles/eyetracking-study-of-web-readers/" target="_blank" rel="noopener">眼球追踪测试</a>，以测量分配给社交功能的注意力和眼睛注视。缺乏集中注视可能表明此设计不佳。此外，基于任务的可用性研究也可用于测试。</li><li>问题：社交认同功能是否会令用户不堪重负？<br>测试/数据：可用性测试可表明社会认同功能是否会导致拥挤且混乱的界面，从而分散对用户的行为号召。</li><li>问题：社交认同功能是否会降低页面速度？<br>测试/数据：评估页面加载时间，以确定它是否适合各种网络连接状况。<br><br></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>在许多 web 环境中，使用社会认同已经变得非常普遍。更精明的实现是，不仅表明普遍的采纳与偏好，而且突出显示认识的人（比如，Fackbook 好友）的采纳。由于社会认同的成功，一些网站可能会过度使用这种技术，并且使简单的交互复杂化。这就是为什么对特定的设计实现进行测试是很重要的，而不是简单地认为任何社会认同的功能都是有益的。<br><br></p><hr><p style="font-size:14px; color:#C0C0C0">以上翻译包含个人理解，仅用于个人学习。如有错误，求指正呀，非常感谢。^^<br>感谢原文作者及所有分享想法与经验的人。^^</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;question&quot;&gt; 原文：&lt;a href=&quot;https://www.nngroup.com/articles/social-proof-ux/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Social Proof in the User Experience&lt;/a&gt;&lt;br&gt;作者：&lt;a href=&quot;https://www.nngroup.com/articles/author/jennifer-cardello/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Jen Cardello&lt;/a&gt; (2014-10-19)&lt;br&gt;阅读时长：12m28s &lt;/blockquote&gt;

&lt;p&gt;摘要：人们会受他人行为所引导，因此，我们可以在设计中体现一个群体的行为，信仰和建议，以影响用户。&lt;/p&gt;
    
    </summary>
    
      <category term="译文" scheme="http://zyunn.com/categories/%E8%AF%91%E6%96%87/"/>
    
    
      <category term="译文" scheme="http://zyunn.com/tags/%E8%AF%91%E6%96%87/"/>
    
      <category term="NN/g" scheme="http://zyunn.com/tags/NN-g/"/>
    
      <category term="用户体验" scheme="http://zyunn.com/tags/%E7%94%A8%E6%88%B7%E4%BD%93%E9%AA%8C/"/>
    
      <category term="心理学" scheme="http://zyunn.com/tags/%E5%BF%83%E7%90%86%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>译 | 命令链接</title>
    <link href="http://zyunn.com/2019/05/07/%E8%AF%91-%E5%91%BD%E4%BB%A4%E9%93%BE%E6%8E%A5/"/>
    <id>http://zyunn.com/2019/05/07/译-命令链接/</id>
    <published>2019-05-07T12:29:07.000Z</published>
    <updated>2019-05-07T12:45:29.433Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="question"> 原文：<a href="https://www.nngroup.com/articles/command-links/" target="_blank" rel="noopener">Command Links</a><br>作者：<a href="https://www.nngroup.com/articles/author/jakob-nielsen/" target="_blank" rel="noopener">Jakob Nielsen</a> (2007-05-14)<br>阅读时长：5m33s </blockquote><p>摘要：应用中的命令可以以按钮或者链接的形式呈现，这为解释提供了更多的空间。然而，对于主要命令来说，按钮仍然是最好的选择。<a id="more"></a></p><p>在较简单的时代，<a href="https://www.nngroup.com/courses/web-page-design/" target="_blank" rel="noopener">网站</a>和<a href="https://www.nngroup.com/courses/topic/applications/" target="_blank" rel="noopener">应用程序</a>分别有着两套明显不同的设计指南。例如，在呈现用户的选择时有不同的规则：<br>• &nbsp;<strong>网站通过链接（<a href="https://www.nngroup.com/articles/guidelines-for-visualizing-links/" target="_blank" rel="noopener">带下划线的彩色文本</a>）提供导航</strong><br>• &nbsp;<strong>应用通过菜单和按钮提供操作</strong></p><p>网站和应用程序的设计指南是不同（并将继续保持不同）的，因为有一个可用性的基础原则是：良好的设计是基于（a）用户和（b）他们的任务的。在后一个方面（用户的任务），网站和应用程序存在着根本差异：<br>• &nbsp;<strong>网站：用户的主要任务是，在一个信息空间中移动，并阅读其内容</strong><br>• &nbsp;<strong>应用程序：用户的主要任务是，通过执行命令来改变一些数据集的状态</strong></p><p>事实上，<strong>应用程序的定义就是，它的功能会影响其自身用户界面之外的一些东西</strong>。使用应用程序会令某些东西发生变化，因为用户要求更改它。相比之下，一个网站不会因为被使用而改变；页面总是保持相同。（尽管信息可能会改变，但网站页面在概念上是静态的。）例如，一个包含明天天气预报的页面总是包含这些信息，即使一天显示了阴雨天气的图标，而另一天显示了阳光的图标。<br><br></p><h1 id="应用程序和网站之间的界限变得模糊"><a href="#应用程序和网站之间的界限变得模糊" class="headerlink" title="应用程序和网站之间的界限变得模糊"></a>应用程序和网站之间的界限变得模糊</h1><p>在过去的十年里，网站和应用程序之间的明确区别已经变得模糊了。</p><p>首先，在<strong>语义层面</strong>上，网站提供了越来越多的功能。最被广泛使用的功能是「添加至购物车」，并且在电商可用性指南中，总是以按钮的形式显示此功能，即使是在网站上使用它。<br>因此，对于类似应用程序的网站组件（那些代表功能和命令，而不是普通信息的组件），您应该遵循应用程序的可用性指南（与「添加至购物车」功能一样）。</p><p>第二个问题更难处理：在<strong>语法层面</strong>上，按钮和链接的区别已经变得模糊，因为<strong>有一些命令也被显示为链接</strong>。<br>幸运的是，我们至少有一个明确的规则：<strong>不要使用按钮来导航</strong>。用户应当点击一个普通链接以移动至另一个信息页面。</p><p>然而，即使是这条规则，也有例外：购物车中的「继续购物」和「继续付款」选项传统上是显示为按钮的，尽管它们是纯粹的导航。当用户点击这两个选项中的某一个时，并没有改变任何东西，而只是移动到另一个页面，这个页面中有他们需要使用的命令。但是因为付款是工作流程中的一部分，因此它可以从普通的链接导航规则中得到豁免。</p><p>但，主要的规则是，<strong>用户在页面之间移动时需使用链接</strong>。除其他众多好处之外，普通链接还允许用户在新标签页或新窗口中打开一个新页面，如果他们希望的话。并且，您还可以<a href="https://www.nngroup.com/articles/change-the-color-of-visited-links" target="_blank" rel="noopener">使用不同的颜色来显示链接文本</a>，这取决于用户此前是否访问过这个目标。<br><br></p><h1 id="命令链接设计指南"><a href="#命令链接设计指南" class="headerlink" title="命令链接设计指南"></a>命令链接设计指南</h1><p>Windows Vista 引入了一个新的 GUI 命令小部件：<strong>命令链接</strong>。一旦人们每天都使用系统中的某些东西，它就成了事实上的标准。因为他们会经常在 Vista 中遇到它们，所以用户将逐渐<strong>了解并使用命令链接</strong>。</p><p>许多网站已经使用命令链接。不过，尽管用户越来越意识到链接可以激活命令，但仍然存在令用户感到困惑的风险，因为大多数链接都是用于导航的。</p><p>为减少困惑，<strong>链接文本应当明确说明它导致的是一个动作，而不仅仅是一个新页面</strong>。仅在周围的文本中传达这个信息是不够的；用户经常<a href="https://www.nngroup.com/articles/how-users-read-on-the-web/" target="_blank" rel="noopener">扫描网页</a>，以寻找他们可以操作的区域。因为，您应该假设大部分用户只会阅读链接文本。事实上，用户通常只阅读链接文本中的前几个单词，所以，<strong>以一个能够表明点击链接时会导致的操作的单词（通常是动词）开头</strong>是很重要的。</p><p>至于<strong>大写规则</strong>，请参考您的企业风格指南中的常规链接指南。如果没有风格指南，请使用句式大写（即，仅将命令名称中第一个单词的第一个字母大写）。如果是环绕在句子中的直接链接，则例外。但是，通常最好避免在正文中使用命令；直接链接应仅限于导航。</p><p><strong>命令链接的使用限于</strong>：<br>• &nbsp;<strong>具有轻微后果的操作</strong>。因为用户可能会点击一个看起来像链接的东西，期望它所做的只是打开一个新页面。例如，在经纪业务应用程序中，继续使用按钮来执行「购买此股票」的命令。<br>• &nbsp;<strong>次要命令</strong>。因为用户在寻找“严肃的”的命令或主命令时，会扫描屏幕以找到一个按钮。因此，您应当以按钮的形式显示最重要的命令──不论是从用户的角度还是从您自己的角度。例如，继续使用「添加至购物车」按钮。</p><p>尽管存在这些限制，但命令链接还是有其优点，因为它们带来了一些好处。最值得注意的是，使用链接，您<strong>可以编写更长的命令名称，从而使其更具描述性</strong>。而按钮标签则必须简短（4 个字或更少），否则按钮看起来就会很奇怪。当然，由于用户不喜欢阅读，您应当尽可能保持命令描述简短。</p><p>Vista 展示了命令链接的另一个好处：<strong>能够在主链接文本下方增加说明文字</strong>。您可以用较小的字体来展示这个说明，以强调它的次要性（这样有经验的用户就不会浪费时间去阅读它）。因为按钮是封闭，因此它是独立的，我们很难在一个命令按钮旁边添加解释。并且，如果您这么做，用户很可能会忽略它。</p><p>现在是时候将您的一些命令显示为链接了。但是不要过度使用。<br><br></p><hr><p style="font-size:14px; color:#C0C0C0">以上翻译包含个人理解，仅用于个人学习。如有错误，求指正呀，非常感谢。^^<br>感谢原文作者及所有分享想法与经验的人。^^</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;question&quot;&gt; 原文：&lt;a href=&quot;https://www.nngroup.com/articles/command-links/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Command Links&lt;/a&gt;&lt;br&gt;作者：&lt;a href=&quot;https://www.nngroup.com/articles/author/jakob-nielsen/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Jakob Nielsen&lt;/a&gt; (2007-05-14)&lt;br&gt;阅读时长：5m33s &lt;/blockquote&gt;

&lt;p&gt;摘要：应用中的命令可以以按钮或者链接的形式呈现，这为解释提供了更多的空间。然而，对于主要命令来说，按钮仍然是最好的选择。&lt;/p&gt;
    
    </summary>
    
      <category term="译文" scheme="http://zyunn.com/categories/%E8%AF%91%E6%96%87/"/>
    
    
      <category term="译文" scheme="http://zyunn.com/tags/%E8%AF%91%E6%96%87/"/>
    
      <category term="交互设计" scheme="http://zyunn.com/tags/%E4%BA%A4%E4%BA%92%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="NN/g" scheme="http://zyunn.com/tags/NN-g/"/>
    
  </entry>
  
  <entry>
    <title>译 | 应用中的应用：从微信小程序中学到的用户体验</title>
    <link href="http://zyunn.com/2019/05/03/%E8%AF%91-%E5%BA%94%E7%94%A8%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8%EF%BC%9A%E4%BB%8E%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E5%AD%A6%E5%88%B0%E7%9A%84%E7%94%A8%E6%88%B7%E4%BD%93%E9%AA%8C/"/>
    <id>http://zyunn.com/2019/05/03/译-应用中的应用：从微信小程序中学到的用户体验/</id>
    <published>2019-05-03T10:03:47.000Z</published>
    <updated>2019-05-07T12:28:31.486Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="question"> 原文：<a href="https://www.nngroup.com/articles/wechat-mini-programs/" target="_blank" rel="noopener">Apps Within Apps: UX Lessons from WeChat Mini Programs</a><br>作者：<a href="https://www.nngroup.com/articles/author/feifei-liu/" target="_blank" rel="noopener">Feifei Liu (刘菲菲)</a> (2018-09-09)<br>阅读时长：12m28s </blockquote><p>摘要：我们在中国的用户研究发现，嵌入式应用的设计者不得不考虑使用环境、父平台的核心功能以及该程序的使用方式。<a id="more"></a></p><p>截止 2018 年 3 月，作为中国最受欢迎的社交应用，微信的每月活跃用户数已达 10 亿。<a href="https://www.nngroup.com/articles/wechat-integrated-ux/" target="_blank" rel="noopener">微信的综合服务</a>涵盖了中国用户日常生活的方方面面，包括社交、购物、账单支付、新闻以及预定服务。2017 年底的产品更新中新增了一个新的主要功能：微信小程序（包括小游戏）。小程序和应用相似，但它们是在微信中构建的：感觉就像是一个更大的应用中的应用。因此，一个中国公司可通过 4 个不同的渠道与移动设备上的用户进行交互：</p><ul><li>移动网站</li><li>原生应用</li><li>该公司的微信官方账号</li><li>微信小程序（本研究的主要焦点）<br><br></li></ul><p>我们想了解人们如何看待这些不同渠道之间的差异，以及是否存在某些任务更适合其中某一个渠道而不是另一个。为了找出答案，我们在北京与 10 位微信用户进行了可用性测试研究。</p><p>即使你不打算设计一个微信小程序，这类可扩展的用户界面的用户体验也是很有趣的。传统上，网站和软件应用是封闭的包，无法由用户或第三方提供者进行扩展。相比之下，微信小程序是一种不同体验架构，与以下产品相关：</p><ul><li>用于广泛的软件包的外接程序，例如，浏览器工具栏和电子表格工具包（例如，可为执行 ANOVAs 的少数用户添加至 Excel，而不会使大量群体混淆的统计分析功能）</li><li>Facebook Messenger App，支持应用中 Gamesand Discover 的第三方游戏、新闻和购物服务</li><li>SaaS（Software as a Service）公司提供的整合应用程序 （例如，通过整合功能页面，Slack 用户可直接在 Slack 应用中链接到 Google Calendar 的事件或者 Trello 卡片）</li></ul><img src="/2019/05/03/译-应用中的应用：从微信小程序中学到的用户体验/p1_messenger_slack_3rdpartyservice_copy_2.png"><p><center><p style="font-size:12px; color:#C0C0C0">在美国的两个「应用中的应用」的例子，Facebook Messenger（左边）在应用中包含了游戏，和 Slack（右边）支持可直接链接到他们的应用或者网站的第三方服务。</p><center><br></center></center></p><h1 id="微信小程序的介绍"><a href="#微信小程序的介绍" class="headerlink" title="微信小程序的介绍"></a>微信小程序的介绍</h1><p>对于那些不熟悉小程序的人来说，下面的这些例子将介绍它们是什么以及它们如何工作。</p><p>• &nbsp;<strong>小程序是在微信平台中构建的移动应用程序</strong>。包括游戏、食物配送、购物、门票销售、家庭服务、图片编辑，等等。</p><img src="/2019/05/03/译-应用中的应用：从微信小程序中学到的用户体验/p2_wechatminiprogramexamples-copy.jpg"><p><center><p style="font-size:12px; color:#C0C0C0">两个小程序：食物配送小程序「饿了么」（左边），旅行预订小程序「携程旅行」（右边）（为了清晰起见，我们在屏幕截图上叠加了一些英文翻译）。</p><center></center></center></p><p>• &nbsp;<strong>用户无需安装（或者卸载）一个小程序</strong>。在我们的研究中，许多用户都提到了这个功能，并认为这有助于节省手机存储空间。</p><p>• &nbsp;<strong>小程序的发现渠道主要是线上的社交分享和线下的<a href="https://www.nngroup.com/articles/wechat-qr-shake/" target="_blank" rel="noopener">二维码扫描</a></strong>。许多小程序鼓励用户向其他用户分享游戏，以便在游戏中获得奖励（比如，额外的生命值或者奖励点）。线下，带有二维码的广告可对小程序进行推广。例如，一家购物中心为一个预付停车费的小程序做了广告。</p><img src="/2019/05/03/译-应用中的应用：从微信小程序中学到的用户体验/p3_miniprogram_parkingfee_copy.jpg"><p><center><p style="font-size:12px; color:#C0C0C0">万达广场（购物中心）为一个小程序做的广告，以帮助用户预防停车费。</p><center></center></center></p><p>• &nbsp;<strong>小程序可通过微信主页进行访问，但默认是隐藏的</strong>。因为微信的主要功能是聊天，主页专用于最近的聊天对话。要查看小程序的话，用户需要从顶部向下滑；通过这个操作可以显示最近使用的小程序列表。尽管对于常用的小程序用户来说，滑动既简单又方便，但新用户或者不常用的用户则不太可能自己发现小程序，除非他们不小心向下滑动或者其他用户向他们分享了一个小程序。</p><img src="/2019/05/03/译-应用中的应用：从微信小程序中学到的用户体验/p4_wechatminiprogramentrance-copy.jpg"><p><center><p style="font-size:12px; color:#C0C0C0">在微信主页（左边），用户可向下滑动以查看最近使用的小程序列表（右边）。</p><center></center></center></p><p>我们的研究提供了一些设计师在应用中，或者其他类似于微信的集成模型的有限平台场景中开发应用时可运用的见解。<br><br></p><h1 id="从微信小程序中学到的关于用户体验的-5-个经验"><a href="#从微信小程序中学到的关于用户体验的-5-个经验" class="headerlink" title="从微信小程序中学到的关于用户体验的 5 个经验"></a>从微信小程序中学到的关于用户体验的 5 个经验</h1><h3 id="1-保持用户期望的核心功能和内容。"><a href="#1-保持用户期望的核心功能和内容。" class="headerlink" title="1. 保持用户期望的核心功能和内容。"></a>1. 保持用户期望的核心功能和内容。</h3><p>已经使用过你的公司的（完整的） app 的用户对你所提供的内容和服务有了心理模型和期望。如果一个应用的小程序版本让用户很难找到他们想要的核心内容，他们将会使用他们更熟悉的 app。<br>在我们的测试中，一位 36 岁的女性用户抱怨说，京东购物小程序的主页不如京东移动 app 中提供的信息丰富：“在移动 app 的主页上，我可以浏览打折信息（她在顶部的轮播图之间滑动）。它还显示了我浏览过和购买过的东西，并且推荐了更多相似的商品。所有这些信息都不会在小程序中显示。”她认为小程序中的内容更少，所以她不想在上面购物。</p><img src="/2019/05/03/译-应用中的应用：从微信小程序中学到的用户体验/p5_jdminiprogramandcompanyapp-copy.jpg"><p><center><p style="font-size:12px; color:#C0C0C0">京东购物小程序（左边）和京东移动 app（右边）的对比表明了，移动 app 中可浏览的内容更多，包括轮播图、促销信息和更多模块。</p><center></center></center></p><p>另外一名用户，一位 24 岁的女性，在使用提供食物配送服务的美团小程序时也有类似的问题。“当我打开 app 时，我要做的的第一件事就是获得一些优惠券。这个应用会在你每次登录时自动显示一些优惠券，我不知道小程序是否也会这么做。”她打开小程序，然后非常失望，“没有，没有任何优惠券。这些都太贵了。而且，轮播图中展示的促销活动也不像公司 app 中那么多。”</p><p>如果一个小程序无法做到移动应用中能做到的一切，那么它应该支持切换──这是用户在小程序和移动 app 或网站之间移动以便查看完整内容的一个方便途径。</p><h3 id="2-始终考虑使用环境。在移动设备上，支持快速操作，并且为中断而设计。"><a href="#2-始终考虑使用环境。在移动设备上，支持快速操作，并且为中断而设计。" class="headerlink" title="2. 始终考虑使用环境。在移动设备上，支持快速操作，并且为中断而设计。"></a>2. 始终考虑使用环境。在移动设备上，支持快速操作，并且为中断而设计。</h3><p>在我们的研究中，很多人抱怨说，如果他们在使用小程序的过程中收到了微信消息，他们无法方便地查看信息，然后再回到小程序中继续他们的任务。相反地，他们不得不退出小程序以查看消息。</p><p>不幸的是，一些小程序未保存用户的进度，而是强制他们再次重新开始任务。因为，微信的核心是一个社交工具，小程序应当为了适应多任务处理而设计。为了最大限度降低中断的可能性，流程应当高效、且<a href="https://www.nngroup.com/articles/interaction-cost-definition/" target="_blank" rel="noopener">交互成本</a>最小。以下是实施这些原则的一些建议：</p><p>• &nbsp;<strong>保存用户的进度，以便他们稍后可以返回到任务中</strong>。一个叫做 Happy Ball 的赛车小游戏允许用户保存他们的进度，并在稍后再次返回游戏。一位 20 岁的男性用户称赞了这一功能：“我主要在公共交通工具上或者在课堂上感觉无聊时玩这个游戏，都是碎片化的时间。这个功能允许我中断游戏，并且再次返回时不会丢失我的信息，这一点非常好。”</p><p>• &nbsp;<strong>向用户发送提醒，以便用户回到他们离开的地方继续任务</strong>。因为知道用户在支付的过程中可能会被打断，所以当用户在未完成任务的情况下离开京东小程序的支付页面时，京东将在大约半天内向用户发送一个微信提醒。对于忘记了他们的购物车里还保留有商品的用户，这种类型的提醒非常有帮助。</p><img src="/2019/05/03/译-应用中的应用：从微信小程序中学到的用户体验/p6_jd_nottification.jpg"><p><center><p style="font-size:12px; color:#C0C0C0">如果用户离开了京东购物小程序的支付页面，京东的微信账号将发送一个提示消息，提醒用户购物车里仍有商品。</p><center></center></center></p><p>• &nbsp;<strong>通过获取微信账号的数据提供良好的默认值，以最大限度减少用户的工作量</strong>。例如，京东小程序的支付页面会自动填充用户信息（地址和电话号码），因为京东的账号连接到了用户的微信账号。因此，即使是第一次打开京东小程序的用户也可以享受「一键支付」，而无需输入他们的详细信息。</p><h3 id="3-利用平台的核心功能。"><a href="#3-利用平台的核心功能。" class="headerlink" title="3. 利用平台的核心功能。"></a>3. 利用平台的核心功能。</h3><p>许多用户提到，他们对大部分小程序和小游戏的了解来自于群聊或者好友。一个好的小程序会利用微信的核心功能，即通信。例如，京东的小程序甚至比移动 app 更能促进主页上的团购。（如果有足够的人同意购买这件商品，团购将对这个产品提供折扣。如果一个商品没有得到足够的订单，就没有人可以获得这个产品。）在微信这个环境中强调团购非常有意义，因为这个平台使得用户可以很方便地与他们的好友分享链接，然后邀请他们参与团购。<br>鼓励用户分享对你的业务是有好处的，但别过度。在我们的测试中，许多用户抱怨说，小程序，特别是小游戏，强迫他们向其他用户分享内容。参与者解释说，“如果我需要通过分享游戏来获得奖励，并继续玩下去，我甚至宁愿不要奖励，”并且“强制分享是最糟糕的。”一位 20 岁的男性用户说，“如果你的内容真的非常好，人们会主动分享的──不要像传销一样强迫我分享。”</p><h3 id="4-设计小程序需考虑不常使用的用户。"><a href="#4-设计小程序需考虑不常使用的用户。" class="headerlink" title="4. 设计小程序需考虑不常使用的用户。"></a>4. 设计小程序需考虑不常使用的用户。</h3><p>我们的许多研究参与者说，他们更喜欢那些提供他们仅偶尔使用的服务的小程序，以<strong>节省手机空间</strong>。例如，一个用户解释说：“如果我一个月只需要使用一次这个功能，我会使用小程序。例如，干洗。我不需要下载一个用于干洗的应用。我只需要使用小程序就好了。”<strong>设计师应当了解偶尔使用的用户的需求，并在小程序中直接解决它们</strong>。</p><p>用于邮政运输的顺丰快递小程序就是一个很好的例子。与更全面的移动 app 相比，这个小程序通过围绕最常用的用户任务（安排收件时间）进行设计，解决了用户偶尔使用的需求。</p><img src="/2019/05/03/译-应用中的应用：从微信小程序中学到的用户体验/p7_sf_express_2-copy.jpg"><p><center><p style="font-size:12px; color:#C0C0C0">顺丰快递的小程序（左边）的主要功能是收件时间安排，这是偶尔使用该服务的用户的主要需求；相比之下，相应的移动 app 则具有更多的功能。</p><center></center></center></p><p>不常用用户需要极高的可用性，并强调快速学习，因为您不能设想用户将通过长期使用来积累关于设计的知识。传统可用性准则也适用于小程序，以下是我们研究中的一个例子：</p><p>• &nbsp;<strong>设计简单的导航以实现易学性</strong>。例如，家乐福的小程序在导航栏中使用了图标和文本，这对老年人来说很友好。一位 55 岁的男性用户，他甚至不知道如何搜索一个小程序， 但他可以轻松地在这个小程序中浏览不同的类别和商品，因为它足够简单直观。</p><img src="/2019/05/03/译-应用中的应用：从微信小程序中学到的用户体验/p8_carrefour_miniprogram_clearnavigation-copy.jpg"><p><center><p style="font-size:12px; color:#C0C0C0">家乐福的小程序使用清晰的导航、图标和大图片；这些特点有助于新手用户和年长用户的使用。</p><center></center></center></p><h3 id="5-支持无缝的跨渠道转换。"><a href="#5-支持无缝的跨渠道转换。" class="headerlink" title="5. 支持无缝的跨渠道转换。"></a>5. 支持无缝的跨渠道转换。</h3><p>客户可通过不同的渠道与组织进行交流：移动应用，移动网站，桌面网站，微信小程序，微信官方账号，等等。设计师应该考虑客户的整个使用流程，提供一个跨渠道的<a href="https://www.nngroup.com/articles/seamless-cross-channel/" target="_blank" rel="noopener">无缝用户体验</a>。</p><p>• &nbsp;<strong>简化渠道转换</strong>。一个很好的例子是，当用户想要的商品恢复库存时，京东商城是如何提醒用户的。由于与微信官方账号不同，小程序无法发送通知，所以京东小程序提供了相应的京东官方微信账号的二维码；通过关注这个账号，用户便可接收来自京东的消息，并知道他们的商品何时有货。在我们的测试中，一名用户按照这个流程收到了他打算订购的 VR 眼睛的通知。他评论说，“这家公司考虑非常周到。”</p><img src="/2019/05/03/译-应用中的应用：从微信小程序中学到的用户体验/p9_jdshopping_qrcode.jpg"><p><center><p style="font-size:12px; color:#C0C0C0">如果用户对小程序中某个不可用的功能感兴趣，京东商城小程序将引导用户使用另一个不同的渠道（京东的微信官方账号）（当商品恢复库存时可收到通知）。</p><center></center></center></p><p>• &nbsp;<strong>在要求用户切换到另一个渠道之前，先提供一些内容</strong>。在渠道之间切换会带来很高的感知成本：用户需要相信为了实现这种转换而付出的努力是值得的。在我们的测试中，一个小程序要求用户关注该公司的微信账号，以获取更多关于其产品的信息。由于这个<a href="https://www.nngroup.com/videos/pyramid-trust/" target="_blank" rel="noopener">请求过早</a>（她只是刚刚打开小程序并点击了一个按钮），于是她立即退出了这个小程序。</p><img src="/2019/05/03/译-应用中的应用：从微信小程序中学到的用户体验/p10_lightcamera_searchtofollow-copy.jpg"><p><center><p style="font-size:12px; color:#C0C0C0">在用户刚打开程序并点击了主页上的一个按钮之后，这个小程序就要求用户关注该公司的微信账号。一个研究参与者直接退出了这个小程序。</p><center></center></center></p><p>• &nbsp;<strong>提供切换渠道的简单路径</strong>。在我们的研究中，一位 37 岁的女性用户非常喜欢一个叫做 Heika Camera 的小程序，它可以美化她的猫的照片。她想要下载手机应用，但是她在小程序中搜寻之后，却找不到任何可以访问移动应用的途径。<br><br></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>微信小程序是一种新的互动渠道；像这样的新渠道可能随时随地出现。设计师必须保持敏锐，并调整他们的产品以适应这种新的互动方式。<br>为了利用这些新机会，了解它们的优势和局限非常重要。如果你发现自己在应用程序中设计应用程序，或为功能有限的渠道（例如，<a href="https://www.nngroup.com/articles/smartwatch/" target="_blank" rel="noopener">智能手表</a>、<a href="https://www.nngroup.com/articles/voice-assistant-attitudes/" target="_blank" rel="noopener">语音助手</a>）进行设计，请记住以下几点：<br>• &nbsp;根据使用环境和使用频率为产品增值。<br>• &nbsp;考虑切换渠道的成本以及如何使转换无缝。<br>• &nbsp;为该平台的用户提供内容和视觉效果。<br><br></p><hr><p style="font-size:14px; color:#C0C0C0">以上翻译包含个人理解，仅用于个人学习。如有错误，求指正呀，非常感谢。^^<br>感谢原文作者及所有分享想法与经验的人。^^</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;question&quot;&gt; 原文：&lt;a href=&quot;https://www.nngroup.com/articles/wechat-mini-programs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Apps Within Apps: UX Lessons from WeChat Mini Programs&lt;/a&gt;&lt;br&gt;作者：&lt;a href=&quot;https://www.nngroup.com/articles/author/feifei-liu/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Feifei Liu (刘菲菲)&lt;/a&gt; (2018-09-09)&lt;br&gt;阅读时长：12m28s &lt;/blockquote&gt;

&lt;p&gt;摘要：我们在中国的用户研究发现，嵌入式应用的设计者不得不考虑使用环境、父平台的核心功能以及该程序的使用方式。&lt;/p&gt;
    
    </summary>
    
      <category term="译文" scheme="http://zyunn.com/categories/%E8%AF%91%E6%96%87/"/>
    
    
      <category term="译文" scheme="http://zyunn.com/tags/%E8%AF%91%E6%96%87/"/>
    
      <category term="NN/g" scheme="http://zyunn.com/tags/NN-g/"/>
    
      <category term="用户体验" scheme="http://zyunn.com/tags/%E7%94%A8%E6%88%B7%E4%BD%93%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>译 | 界面设计中的「变化盲视」</title>
    <link href="http://zyunn.com/2019/05/03/%E8%AF%91-%E7%95%8C%E9%9D%A2%E8%AE%BE%E8%AE%A1%E4%B8%AD%E7%9A%84%E3%80%8C%E5%8F%98%E5%8C%96%E7%9B%B2%E8%A7%86%E3%80%8D/"/>
    <id>http://zyunn.com/2019/05/03/译-界面设计中的「变化盲视」/</id>
    <published>2019-05-03T09:31:35.000Z</published>
    <updated>2019-05-03T09:59:44.051Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="question"> 原文：<a href="https://www.nngroup.com/articles/change-blindness-definition/" target="_blank" rel="noopener">Change Blindness in UX: Definition</a><br>作者：<a href="https://www.nngroup.com/articles/author/raluca-budiu/" target="_blank" rel="noopener">Raluca Budiu</a> (2018-09-13)<br>阅读时长：9m42s </blockquote><p>摘要：由于人类注意力的局限性，当网页缺乏强有力的线索时，网页中的重大变化可能会被忽略。<a id="more"></a><br><br></p><h1 id="变化盲视的定义"><a href="#变化盲视的定义" class="headerlink" title="变化盲视的定义"></a>变化盲视的定义</h1><p>在可用性测试中，我们经常观察到，用户忽略了屏幕上的一些变化，而设计师却认为这些变化是显而易见、令人瞩目的。在可用性方面，如果您从事的是设计工作，那么您就知道要寻找什么，在哪里寻找它，它何时出现以及它意味着什么。因此，这对您来说是显而易见的，当您查看您自己的设计时，您不会错过一个重要信息或数据对象的出现。但用户经常这样。为什么？因为变化盲视，这是人类（和史前人类）感知的一个有百万年之久的事实，并且不太可能在短时间内消失。</p><p>那么什么是变化盲视呢？在阿尔弗雷德 · 希区柯克（Alfred Hitchcock）的《惊魂记》（Psycho，有史以来最著名的电影）中，侦探 Arbogast 看着 Norman Bate 的房子投射在漆黑无云的天空里。镜头回到侦探的脸上，并跟着他朝屋子走去。场景仍是黑暗的，但天空却突然布满了云彩。</p><p>不论天空纹理的变化是有意为之（或许是希区柯克对即将发生的事的微妙警告）还是只是一个连续性的错误，大多数观众都不会注意到它。在一个场景与下一个场景之间，动态影像经常会出现像这样细微的不一致，比如背景的变化，演员的服装、妆容或位置的变化，但这些在不同场景之间切换时发生的变化通常都会被忽略。</p><p>这种现象被称为「变化盲视」，并且超出了电影的范畴。它适用于通常情况下人们对场景的感知，不管是在屏幕上还是在现实生活中。变化盲视的作用非常强大：即便人们已被警告可能发生变化，场景中的变化也可能不被察觉。</p><p><strong>定义：变化盲视指的是，当一个场景的变化发生在远离人们的关注焦点的区域时，人们倾向于忽略这些变化。</strong></p><p>在心理学中，20 世纪 90 年代中期进行的一系列实验可能是对变化盲视最好的说明了。在这些实验中，参与者被要求观看一幅复杂场景的图像，时间为半秒；然后显示器空白了一小会儿，最后又出现相同的图像。然而，第二次显示画面时，一些细节被修改了，比如，一个对象改变了尺寸、颜色或者添加或移除了一个元素。实验参与者被要求识别这两幅图像中的变化。在其中一些研究中，人们多次循环查看这两个版本，直到他们察觉出这些变化。对许多人来说，要经过 20 或 40 次交替才能找出它们。</p><p>显示器的闪烁（一个场景，接着是空白屏幕，接着是看起来相同的场景）是变化盲视的一个重要组成部分。在电影中，场景的切换起到了闪烁的作用；另外，在与计算机交互时，闪烁则由用户按下按钮之后新页面（或 UI 元素）的加载引起。但事实证明，闪烁并不是绝对必须的，当用户眨眼或正在扫视（当她移动视线至屏幕上另一个区域）时，此时发生的场景变化也很容易导致变化盲视。</p><p>魔术师利用人类在眼睛移动时的变化盲视倾向：他们使用吸引注意力的装置来使观众的眼睛移动到那个位置，同时进行对他们的戏法至关重要的未观察到的动作。<br><br></p><h1 id="为什么会发生变化盲视？"><a href="#为什么会发生变化盲视？" class="headerlink" title="为什么会发生变化盲视？"></a>为什么会发生变化盲视？</h1><p><strong>变化盲视发生的最根本原因是我们注意力的局限性</strong>。任何复杂的场景都有着大量的细节，人们很难也无法高效地注意到所有这些细节。我们经常采取的方式就是走捷径。</p><p>变化对于人类来说一直都很重要，它可以传达与我们的环境相关的重要信息。自然界中的大多数变化都是由运动来实现的（除极少数比如变色龙的特例之外，一个物理对象无法在不涉及运动的情况下立即发生改变），并且，人类的周边视觉很容易察觉到运动。一旦人眼检测到周围的运动，他们就会寻找运动的来源，此时中心视觉开始起作用，并提供补充的、详细的信息。这种行为是我们野外生活的遗留物，在野外，任何运动都可能是捕食者正准备猎杀我们的信号。</p><p><strong>当运动作为变化的提示线索比较微弱或者完全不存在时，就会产生变化盲视</strong>。当屏幕闪烁时，运动就被分解了，我们看到的是场景的两个静态版本。找出变化的唯一方法是，检查前后版本中所有相应的元素并进行比较。这项任务是很困难的，不仅因为检查场景中无数小细节是乏味的，而且我们对于场景先前版本的<a href="https://www.nngroup.com/articles/short-term-memory-and-web-usability/" target="_blank" rel="noopener">记忆</a>也可能很差。事实上，我们很可能根本就没注意到那个场景中的大部分元素。</p><p>但<strong>变化盲视也可能发生在眼球运动过程中</strong>。换句话说，如果两个（可能运动暗示的变化）相互竞争──就像魔术表演中一样，一个变化通常会获胜并吸引眼球，但眼球运动阻止了对第二个变化的检测。这一原因在界面设计中尤为重要。<br><br></p><h1 id="界面设计中的变化盲视"><a href="#界面设计中的变化盲视" class="headerlink" title="界面设计中的变化盲视"></a>界面设计中的变化盲视</h1><p>在与用户界面的正常交互中，当一个新的元素（比如产品图片<a href="https://www.nngroup.com/articles/designing-effective-carousels/" target="_blank" rel="noopener">轮播</a>中的不同图片或者<a href="https://www.nngroup.com/articles/drop-down-menus/" target="_blank" rel="noopener">下拉菜单</a>中的内容）作为用户操作的结果出现在屏幕上，而屏幕上其它区域也同时发生变化时，常常产生变化盲视。用户预料中的变化的位置在于直接响应用户操作的那个可见的设计元素，于是用户朝那个方向移动视线──但实际上，变化分散在屏幕上多个不同的区域。</p><p>例如，当用户点击 Aldiko 的 Android 应用中的<a href="https://www.nngroup.com/articles/hamburger-menus/" target="_blank" rel="noopener">汉堡菜单</a>时，他们预期的界面上的变化是与该操作相关的──即，新的元素将会在菜单附近区域显示。他们的视线会停留在那个区域，并且不太可能注意到屏幕右上角的操作溢出按钮已经被一个搜索图标所替代。</p><img src="/2019/05/03/译-界面设计中的「变化盲视」/aldiko.jpg"><p><center><p style="font-size:12px; color:#C0C0C0">Android 上的 Aldiko：打开菜单时，屏幕右上角的控件被一个放大镜替代。搜索工具将一直不被注意到，因为，（1）人们会盯着展开的菜单，这是他们操作的直接结果；（2）他们期望屏幕上其它所有元素保持不变（就像他们与大多数用户界面交互时一样）。</p><center></center></center></p><p>在其他地方，我们曾讨论过为什么桌面端的搜索框不应该被一个搜索图标所替代；然而，在移动屏幕上，这种模式是更有用的，我们的研究表明，即使没有搜索框，放大镜工具也相当容易被发现。但是，如果搜索框在默认情况下不可见，那么当用户点击搜索图标时，文本输入框应该显示在其旁边（而不是屏幕上距其较远的区域），以确保人们不会错过它。</p><img src="/2019/05/03/译-界面设计中的「变化盲视」/tamu-search-edited.gif"><p><center><p style="font-size:12px; color:#C0C0C0"><a href="https://www.tamu.edu/" target="_blank" rel="noopener">Texas A&amp;M 大学</a>不仅用搜索图标来代替搜索框，而且还在距离搜索图标很远的位置显示搜索文本框。主页横幅的动画与搜索框的显示是具有竞争性的。</p><center></center></center></p><img src="/2019/05/03/译-界面设计中的「变化盲视」/jhu-search-edited.gif"><p><center><p style="font-size:12px; color:#C0C0C0"><a href="https://www.jhu.edu/" target="_blank" rel="noopener">John Hopkins 大学</a>也使用了一个动态的主图，并将搜索隐藏在一个图标下。但至少，它在搜索图标附近显示搜索框，并将动态的背景调暗，以降低动画的竞争性。</p><center></center></center></p><p>出现在页面顶部的半持久性导航栏或者浮动的按钮也存在不被发现的危险，因为页面的滚动常常会掩盖它们。例如，当用户向上滚动页面时，半持久性导航栏出现在屏幕顶部，希望人们会注意到这个导航栏，并从中选择一个选项，而不必向上滚动至页面最顶端。但不幸的是，页面的运动很容易掩盖导航栏的出现引起的运动，尤其是当导航栏的颜色与页面的颜色混合在一起时，就像下面 New York Times 的例子。</p><img src="/2019/05/03/译-界面设计中的「变化盲视」/nytimes.gif"><p><center><p style="font-size:12px; color:#C0C0C0">iPhone 上的 NYTimes：当他们开始向上滚动时，人们可能会忽略出现在屏幕顶部的半持久性导航栏，因为他们正专注于页面的滚动。一个加剧这种现象的因素是视觉效果上，导航栏与页面内容的差异不够明显。</p><center></center></center></p><img src="/2019/05/03/译-界面设计中的「变化盲视」/chicago-tr.gif"><p><center><p style="font-size:12px; color:#C0C0C0">Chicago Tribune 的移动网站也使用了一个半持久性导航栏，当人们开始向上滚动时，它就会出现在页面顶部。但是，在这个例子中，导航栏的视觉设计效果使它更突出了。</p><center></center></center></p><p>（我们的周边视觉负责识别运动和阴影。比起一个元素微妙地与页面其余部分混合在一起，并且未显著改变页面的阴影轮廓，当一个页面的阴影轮廓发生变化时──比如因为一个角落里出现了大块对比色──我们更容易注意到它的出现。）</p><p>还有很多其他方面的设计可能受变化盲视所影响──错误消息或其他通知、<a href="https://www.nngroup.com/articles/too-fast-ux/" target="_blank" rel="noopener">出现得太快</a>的结果、或因此现象仍可能被忽略的变化的导航栏，正如我们在<a href="https://www.nngroup.com/articles/change-blindness/" target="_blank" rel="noopener">同个话题的相关文章</a>中所讨论的那样。<br><br></p><h1 id="如何避免界面设计中的变化盲视"><a href="#如何避免界面设计中的变化盲视" class="headerlink" title="如何避免界面设计中的变化盲视"></a>如何避免界面设计中的变化盲视</h1><p>为了避免变化盲视，请对你的设计进行分析，以确定那些可能同时发生并且会分散彼此注意力的竞争性变化。以下是一些实践的技巧：</p><ul><li><strong>一次只做一个变化</strong>。在上面 Aldiko 的例子中，可将搜索放置在右上角，并始终可见。</li><li><strong>将所有同时发生变化的元素归在一起</strong>，并放置在屏幕上同一个区域内，以确保该运动可吸引对所有这些元素的注意力。例如，Aldiko 设计中另一个简单的解决方案是，将搜索移到菜单中。（但请注意，将搜索隐藏在菜单中会严重影响其可发现性，并且可能仅适用于以浏览为主的网站。）</li><li><strong>使用<a href="https://www.nngroup.com/articles/animation-usability/" target="_blank" rel="noopener">动画</a>来表示变化</strong>，但避免在屏幕上使用过多互相竞争的动画，以免分散注意力。</li><li><strong>将屏幕上未发生变化的区域调暗</strong>，以聚焦用户对变化的注意力。</li><li>如果你打算在用户滚动页面时向页面中<strong>添加浮动的元素</strong>，那么请<a href="https://www.nngroup.com/articles/closeness-of-actions-and-objects-gui/" target="_blank" rel="noopener">将它们显示在用户的关注焦点附近</a>（例如，在页面底部放置<a href="https://www.nngroup.com/articles/back-to-top/" target="_blank" rel="noopener">「返回顶部」按钮</a>），并使用与页面其余部分形成对比的颜色。<br><br></li></ul><hr><p style="font-size:14px; color:#C0C0C0">以上翻译包含个人理解，仅用于个人学习。如有错误，求指正呀，非常感谢。^^<br>感谢原文作者及所有分享想法与经验的人。^^</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;question&quot;&gt; 原文：&lt;a href=&quot;https://www.nngroup.com/articles/change-blindness-definition/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Change Blindness in UX: Definition&lt;/a&gt;&lt;br&gt;作者：&lt;a href=&quot;https://www.nngroup.com/articles/author/raluca-budiu/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Raluca Budiu&lt;/a&gt; (2018-09-13)&lt;br&gt;阅读时长：9m42s &lt;/blockquote&gt;

&lt;p&gt;摘要：由于人类注意力的局限性，当网页缺乏强有力的线索时，网页中的重大变化可能会被忽略。&lt;/p&gt;
    
    </summary>
    
      <category term="译文" scheme="http://zyunn.com/categories/%E8%AF%91%E6%96%87/"/>
    
    
      <category term="译文" scheme="http://zyunn.com/tags/%E8%AF%91%E6%96%87/"/>
    
      <category term="NN/g" scheme="http://zyunn.com/tags/NN-g/"/>
    
      <category term="用户体验" scheme="http://zyunn.com/tags/%E7%94%A8%E6%88%B7%E4%BD%93%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>译 | 正确使用标签页</title>
    <link href="http://zyunn.com/2019/05/03/%E8%AF%91-%E6%AD%A3%E7%A1%AE%E4%BD%BF%E7%94%A8%E6%A0%87%E7%AD%BE%E9%A1%B5/"/>
    <id>http://zyunn.com/2019/05/03/译-正确使用标签页/</id>
    <published>2019-05-03T08:29:15.000Z</published>
    <updated>2019-05-03T09:54:01.350Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="question"> 原文：<a href="https://www.nngroup.com/articles/tabs-used-right/" target="_blank" rel="noopener">Tabs, Used Right</a><br>作者：<a href="https://www.nngroup.com/articles/author/jakob-nielsen/" target="_blank" rel="noopener">Jakob Nielsen</a> (2016-07-09)<br>阅读时长：6m30s </blockquote><p>摘要：遵循以下 12 个选项卡控件的设计指南，以区分选项卡和网站导航，并解决点击不确定性问题。<a id="more"></a></p><p>简单的 GUI 窗口小部件是网页中大多数功能的基本构件，但却很难找到正确使用所有对话控件的网站。即使是像<a href="https://www.nngroup.com/articles/checkboxes-vs-radio-buttons" target="_blank" rel="noopener">单选按钮和复选框</a>（右键在新标签页打开<a href="http://zyunn.com/2019/05/02/%E5%A4%8D%E9%80%89%E6%A1%86%E4%B8%8E%E5%8D%95%E9%80%89%E6%8C%89%E9%92%AE%E7%9A%84-12-%E4%B8%AA%E5%8F%AF%E7%94%A8%E6%80%A7%E9%97%AE%E9%A2%98/">译文</a>）这样简单的东西，也有一半的时间是被错误使用的。甚至我们都还没开始讲<a href="https://www.nngroup.com/articles/drop-down-menus/" target="_blank" rel="noopener">下拉菜单</a>，这也是可怕的滥用。本文讨论的是另一个经常被滥用的设计元素：选项卡。<br>（这里，我讨论的是页面内的选项卡，如下面的几个截屏示例所示。这些是你可以自己设计的选项卡，作为你的网站或基于 web 的应用程序的一部分。另一种不同类型的选项卡被用于<a href="https://www.nngroup.com/articles/browser-and-gui-chrome/" target="_blank" rel="noopener">浏览器框架</a>，它允许用户在浏览器中<a href="https://www.nngroup.com/articles/multi-tab-page-parking/" target="_blank" rel="noopener">同时打开多个页面</a>。在本文中，我不讨论浏览器选项卡。）<br><br></p><h1 id="选项卡可用性指南"><a href="#选项卡可用性指南" class="headerlink" title="选项卡可用性指南"></a>选项卡可用性指南</h1><p>下面是使用选项卡的 12 个设计原则：</p><ol><li><p><strong>使用选项卡在同一上下文的视图之间切换</strong>，而不是导航到不同的区域。这是最重要的一点，因为在切换视图时保持原位不变是我们使用选项卡的首要原因。</p></li><li><p><strong>按一定的逻辑将内容分到不同的选项卡下</strong>，这样，用户便能轻松预测到选择一个给定的选项卡后会看到什么内容。（<a href="https://www.nngroup.com/articles/card-sorting-how-many-users-to-test/" target="_blank" rel="noopener">卡片分类法</a>是研究这种「<a href="https://www.nngroup.com/articles/mini-ia-structuring-information/" target="_blank" rel="noopener">mini-IA</a>」问题的一种方法。如果你无法找到明确不同的分组，那么选项卡可能是管理你的内容的错误界面控件。）</p></li><li><p>当用户<strong>不需要同时查看多个选项卡中的内容</strong>时，才使用选项卡。如果用户确实需要比较不同选项卡下面的信息，那么不得不来回切换将会增加他们的<a href="https://www.nngroup.com/articles/short-term-memory-and-web-usability/" target="_blank" rel="noopener">短期记忆</a>负担，增加<a href="https://www.nngroup.com/articles/minimize-cognitive-load/" target="_blank" rel="noopener">认知负担</a>和<a href="https://www.nngroup.com/articles/interaction-cost-definition/" target="_blank" rel="noopener">交互成本</a>，并降低可用性，相比于把所有内容都放在一个大页面中的设计。</p></li><li><p>设计<strong>本质上平行</strong>的选项卡。如果选项卡明显不同，用户会将它们理解为网站导航。</p></li></ol><img src="/2019/05/03/译-正确使用标签页/01-workday-tabs.png"><p><center><p style="font-size:12px; color:#C0C0C0">Workday 的主页使用了选项卡控件来呈现它的服务和应用。第一个选项卡 About Workday 提供了公司的概况，而其他的选项卡描述了公司提供的服务。最好是移除 About Workday 这个选项卡，以保持选项卡的平行。</p><center></center></center></p><ol start="5"><li>高亮显示当前选中的选项卡。确保高亮显示足够突出，以便人们可以辨别出哪个选项卡是选中的。</li></ol><img src="/2019/05/03/译-正确使用标签页/02-ticketmaster.png"><p><center><p style="font-size:12px; color:#C0C0C0">Ticketmaster 的选项卡控件通过去掉填充颜色来突出显示当前选中的选项卡（Just Announced），如果有至少 3 个选项卡，则可以使用这个方法。但如果只有 2 个选项卡，这将很难判断出哪个是选中的。</p><center></center></center></p><p>除了高亮显示，你还可以通过尺寸，加粗文字，加上图标或者使它显示在其他选项卡前方等方法来标记当前选中的选项卡。如上述例子所示，如果只有 2 个选项卡，那么这种附加的信号将非常重要。</p><ol start="6"><li><p><strong>未选中的选项卡应该清晰可见、可读</strong>，以提醒用户有其他的选项。如果非高亮显示的选项卡太融入于背景，那么用户可能永远都不会点击它们，也永远都不会发现那些隐藏的功能。</p></li><li><p><strong>将当前选中的选项卡与它的内容区域联系起来</strong>，就好像您正在使用几个粘贴有选项卡的物理索引卡一样。这将强调当前正显示哪个面板，并在只有 2 个选项卡的时候，告诉用户哪个选项卡是被选中的。</p></li></ol><img src="/2019/05/03/译-正确使用标签页/03-travelers.png"><p><center><p style="font-size:12px; color:#C0C0C0">Traveler 的选项卡控件中，选中的选项卡和面板区域使用了相同的颜色。这个设计加强了选项卡及其相关内容之间的联系，这也是支持使用反向高亮显示的原因之一。</p><center></center></center></p><ol start="8"><li><p><strong>编写简短的选项卡标签</strong>，并使用<a href="https://www.nngroup.com/articles/web-writing-use-search-keywords/" target="_blank" rel="noopener">简单明了的语言</a>，而不是自创的术语。选项卡标签通常为 1~2 个字。短标签更易于扫描；如果你需要更长的标签，则表明这些选项对于一个选项卡控件来说过于复杂了。</p></li><li><p>选项卡标签<strong>不要使用全部大写</strong>。因为更难阅读，所以全部大写基本不会是一个好方法。可读性对于单个、简短的单词来说并不重要，但，正如「<a href="https://www.nngroup.com/articles/113-design-guidelines-homepage-usability/" target="_blank" rel="noopener">主页可用性设计指南</a>」中提到的，你应该选择一种大写的形式（无论是句型还是标题式大写），并坚持使用。</p></li><li><p>只使用<strong>一行</strong>选项卡。多行会造成 UI 元素的跳跃，破坏空间记忆，从而造成<a href="https://www.nngroup.com/articles/recognition-and-recall/" target="_blank" rel="noopener">用户无法记住</a>他们已访问过哪些选项卡。此外，多行也是过度复杂的一个症状；如果你需要超出一行的选项卡，那么你应该简化你的设计。</p></li><li><p>将一整行选项卡放置在选项卡面板的<strong>顶部</strong>，而不是旁边或者底部，否则用户会忽略它们。<br>从视觉设计上看，选项卡控制的<strong>范围</strong>应该是显而易见的。打个比方，使用选项卡就像在一个老式卡片目录的抽屉里翻阅索引卡一样，因此用户必须能够一眼就看出是什么构成了一个「索引卡」（即选项卡面板）。</p></li></ol><img src="/2019/05/03/译-正确使用标签页/04-reuters-2.png"><p><center><p style="font-size:12px; color:#C0C0C0">Reuter 主页上的市场部分，使用了边框来显示选项卡控制的范围。</p><center></center></center></p><ol start="12"><li>选项卡的<strong>外观和作用应该总是一致的</strong>。一致性在 GUI 控件设计中很重要，因为它通过以下几种方式构建起用户对界面的掌控感：</li></ol><ul><li>可识别性。当一件东西看起来总是一样的时候，你就知道应该寻找什么，并且知道当你找到它时会看到什么。</li><li>可预测性。当一件东西总是以相同的方式运作时，你就可以知道当你触发它时会发生什么。</li><li>赋予权力。当你可以依赖于你过去对所有可用功能的了解时，你就可以轻松地进行一系列操作来实现你的目标。</li><li>效率。没有必要花费时间去学习新的东西或者担心特性不一致带来的影响。<br><br></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>在图形用户界面设计中，选项卡可能看起来是一个不起眼、无聊的控件。但是，如本文所示，在创建运行良好、易于使用、增强用户体验的选项卡时，存在许多特定的设计上的问题。</p><p>当使用分析技术<a href="https://www.nngroup.com/courses/analytics-and-user-experience/" target="_blank" rel="noopener">对一个 UX 运行状况进行检查</a>时，选项卡的设计问题是一个常见的调查结果。假设你正在对页面内的操作进行跟踪，你可能会发现，用户很少使用某些页面上的选项卡。检查你是否违反了本文中的任何一条设计准则。如果是的话，你很可能就是罪魁祸首，并且你可通过快速的 <a href="https://www.nngroup.com/articles/putting-ab-testing-in-its-place/" target="_blank" rel="noopener">A/B 测试</a>变成英雄，这个测试通常会显示重设计的选项卡的两次使用，以使其符合标准。</p><p>如果你遵循了本文中的设计准则，用户将知道如何使用你的选项卡，而无需进一步探索或进行易错的猜测。这也意味着他们可以将所有的时间和精力用于理解你在这些选项卡下提供的内容和功能。选项卡本身没有任何价值，但当它们不是吸引注意力而是促进用户对内容的访问时，它们将发挥重要的作用（在满足用户体验和业务目标方面）。<br><br></p><hr><p style="font-size:14px; color:#C0C0C0">以上翻译包含个人理解，仅用于个人学习。如有错误，求指正呀，非常感谢。^^<br>感谢原文作者及所有分享想法与经验的人。^^</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;question&quot;&gt; 原文：&lt;a href=&quot;https://www.nngroup.com/articles/tabs-used-right/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Tabs, Used Right&lt;/a&gt;&lt;br&gt;作者：&lt;a href=&quot;https://www.nngroup.com/articles/author/jakob-nielsen/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Jakob Nielsen&lt;/a&gt; (2016-07-09)&lt;br&gt;阅读时长：6m30s &lt;/blockquote&gt;

&lt;p&gt;摘要：遵循以下 12 个选项卡控件的设计指南，以区分选项卡和网站导航，并解决点击不确定性问题。&lt;/p&gt;
    
    </summary>
    
      <category term="译文" scheme="http://zyunn.com/categories/%E8%AF%91%E6%96%87/"/>
    
    
      <category term="译文" scheme="http://zyunn.com/tags/%E8%AF%91%E6%96%87/"/>
    
      <category term="交互设计" scheme="http://zyunn.com/tags/%E4%BA%A4%E4%BA%92%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="导航" scheme="http://zyunn.com/tags/%E5%AF%BC%E8%88%AA/"/>
    
      <category term="NN/g" scheme="http://zyunn.com/tags/NN-g/"/>
    
      <category term="Web" scheme="http://zyunn.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>译 | 网站上的面包屑导航：什么、何时与如何</title>
    <link href="http://zyunn.com/2019/05/03/%E8%AF%91-%E7%BD%91%E7%AB%99%E4%B8%8A%E7%9A%84%E9%9D%A2%E5%8C%85%E5%B1%91%E5%AF%BC%E8%88%AA%EF%BC%9A%E4%BB%80%E4%B9%88%E3%80%81%E4%BD%95%E6%97%B6%E4%B8%8E%E5%A6%82%E4%BD%95/"/>
    <id>http://zyunn.com/2019/05/03/译-网站上的面包屑导航：什么、何时与如何/</id>
    <published>2019-05-03T06:57:49.000Z</published>
    <updated>2019-05-03T09:54:09.627Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="question"> 原文：<a href="https://uxplanet.org/breadcrumbs-for-web-sites-what-when-and-how-9273dacf1960" target="_blank" rel="noopener">Breadcrumbs For Web Sites: What, When and How</a><br>作者：<a href="http://babich.biz/" target="_blank" rel="noopener">Nick Babich</a> (2016-08-17)<br>阅读时长：7m38s </blockquote><p>面包屑导航（breadcrumbs 或 breadcrumb trail）是一个二级导航系统，用于显示用户在一个网站或 web app 中的位置。这个词来源于 <a href="https://en.wikipedia.org/wiki/Hansel_and_Gretel" target="_blank" rel="noopener">Hansel 和 Gretel</a> 的童话故事，故事中的主人公通过用面包屑制造的一串踪迹找到了回家的路。<a id="more"></a></p><p>与这个童话故事一样，访问者需要知道他们在网站层次结构中的位置，以便浏览到层次结构中更高级别的内容。在本文中，我们将探讨如何在网站上使用面包屑，并讨论一些将面包屑导航应用到您自己的网站的最佳实践。<br><br></p><h1 id="面包屑导航越来越有用"><a href="#面包屑导航越来越有用" class="headerlink" title="面包屑导航越来越有用"></a>面包屑导航越来越有用</h1><p>面包屑可用作有效的视觉辅助，指示用户在网站层次结构中的位置。此属性使面包屑成为用户获取上下文信息的主要来源，并帮助他们找到以下问题的答案：</p><ul><li><strong>我在哪里？</strong>面包屑告知访问者与整个网站层次结构相关的他们的位置。</li><li><strong>我可以去哪里？</strong>面包屑可提高网站特定部分和页面的可寻性。网站的结构放在面包屑中比放菜单中更容易理解。</li><li><strong>我应该去那里吗？</strong>面包屑传达内容价值，并鼓励浏览（例如，电子商务网站的访问者可能会访问一个产品页面，虽然该产品可能不是很匹配，但访问者可能希望浏览来自同一类别的其他产品）。反过来，这会降低网站整体的<a href="https://en.wikipedia.org/wiki/Bounce_rate" target="_blank" rel="noopener">跳出率</a>。</li></ul><h4 id="•-nbsp-减少操作次数"><a href="#•-nbsp-减少操作次数" class="headerlink" title="• &nbsp;减少操作次数"></a>• &nbsp;减少操作次数</h4><p>在可用性方面，面包屑减少了网站访问者为了访问更高级别的页面而需要采取的操作的次数。访问者可使用面包屑来返回更高级别的页面，而无需使用浏览器的「后退」按钮或者网站的主导航。</p><h4 id="•-nbsp-占用最小的空间"><a href="#•-nbsp-占用最小的空间" class="headerlink" title="• &nbsp;占用最小的空间"></a>• &nbsp;占用最小的空间</h4><p>一个紧凑的结构形式无需占用太多的页面空间，因为它只是横向的一行带有链接的文本。好处是它们在内容加载方面几乎没有负面影响。</p><h4 id="•-nbsp-没有用户会在使用面包屑时遇到问题"><a href="#•-nbsp-没有用户会在使用面包屑时遇到问题" class="headerlink" title="• &nbsp;没有用户会在使用面包屑时遇到问题"></a>• &nbsp;没有用户会在使用面包屑时遇到问题</h4><p>人们可能会忽略这个小小的设计元素，但他们从不会误解面包屑或者在操作它们时感到困难。<br><br></p><h1 id="何时该使用面包屑导航"><a href="#何时该使用面包屑导航" class="headerlink" title="何时该使用面包屑导航"></a>何时该使用面包屑导航</h1><p>确定一个网站是否会从面包屑中受益的好方法是，绘制站点地图或者表示网站导航结构的示意图，然后分析面包屑是否会提高用户在类别内和类别之间导航的能力：</p><ul><li>当你有大量以严格的线性结构或者具有自定义类别的层次结构组织的内容（例如，可将其划分为可划分为更多子部分的部分）时，您应该使用面包屑。一个很好的场景是电子商务网站，其中各种各样的产品可按逻辑分为不同的类别。</li><li>对于不具有逻辑层次或分组的单级网站，不应使用面包屑。<br><br></li></ul><h1 id="面包屑导航的类型"><a href="#面包屑导航的类型" class="headerlink" title="面包屑导航的类型"></a>面包屑导航的类型</h1><p>面包屑可以基于位置、路径或属性。</p><h3 id="1-基于位置的面包屑"><a href="#1-基于位置的面包屑" class="headerlink" title="1. 基于位置的面包屑"></a>1. 基于位置的面包屑</h3><p>基于位置的面包屑代表着一个网站的结构。它可以帮助访问者理解和浏览网站具有多个级别（通常两个以上）的层次结构。对于从外部源（例如，搜索引擎结果页）进入网站更深层次的访问者来说，这种类型的面包屑具有非常大的支撑作用。<br><img src="/2019/05/03/译-网站上的面包屑导航：什么、何时与如何/Location-based-navigation.png"></p><p><center><p style="font-size:12px; color:#C0C0C0">基于位置的面包屑导航。图片来源：<a href="https://marketingland.com/" target="_blank" rel="noopener">marketingland</a></p><center></center></center></p><p>在下面的例子（来自 BestBuy）中，每一个文本链接都对应着一个比它右边的页面更高一级的页面。<br><img src="/2019/05/03/译-网站上的面包屑导航：什么、何时与如何/Location-Based-Breadcrumb.jpeg"></p><p><center><p style="font-size:12px; color:#C0C0C0">来自 <a href="https://www.bestbuy.com/" target="_blank" rel="noopener">BestBuy</a> 的基于位置的面包屑导航</p><center></center></center></p><h3 id="2-基于路径的面包屑"><a href="#2-基于路径的面包屑" class="headerlink" title="2. 基于路径的面包屑"></a>2. 基于路径的面包屑</h3><p>基于路径的面包屑（也称作「历史记录」）显示了用户访问某个特定页面的整个路径。这种类型的面包屑链接通常是动态生成的。有时候，基于路径的面包屑很有帮助，但大多数时候，它会令人感到困惑──访问者通常会漫不经心地浏览，从一个页面跳到另一个页面。这样一个曲折的路径对于用户而言，并没有太大的帮助，而且很容易由浏览器中的「后退」按钮来替代。最后，对于那些直接到达网站中深层级页面的访问者来说，历史记录是没有用的。</p><p>下面是一个基于路径的面包屑导航的链接示例，它显示了导航到目标页面的两条路径。<br><img src="/2019/05/03/译-网站上的面包屑导航：什么、何时与如何/Path-based-navigation.png"></p><p><center><p style="font-size:12px; color:#C0C0C0">基于路径的面包屑导航。图片来源：<a href="https://www.oracle.com/webfolder/ux/middleware/richclient/index.html?/webfolder/ux/middleware/richclient/guidelines5/breadcrumbs.html" target="_blank" rel="noopener">Oracle</a></p><center></center></center></p><h3 id="3-基于属性的面包屑"><a href="#3-基于属性的面包屑" class="headerlink" title="3. 基于属性的面包屑"></a>3. 基于属性的面包屑</h3><p>基于属性的面包屑列出了可跳转至特定页面或最常见产品的类别──因为这种类型的面包屑对电子商务网站非常有用。这种面包屑有助于访问者理解产品之间的关系，并提供了一种不同的方式。<br><img src="/2019/05/03/译-网站上的面包屑导航：什么、何时与如何/Attribute-based-navigation.png"></p><p><center><p style="font-size:12px; color:#C0C0C0">基于属性的面包屑导航。图片来源：<a href="https://marketingland.com/" target="_blank" rel="noopener">marketingland</a></p><center></center></center></p><p>例如，在 TM Lewin 网站中，面包屑导航显示了某一个特定页面上的展示的所有项目的属性：</p><img src="/2019/05/03/译-网站上的面包屑导航：什么、何时与如何/attributes-of-the-items.jpeg"><p><center><p style="font-size:12px; color:#C0C0C0">这个页面显示了所有的具有「Slim Fit」属性的西装。图片来源：<a href="http://www.tmlewin.co.uk/" target="_blank" rel="noopener">T.M. Lewin</a></p><center></center></center></p><h3 id="层次结构还是历史记录？"><a href="#层次结构还是历史记录？" class="headerlink" title="层次结构还是历史记录？"></a>层次结构还是历史记录？</h3><p>根据经验法则，面包屑应该显示网站的层次结构，而不是用户的历史记录。因此，使用基于位置或基于属性的面包屑，而不是基于路径的面包屑。<br><br></p><h1 id="面包屑的最佳实践"><a href="#面包屑的最佳实践" class="headerlink" title="面包屑的最佳实践"></a>面包屑的最佳实践</h1><p>在设计面包屑导航时，请记住以下几点：</p><h3 id="1-不要使用面包屑代替主导航"><a href="#1-不要使用面包屑代替主导航" class="headerlink" title="1. 不要使用面包屑代替主导航"></a>1. 不要使用面包屑代替主导航</h3><p>面包屑导航应该被视为一个额外的功能，而不是取代有效的主导航菜单。请记住，这是一个便利功能；一个辅助导航方案；另一种可选择的在网站中导航的方式。<br><img src="/2019/05/03/译-网站上的面包屑导航：什么、何时与如何/Apple.png"></p><p><center><p style="font-size:12px; color:#C0C0C0">Apple 使用面包屑导航来支持主导航</p><center></center></center></p><h3 id="2-导航中不应包含当前页面的链接"><a href="#2-导航中不应包含当前页面的链接" class="headerlink" title="2. 导航中不应包含当前页面的链接"></a>2. 导航中不应包含当前页面的链接</h3><p>面包屑导航中的最后一项（用户当前的位置）是可选的──如果要显示它，请确保它是不可点击的。由于用户已经在此页面上，所以将当前页面的链接添加到面包屑导航中不具任何意义。</p><h3 id="3-使用分隔符"><a href="#3-使用分隔符" class="headerlink" title="3. 使用分隔符"></a>3. 使用分隔符</h3><p>面包屑导航中，用于分隔链接的最容易辨认的符号是「大于」符号（&gt;）。通常，「&gt;」符号用于表示层次结构，如「父类别 &gt; 子类别」格式中的一样。其他可使用的符号是指向右边的箭头（→），直角引号（»）和斜杠（/）。符号的选择取决于网站的美观程度和使用的面包屑类型：<br><img src="/2019/05/03/译-网站上的面包屑导航：什么、何时与如何/Use-Separators1.png"></p><p><center><p style="font-size:12px; color:#C0C0C0">图片来源：Dribbble</p><center></center></center></p><img src="/2019/05/03/译-网站上的面包屑导航：什么、何时与如何/Use-Separators2.png"><p><center><p style="font-size:12px; color:#C0C0C0">图片来源：<a href="https://dribbble.com/shots/2729768-Breadcrumbs" target="_blank" rel="noopener">Dribbble, Oleg Frolov</a></p><center></center></center></p><h3 id="4-选择适当的尺寸和间距"><a href="#4-选择适当的尺寸和间距" class="headerlink" title="4. 选择适当的尺寸和间距"></a>4. 选择适当的尺寸和间距</h3><p>在设计时请仔细考虑目标尺寸与边距。不同面包屑级别之间应该有足够的间距，否则人们使用起来可能会比较困难。但同时，面包屑又不应在页面中占据主导地位，因此它们应该不如主导航菜单突出。</p><h3 id="5-不要使它成为设计的焦点"><a href="#5-不要使它成为设计的焦点" class="headerlink" title="5. 不要使它成为设计的焦点"></a>5. 不要使它成为设计的焦点</h3><p>不要使用花哨的字体或者鲜艳的颜色，因为这样做将失去使用面包屑导航的意义。在设计面包屑的尺寸和样式时需要遵循的一条经验法则是，它不应该是进入页面时吸引用户注意力的第一项内容。</p><p>下面例子中的面包屑导航设计得还不错，但它太引人注目了，可能会分散访问者对主导航和主要内容的注意力。<br><img src="/2019/05/03/译-网站上的面包屑导航：什么、何时与如何/Don’t-Make-It-the-Focal-Point-of-the-Design.png"></p><p><center><p style="font-size:12px; color:#C0C0C0">图片来源：Dribbble</p><center></center></center></p><p><a href="https://support.google.com/" target="_blank" rel="noopener">Google</a> 的面包屑导航看起来不花哨，但是用户可以轻松找到并使用它。<br><img src="/2019/05/03/译-网站上的面包屑导航：什么、何时与如何/Google.png"></p><h3 id="6-不要在移动网站上使用面包屑"><a href="#6-不要在移动网站上使用面包屑" class="headerlink" title="6. 不要在移动网站上使用面包屑"></a>6. 不要在移动网站上使用面包屑</h3><p>如果您在使用移动设备时觉得需要使用面包屑来进行导航，那么您供移动设备使用的网站设计可能出了什么问题。极有可能是，对于移动设备所提供的特定类型的使用与环境而言，您的网站太复杂了（嵌套太深了）。为了解决这个问题，您应该首先考虑如何使它不那么复杂，所以面包屑甚至都不是讨论的重点。<br><br></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>面包屑所做的就是让访问者更容易在网站中进行浏览，前提是它的内容和总体结构具有意义。 这是为数不多的能够提高可用性和用户舒适度的简单方法之一。对于设计上仅占一行空间的控件来说，这已经足够了。<br><br></p><hr><p style="font-size:14px; color:#C0C0C0">以上翻译包含个人理解，仅用于个人学习。如有错误，求指正呀，非常感谢。^^<br>感谢原文作者及所有分享想法与经验的人。^^</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;question&quot;&gt; 原文：&lt;a href=&quot;https://uxplanet.org/breadcrumbs-for-web-sites-what-when-and-how-9273dacf1960&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Breadcrumbs For Web Sites: What, When and How&lt;/a&gt;&lt;br&gt;作者：&lt;a href=&quot;http://babich.biz/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Nick Babich&lt;/a&gt; (2016-08-17)&lt;br&gt;阅读时长：7m38s &lt;/blockquote&gt;

&lt;p&gt;面包屑导航（breadcrumbs 或 breadcrumb trail）是一个二级导航系统，用于显示用户在一个网站或 web app 中的位置。这个词来源于 &lt;a href=&quot;https://en.wikipedia.org/wiki/Hansel_and_Gretel&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hansel 和 Gretel&lt;/a&gt; 的童话故事，故事中的主人公通过用面包屑制造的一串踪迹找到了回家的路。&lt;/p&gt;
    
    </summary>
    
      <category term="译文" scheme="http://zyunn.com/categories/%E8%AF%91%E6%96%87/"/>
    
    
      <category term="译文" scheme="http://zyunn.com/tags/%E8%AF%91%E6%96%87/"/>
    
      <category term="交互设计" scheme="http://zyunn.com/tags/%E4%BA%A4%E4%BA%92%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="导航" scheme="http://zyunn.com/tags/%E5%AF%BC%E8%88%AA/"/>
    
      <category term="Web" scheme="http://zyunn.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>译 | 轮播图可用性：为内容过载的网站设计高效的用户界面</title>
    <link href="http://zyunn.com/2019/05/02/%E8%AF%91-%E8%BD%AE%E6%92%AD%E5%9B%BE%E5%8F%AF%E7%94%A8%E6%80%A7%EF%BC%9A%E4%B8%BA%E5%86%85%E5%AE%B9%E8%BF%87%E8%BD%BD%E7%9A%84%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1%E9%AB%98%E6%95%88%E7%9A%84%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2/"/>
    <id>http://zyunn.com/2019/05/02/译-轮播图可用性：为内容过载的网站设计高效的用户界面/</id>
    <published>2019-05-02T14:24:25.000Z</published>
    <updated>2019-05-03T09:54:37.044Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="question"> 原文：<a href="https://www.nngroup.com/articles/designing-effective-carousels/" target="_blank" rel="noopener">Carousel Usability: Designing an Effective UI for Websites with Content Overload</a><br>作者：<a href="https://www.nngroup.com/articles/author/kara-pernice/" target="_blank" rel="noopener">Kara Pernice</a> (2013-09-14)<br>阅读时长：10m23s </blockquote><p>摘要：轮播图允许多重内容占据同一个人人觊觎的空间。这可能会平息公司内讧，但是在或大或小的视窗中，人们通常都会直接滚动页面跳过轮播图。在用户界面中，静态的横幅图片或内容整合展示可能会是更好的解决方案。但如果轮播图就是你的主要元素，良好的导航和内容可以使它更高效。<a id="more"></a><br><br></p><h1 id="随处可见的轮播图"><a href="#随处可见的轮播图" class="headerlink" title="随处可见的轮播图"></a>随处可见的轮播图</h1><p>有很多种不同的 UI 元素，都可被视为轮播图。</p><img src="/2019/05/02/译-轮播图可用性：为内容过载的网站设计高效的用户界面/dell.png"><p><center><p style="font-size:12px; color:#C0C0C0">例如，可点击的几张图片的幻灯片（如戴尔网站上的）</p><center></center></center></p><img src="/2019/05/02/译-轮播图可用性：为内容过载的网站设计高效的用户界面/nest.png"><p><center><p style="font-size:12px; color:#C0C0C0">或者是，展示多个导航标志的动画（如 Nest 网站上的）。</p><center></center></center></p><p>但最普遍的类型是功能区域的轮播图（本文所讨论的），它通常具有以下特征：</p><ul><li>出现在主页顶部</li><li>占据首屏大部分空间</li><li>在同一位置同时显示多个内容</li><li>提供一些指示（或导航），表明这个轮播图中有多个特色内容或多帧数</li><li>每一帧中都包含了图片和少量文本</li><li>包含了关于组织的品牌或使命、特色信息的内容，或由促销活动组成<br><br></li></ul><h1 id="轮播图最大的优点"><a href="#轮播图最大的优点" class="headerlink" title="轮播图最大的优点"></a>轮播图最大的优点</h1><p>使用轮播图最大的好处在于，它<strong>允许多个内容占据主页上同一块主要区域</strong>，这有助于消除任何关于谁的内容最具价值的内部争论。另外一个好处是，使更多的信息显示在可视区域的顶部，因此人们有更大的机会真正注意到它们。<br><br></p><h1 id="轮播图最大的缺点"><a href="#轮播图最大的缺点" class="headerlink" title="轮播图最大的缺点"></a>轮播图最大的缺点</h1><p>你无法指望人们会注意到网站或企业内部网上的轮播图中的信息。不管是在 30 英寸还是 3 英寸的显示器上查看内容，<strong>人们通常都会直接滚动页面跳过这些图像</strong>，并错过其中所有内容，或者至少错过除第一帧以外的其他内容。<br>的确，有一些眼动研究和网络计量学表明某些轮播图获得了大量的眼光停留与点击量。但是，使用轮播图时最需要注意的是，人们经常会忽略它们，以及其中部分或全部内容。</p><p>第二个最重要的注意事项是，设计师将轮播图视为一组图片的合辑，而用户通常只关注他所看到的那个图片。从整体上来说，轮播图中的一组图片可以令人对一个组织的作用产生准确的印象。但<strong>如果一个用户只看到其中的一张图片，他很可能会对一个组织产生误解</strong>。当一张图片描述的是一些反常的事情，或与业务、章程相关性较弱的事情时，这个问题就经常发生。<br><br></p><h1 id="主页横幅可成为你的网站的视觉主角吗？考虑使用主页横幅代替轮播图"><a href="#主页横幅可成为你的网站的视觉主角吗？考虑使用主页横幅代替轮播图" class="headerlink" title="主页横幅可成为你的网站的视觉主角吗？考虑使用主页横幅代替轮播图"></a>主页横幅可成为你的网站的视觉主角吗？考虑使用主页横幅代替轮播图</h1><p>如今，多图片的轮播图已经取代了以前网络上随处可见的单个的「主页横幅」。但在某些情况下，成熟的 UI 替代品可能比比它年轻、充满活动的后代产物更适合。<br>原因之一在于，设计师的态度。一个轮播图中有可供选择的多帧图片，所以有机会达成共识或抓住用户的注意力，<strong>知道这一点会给设计师一种错误的安全感</strong>。他们认为人们会看到轮播图中所有的图片，所以他们会选择一些低质量的粗劣图片，以期弥补信息量的问题。但如果一个设计师只能选择一张图片表达一个观点，他们可能更倾向于选择一些强有力和示范性的东西。这样一来，用户就可真正专注于一个图片，而不是将注意力分散在几个图片中。<br>此外，一个静态的主页横幅比轮播的元素更不容易分散用户注意力，因此可提高人们用于发现站点中其他区域的全局导航的可见性。（附带一提的是，将主页横幅或轮播图中的任何重要信息也放在用户界面中的其他地方，是一个很好的方式，因为这样一来，与 IA 或页面进行交互的人们就有机会看到它。）</p><img src="/2019/05/02/译-轮播图可用性：为内容过载的网站设计高效的用户界面/bestbuy.png"><p><center><p style="font-size:12px; color:#C0C0C0">BestBuy 网站的主页使用了一个主页横幅来展示促销文案「Labor Day Savings Event」，以及销售日期与一个鲜明的黄色动作按钮「Shop Now」。</p><center></center></center></p><p>使 Best Buy 的主页横幅变得有效的原因有以下几点：<br>• &nbsp;电视机、笔记本电脑和冰箱的图片易于辨认，清晰地展示了正在出售的产品。这个主题图片是引人注意的、信息丰富的。<br>• &nbsp;字体、颜色与全局导航和主页眉中的字体、颜色相匹配，所以主页横幅看起来是网站内容的一部分，而不是一个强势的广告。<br>此外，这些特征都有助于传达 Best Buy 品牌，加强宣传他们每天售卖的产品。<br><br></p><h1 id="轮播图的设计准则"><a href="#轮播图的设计准则" class="headerlink" title="轮播图的设计准则"></a>轮播图的设计准则</h1><p>如果你决定使用轮播图作为你的主要视觉形式，可遵循以下准则来把它们做好。</p><h3 id="1-一个轮播图只包含-5-帧或-5-帧以下的图片，因为用户不太可能会查看超过-5-帧。"><a href="#1-一个轮播图只包含-5-帧或-5-帧以下的图片，因为用户不太可能会查看超过-5-帧。" class="headerlink" title="1. 一个轮播图只包含 5 帧或 5 帧以下的图片，因为用户不太可能会查看超过 5 帧。"></a>1. 一个轮播图只包含 5 帧或 5 帧以下的图片，因为用户不太可能会查看超过 5 帧。</h3><p>在移动设备上滑动浏览多帧图片是很费力的，当帧数超过 5 帧时，用户将很难辨别他们已经浏览过的图片的主题。同时，限制帧数将有助于用户发现内容，并在轮播图中再次找到它。</p><h3 id="2-使用简洁清晰、与组织宗旨一致的文案和图片。"><a href="#2-使用简洁清晰、与组织宗旨一致的文案和图片。" class="headerlink" title="2. 使用简洁清晰、与组织宗旨一致的文案和图片。"></a>2. 使用简洁清晰、与组织宗旨一致的文案和图片。</h3><p>阅读字体太小的文本与辨认尺寸过小的图片是很困难的，尤其是在移动设备上。把一个大尺寸、高密度的图片塞进一个小区域中是不合适的。文案与图片越清晰，用户就越有可能注意到并理解其中表达的含义。</p><img src="/2019/05/02/译-轮播图可用性：为内容过载的网站设计高效的用户界面/corning_glass_museum1.png"><p><center><p style="font-size:12px; color:#C0C0C0">Corning Museum of Glass 使用引人注目的图片与高度相关的文案，这些都符合博物馆的工作性质。</p><center><br></center></center></p><img src="/2019/05/02/译-轮播图可用性：为内容过载的网站设计高效的用户界面/corning_glass_museum2.png"><p><center><p style="font-size:12px; color:#C0C0C0">Corning Museum of Glass 使用滑动手风琴来显示丰富的图片。</p><center></center></center></p><h3 id="3-提示用户轮播图中有多少帧图片，以及当前图片所在帧数位置，以提升用户的控制感。"><a href="#3-提示用户轮播图中有多少帧图片，以及当前图片所在帧数位置，以提升用户的控制感。" class="headerlink" title="3. 提示用户轮播图中有多少帧图片，以及当前图片所在帧数位置，以提升用户的控制感。"></a>3. 提示用户轮播图中有多少帧图片，以及当前图片所在帧数位置，以提升用户的控制感。</h3><img src="/2019/05/02/译-轮播图可用性：为内容过载的网站设计高效的用户界面/coldwell_bank.png"><p><center><p style="font-size:12px; color:#C0C0C0">Coldwell Banker 是我们内部网设计 2018 年年度竞赛的 10 个获胜者之一。他们内部网的轮播图设计清晰地展示了重要的信息：一共有 5 帧，每一帧的内容都是必需的，并且很容易识别出哪一帧是当前选中的。</p><center><br></center></center></p><img src="/2019/05/02/译-轮播图可用性：为内容过载的网站设计高效的用户界面/delta.png"><p><center><p style="font-size:12px; color:#C0C0C0">Delta 使选中的点（在屏幕截图的底部）比其他两个点大，但是尺寸差别太细微了，所以不起作用。(给那些辨别不出来的朋友：中间那个是选中的，更大的。)</p><center></center></center></p><h3 id="4-使用易于理解和识别的图标与链接。"><a href="#4-使用易于理解和识别的图标与链接。" class="headerlink" title="4. 使用易于理解和识别的图标与链接。"></a>4. 使用易于理解和识别的图标与链接。</h3><p>导航控件旨在帮助人们识别选项，并在看到主框架中的内容后重新调用它们。例如，用户无法猜测一个数字或一个点点击后会显示什么，但可能记住绿色背景与关于环境的文章相关。在移动设备上，点是特别糟糕的提示，因为人们通常不会注意到它们（而且它们在 Android 比在 iOS 中更不标准）。</p><h3 id="5-确保导航控件在轮播图内显示，而不是在轮播图下方或者通过折叠分开来。这个设计有助于避免大型或小型显示器上的问题。"><a href="#5-确保导航控件在轮播图内显示，而不是在轮播图下方或者通过折叠分开来。这个设计有助于避免大型或小型显示器上的问题。" class="headerlink" title="5. 确保导航控件在轮播图内显示，而不是在轮播图下方或者通过折叠分开来。这个设计有助于避免大型或小型显示器上的问题。"></a>5. 确保导航控件在轮播图内显示，而不是在轮播图下方或者通过折叠分开来。这个设计有助于避免大型或小型显示器上的问题。</h3><img src="/2019/05/02/译-轮播图可用性：为内容过载的网站设计高效的用户界面/IBM.png"><p><center><p style="font-size:12px; color:#C0C0C0">IBM 提供了一个引人注目的轮播图，轮播中有可点击的图片按钮，但按钮很小，并且按钮上没有描述性的文案。</p><center><br></center></center></p><img src="/2019/05/02/译-轮播图可用性：为内容过载的网站设计高效的用户界面/shining_star_therapy.png"><p><center><p style="font-size:12px; color:#C0C0C0">在 iPhone 上查看时，Shining Star Therapy 网站上的轮播控件被截断了。这种出血效果比完全不显示控件好，但如果能看到完整的控件更好。</p><center></center></center></p><h3 id="6-如果为每一帧提供一个导航按钮（而不是用于滚动的箭头），请确保每个按钮看起来是不一样的，并且代表所在的那帧。"><a href="#6-如果为每一帧提供一个导航按钮（而不是用于滚动的箭头），请确保每个按钮看起来是不一样的，并且代表所在的那帧。" class="headerlink" title="6. 如果为每一帧提供一个导航按钮（而不是用于滚动的箭头），请确保每个按钮看起来是不一样的，并且代表所在的那帧。"></a>6. 如果为每一帧提供一个导航按钮（而不是用于滚动的箭头），请确保每个按钮看起来是不一样的，并且代表所在的那帧。</h3><p><a href="https://www.deere.com/en/" target="_blank" rel="noopener">John Deere</a> 的主页提供了带有文字的图片作为按钮，并且显示在轮播图之内，这些都发挥了很大的作用。（同时，它还有可向前向后切换轮播图的箭头。）<br>然而，它的文本非常小，难以阅读，并且对于分配给它们的小空间而言，这些用作按钮的图片过于密集了。</p><img src="/2019/05/02/译-轮播图可用性：为内容过载的网站设计高效的用户界面/john_deere1.png"> <img src="/2019/05/02/译-轮播图可用性：为内容过载的网站设计高效的用户界面/john_deere2.png"> <img src="/2019/05/02/译-轮播图可用性：为内容过载的网站设计高效的用户界面/john_deere3.png"><h3 id="7-使用足够大的链接与按钮，以便于识别和点击。"><a href="#7-使用足够大的链接与按钮，以便于识别和点击。" class="headerlink" title="7. 使用足够大的链接与按钮，以便于识别和点击。"></a>7. 使用足够大的链接与按钮，以便于识别和点击。</h3><p>尺寸小、紧挨着或显示在一个复杂背景上的按钮，将不容易被注意到或点击。</p><img src="/2019/05/02/译-轮播图可用性：为内容过载的网站设计高效的用户界面/roku.png"><p><center><p style="font-size:12px; color:#C0C0C0">在 Roku 网站上，当所在帧背景为浅色时，轮播图左右侧的箭头很容易被注意到与点击，但是在背景比较复杂的帧中，它们就不够明显了。</p><center><br></center></center></p><img src="/2019/05/02/译-轮播图可用性：为内容过载的网站设计高效的用户界面/roku2.png"><p><center><p style="font-size:12px; color:#C0C0C0">滚动后的 Roku 网站。</p><center><br></center></center></p><h1 id="自动轮播"><a href="#自动轮播" class="headerlink" title="自动轮播"></a>自动轮播</h1><p>在帧之间<a href="https://www.nngroup.com/articles/auto-forwarding/" target="_blank" rel="noopener">自动轮播</a>可引导人们浏览信息。但有些情况下，不推荐使用自动轮播。</p><h3 id="如果是以下情况，请勿使用自动轮播："><a href="#如果是以下情况，请勿使用自动轮播：" class="headerlink" title="如果是以下情况，请勿使用自动轮播："></a>如果是以下情况，请勿使用自动轮播：</h3><p>• &nbsp;  你不确定能否把握好<strong>轮播时长</strong>，以便大多数人在指定的时间内阅读并吸收轮播图中的内容。若轮播得太快，用户将无法读取信息，这对他们来说是令人沮丧的，对于试图突出重点的组织来说也是不好的。若轮播得太慢，则当它们动起来时，用户会对此感到惊讶。<br>• &nbsp;  你的<strong>内容与广告相似</strong>。用户倾向于<a href="https://www.nngroup.com/articles/banner-blindness-old-and-new-findings/" target="_blank" rel="noopener">忽略看起来像广告的动画</a>（如果他们并没有购物的心态）。我们的<a href="https://www.nngroup.com/topic/eyetracking/" target="_blank" rel="noopener">眼球追踪</a>研究表明，动画广告的浏览率仅为 27%。<br><br></p><h1 id="自动轮播的建议"><a href="#自动轮播的建议" class="headerlink" title="自动轮播的建议"></a>自动轮播的建议</h1><p>• &nbsp;<strong>不要在移动设备上使用自动轮播</strong>，因为：1. 它降低了页面的加载速度；2. 因为页面很短，用户通常会快速滚动，所以当轮播图切换时，用户可能正往下看，并忽略这个变化。<br>• &nbsp;<strong>通过测试得出正确的轮播时长</strong>，或者至少估计用户阅读文本和处理图像需要的平均时间。我们以每秒 3 个单词为准则。<br>• &nbsp;不要停在最后一帧。<strong>继续循环轮播</strong>（并显示所选的帧）。<br><br></p><h1 id="静态（非自动轮播）的轮播图建议"><a href="#静态（非自动轮播）的轮播图建议" class="headerlink" title="静态（非自动轮播）的轮播图建议"></a>静态（非自动轮播）的轮播图建议</h1><p>确保对轮播图感兴趣的用户能意识到除了当前显示的图像、内容外还有其他内容。提供清晰的视觉元素，<a href="https://www.nngroup.com/articles/illusion-of-completeness/" target="_blank" rel="noopener">以代表还有更多内容</a>，比如：</p><p>• &nbsp;  导航链接和图标（如上所述）<br>• &nbsp;  切断，或者使图片“出血”，并显示下一个图片的一部分。</p><img src="/2019/05/02/译-轮播图可用性：为内容过载的网站设计高效的用户界面/skyscanner.png"><p><center><p style="font-size:12px; color:#C0C0C0">Windows 8 上的 Skyscanner app 将（右侧的）页面内容截断，以表明还有更多内容。</p><center><br></center></center></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>如果你正在使用轮播图，以期人们可以看到多种多样的内容，要记住大部分用户只会注意到第一帧，甚至全部都不会注意到。因此，请确保那些重要的内容也被谨慎地放置在 IA 网站上的其他页面中。考虑使用静态的轮播图或主页横幅，而不是自动轮播的图片。此外，在任何轮播图的导航中，都要确保按钮和链接是清晰的，足够大、易于理解和点击的，并且当前选中的那一帧的按钮应该显示为选中的状态。这样，你将创造出一种奇妙的愉悦感，而不是一个恐怖屋。</p><blockquote class="question"> 相关文章：<br><a href="https://uxplanet.org/best-practices-for-hero-images-eeb234b664d6" target="_blank" rel="noopener">主页横幅的最佳实践</a><br><a href="https://www.smashingmagazine.com/2016/07/ten-requirements-for-making-home-page-carousels-work-for-end-users/" target="_blank" rel="noopener">为终端用户设计主页轮播图的 10 个要求</a><br></blockquote><p><br></p><hr><p style="font-size:14px; color:#C0C0C0">以上翻译包含个人理解，仅用于个人学习。如有错误，求指正呀，非常感谢。^^<br>感谢原文作者及所有分享想法与经验的人。^^</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;question&quot;&gt; 原文：&lt;a href=&quot;https://www.nngroup.com/articles/designing-effective-carousels/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Carousel Usability: Designing an Effective UI for Websites with Content Overload&lt;/a&gt;&lt;br&gt;作者：&lt;a href=&quot;https://www.nngroup.com/articles/author/kara-pernice/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Kara Pernice&lt;/a&gt; (2013-09-14)&lt;br&gt;阅读时长：10m23s &lt;/blockquote&gt;

&lt;p&gt;摘要：轮播图允许多重内容占据同一个人人觊觎的空间。这可能会平息公司内讧，但是在或大或小的视窗中，人们通常都会直接滚动页面跳过轮播图。在用户界面中，静态的横幅图片或内容整合展示可能会是更好的解决方案。但如果轮播图就是你的主要元素，良好的导航和内容可以使它更高效。&lt;/p&gt;
    
    </summary>
    
      <category term="译文" scheme="http://zyunn.com/categories/%E8%AF%91%E6%96%87/"/>
    
    
      <category term="译文" scheme="http://zyunn.com/tags/%E8%AF%91%E6%96%87/"/>
    
      <category term="交互设计" scheme="http://zyunn.com/tags/%E4%BA%A4%E4%BA%92%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="NN/g" scheme="http://zyunn.com/tags/NN-g/"/>
    
      <category term="Web" scheme="http://zyunn.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>译 | 复选框与单选按钮的 12 个可用性问题</title>
    <link href="http://zyunn.com/2019/05/02/%E5%A4%8D%E9%80%89%E6%A1%86%E4%B8%8E%E5%8D%95%E9%80%89%E6%8C%89%E9%92%AE%E7%9A%84-12-%E4%B8%AA%E5%8F%AF%E7%94%A8%E6%80%A7%E9%97%AE%E9%A2%98/"/>
    <id>http://zyunn.com/2019/05/02/复选框与单选按钮的-12-个可用性问题/</id>
    <published>2019-05-02T09:04:40.000Z</published>
    <updated>2019-05-03T09:54:27.797Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="question"> 原文：<a href="https://www.nngroup.com/articles/checkboxes-vs-radio-buttons/" target="_blank" rel="noopener">Checkboxes vs. Radio Buttons</a><br>作者：<a href="https://www.nngroup.com/articles/author/jakob-nielsen/" target="_blank" rel="noopener">Jakob Nielsen</a> (2004-09-27)<br>阅读时长：8m56s </blockquote><p>摘要：何时使用复选框控件与何时使用单选按钮控件的用户界面设计指南。关于复选框与单选按钮的 12 个可用性问题。<br><a id="more"></a></p><p>我最近在一个网站的注册页面中遇到了下面的这个提示框。它至少存在 2 个设计上的错误。在进一步阅读之前，试试你能否找出来吧。</p><img src="/2019/05/02/复选框与单选按钮的-12-个可用性问题/来自一个网站的注册页面.png"><p><center><p style="font-size:12px; color:#C0C0C0">一个网站的注册页面</p><center></center></center></p><p>• &nbsp; 错误一是本文的主要焦点：这里本应使用单选按钮，却错误地使用了复选框。因为上面的两个选择是互斥的，所以这个页面应该提供给用户的是单选按钮，以限制用户准确地选择某一个选项。</p><p>• &nbsp; 错误二是这里先提出了两个问题，然后把它们放在了一个又大又冗长的提示框里。在这里，只用一个简短的问题会好很多：「好的，向我发送关于其他特色产品、解决方案、服务和教育机会的信息。」</p><p>• &nbsp; 好笑的是，对于单个问题来说，使用复选框是正确的，因为用户将回答「是」或「否」。来自<a href="https://www.nngroup.com/reports/ecommerce-user-experience/" target="_blank" rel="noopener">电商网站用户测试</a>报告的建议是，复选框默认不勾选，这样用户就必须主动点击它才能选择接收更多的消息。<br><br></p><h1 id="何时使用哪个控件"><a href="#何时使用哪个控件" class="headerlink" title="何时使用哪个控件"></a>何时使用哪个控件</h1><p>自 1984 年第一版《Inside Macintosh》问世以来，复选框和单选按钮的使用规则一直都是一样的。后续所有的 GUI 标准与 W3C 官方的 Web 标准都包含了与之相同的、这两个控件的定义。</p><ol><li><p>当列表中有 2 个或多个互斥的选项，并且用户必须从中明确选择一个选项时，<strong>使用单选按钮</strong>。换而言之，单击未选中的单选按钮，将取消选中列表中先前已选中的其他任何按钮。</p></li><li><p>当有一系列的选项，并且用户可选择任意个数的选项（包括 0 个，1 个或多个）时，<strong>使用复选框</strong>。换而言之，列表中每一个复选框都与其他复选框相互独立，因此选中一个复选框不会取消选中其他复选框。</p></li><li><p>一个<strong>单独的复选框</strong>可用作用户可打开或关闭的单个选项。</p></li></ol><p>听起来十分简单，对吧？</p><p>然而，我却经常遇到错误使用单选按钮和复选框的网页。即使已经过了 20 年，还是值得再次提出这些设计准则。<br><br></p><h1 id="其他设计准则"><a href="#其他设计准则" class="headerlink" title="其他设计准则"></a>其他设计准则</h1><ol start="4"><li><p><strong>使用标准的视觉表现形式</strong>。复选框应该是一个小方框，选中时带有一个复选标记或一个 X。而单选按钮则应该是一个小圆圈，选中时，圆圈中有一个实心圆。</p></li><li><p><strong>以组的视觉形式呈现一组选项</strong>，并将它与同一页面上的其他组明显区分开。上面的提示框案例就违反了这个原则，因为布局使两个复选框看起来像是单独的主题，而实际上它们是同一个主题的两个可选项。<br>• &nbsp; 使用子标题将一长串的复选框按逻辑分解成不同的组，可使这些选项便于快速扫描，易于理解。这样做的风险在于，用户可能会将每个子组视为一组单独的选项，但这对于复选框来说并不一定是致命的──因为无论如何，每个复选框都是独立的选择。而相反地，单选按钮列表则必须是统一的，你不能使用子标题来分解它。</p></li></ol><ol start="6"><li><strong>垂直排列你的列表，每一行仅放置一个选项</strong>。如果必须使用一行包含多个选项的水平布局，请确保把按钮和标签分隔开，以便清楚地知道哪个选项与哪个标签匹配。<br>例如，下面这个列表，就很难明白哪个按钮是与选项四匹配的。</li></ol><img src="/2019/05/02/复选框与单选按钮的-12-个可用性问题/一个水平布局的单选按钮列表.png"><p><center><p style="font-size:12px; color:#C0C0C0">一个水平布局的单选按钮列表</p><center></center></center></p><ol start="7"><li><strong>复选框标签应使用正向、主动的措辞</strong>，以便明确当用户勾选复选框时将会发生什么。换句话说，避免使用譬如「不要向我发送电子邮件」的否定语态，因为这将意味着用户必须勾选这个复选框，以阻止某件事情的发生。<br>• &nbsp; 使用清晰的复选框标签，以便用户了解勾选与不勾选这个复选框分别会发生什么。<br>• &nbsp; 如果你无法做到这一点，最好使用两个单选按钮──一个用于打开这个功能，一个用于关闭它──并且为这两者写上明确的标签。</li></ol><ol start="8"><li><p>如果可能的话，<strong>使用单选按钮而不是下拉菜单</strong>。单选按钮具有较低的<a href="https://www.nngroup.com/articles/minimize-cognitive-load/" target="_blank" rel="noopener">认知负荷</a>，因为它使所有选项永久可见，以便用户可轻松地比较它们。对于那些难以进行精确的鼠标移动的用户，单选按钮也更容易操作。（有限的空间有时可能会迫使你违反这个准则，但请尽可能保持所有选项可见。）</p></li><li><p><strong>始终为单选按钮列表提供一个默认选择</strong>。根据定义，<a href="https://www.nngroup.com/articles/radio-buttons-default-selection/" target="_blank" rel="noopener">单选按钮总是有且仅有一个选项被选中</a>，因此不应呈现没有默认选择的情况。（相反地，复选框则通常默认不选中任何选项。）<br>• &nbsp;  如果用户有可能需要避免做出选择，那么您应该为这个选择提供一个单选按钮，例如一个标签为「无」的单选按钮。为用户提供一个明确的、中性的可点击选项，比要求不从列表中进行选择的隐性行为要好，特别是因为后者违反了总是只选择一个选项的规则。</p></li><li><p><strong>因为单选按钮总是只需要一个选项，所以要确保选项既全面又清晰</strong>。例如，在<a href="https://www.nngroup.com/reports/senior-citizens-on-the-web/" target="_blank" rel="noopener">对年长用户的测试</a>中，他们无法完成一个要求他们选择工作类型的表单，因为它没有提供一个「退休」的选项。如果无法做到全面，则需要提供一个标签为「其他」的选项，并辅以输入字段。</p></li><li><p><strong>让用户通过点击按钮 / 复选框本身或它的标签来选择一个选项</strong>：根据<a href="http://www.asktog.com/columns/022DesignedToGiveFitts.html" target="_blank" rel="noopener">费茨定律</a>，点击目标越大越易于点击。在 HTML 表单中，通过<a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label" target="_blank" rel="noopener">使用「Label」元素对每个标签进行编码</a>，可轻松实现这一点，就像我在上面的水平单选按钮示例中所展示的那样（点击单词「Four」可选中该选项）。（译者注：上面那个水平单选按钮的图片截自原文网页页面，原页面上是可交互的）。在对<a href="https://www.nngroup.com/articles/ephemeral-web-based-applications/" target="_blank" rel="noopener">Flash 中基于 Web 的应用</a>的测试中，我们发现，通过在可视点击区域以外增加一些像素来增大点击区域的话，可使用户的错误远远减少。（这种效果在 HTML 中很难实现，尽管一些 CSS 技巧可能会奏效。）</p></li><li><p><strong>复选框和单选按钮只用于改变设置，而不是作为动作按钮来使某些事件发生</strong>。此外，在用户单击命令按钮（如标签为「确定」，或者「继续进行 XXX（XXX 为进程中的下一步）」）之前，这些更改的设置不会生效。<br>• &nbsp; 如果用户点击了「后退」按钮，则对页面上的复选框和单选按钮所做的任何更改都应被取消，并恢复原有的设置。如果用户点击了「取消」按钮，相同的准则也是成立的（虽然导航网页并<a href="https://www.nngroup.com/articles/reset-and-cancel-buttons/" target="_blank" rel="noopener">不需要「取消」按钮</a>，因为「后退」按钮的作用是相同的）。<br>• &nbsp; 如果用户点击「后退」按钮后，又点击了「前进」按钮，那这种情况按「撤销 - 重做」的顺序来理解是最合适的，这意味着控件的外观应该呈现用户的更改，就像用户从未点击过「后退」一样。在用户点击「确定」或其他相同的命令之前，这些更改仍然不会对后端起作用。<br><br></p></li></ol><h1 id="为什么这些准则很重要"><a href="#为什么这些准则很重要" class="headerlink" title="为什么这些准则很重要"></a>为什么这些准则很重要</h1><p>当我在坚持复选框和单选按钮的正确使用时，我是不是太挑剔了？不。<a href="https://www.nngroup.com/articles/do-interface-standards-stifle-design-creativity/" target="_blank" rel="noopener">遵循 GUI 标准和正确使用控件有着很重要的可用性原因</a>。</p><p>最重要的是，<a href="https://www.nngroup.com/articles/the-need-for-web-design-standards/" target="_blank" rel="noopener">遵循设计标准</a><strong>提高了用户预知控件的功能与操作方式的能力</strong>。当他们看到一个复选框列表时，他们知道可以选择多个选项。当他们看到一个单选按钮列表时，他们知道只能选择一个选项。（当然，不是每个用户都知道这一点，但大部分用户都知道，特别是自从 1984 年这成为一个设计标准以来。）</p><p>因为许多人都知道如何操作标准的 GUI 小部件，所以正确地使用这些元素可<a href="https://www.nngroup.com/articles/ideologies-of-web-design/" target="_blank" rel="noopener">增强用户对技术的掌握感</a>。相反地，<strong>违反这些标准则会使用户界面感觉很脆弱</strong>──就好像任何事情都可能在没有任何警告的情况下发生一样。譬如说，你猜想你在点击一个单选按钮后是不会立即产生任何影响的，所以你可以在做了一个选择之后、但点击「确定」之前重新考虑你的选择。在这种情况下，如果一个网站违反了这个标准，并且在你输入一个选择之后，意外地使你进入下一个页面，那这将令人感到不快。更糟糕的是，这促使你对在网站上其他地方录入表单时可能会发生的情况产生担心。</p><p><strong>复选框和单选按钮最大的可用性问题来自那些含糊不清、具有误导性或者描述了普通用户无法理解的选项的标签</strong>。语境线索可缓解后一个问题，但最好还是对任何一组重要的交互控件进行用户测试。幸运的是，复选框和单选按钮都很容易使用<a href="https://www.nngroup.com/reports/paper-prototyping-training-video/" target="_blank" rel="noopener">纸质原型</a>来进行测试，所以你不需要实现任何东西就可以查看用户是否理解这些标签、并正确使用这些小部件。</p><p>没有专业的交互设计师会犯在应该使用单选按钮时却使用复选框的错误。这两个控件之间的区别是任何交互设计课程中首先会教的东西之一。因此，还有正确使用小部件的最后一个理由：如果你不这样做，你将会被视为一个业余爱好者。<br><br></p><hr><p style="font-size:14px; color:#C0C0C0">以上翻译包含个人理解，仅用于个人学习。如有错误，求指正呀，非常感谢。^^<br>感谢原文作者及所有分享想法与经验的人。^^</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;question&quot;&gt; 原文：&lt;a href=&quot;https://www.nngroup.com/articles/checkboxes-vs-radio-buttons/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Checkboxes vs. Radio Buttons&lt;/a&gt;&lt;br&gt;作者：&lt;a href=&quot;https://www.nngroup.com/articles/author/jakob-nielsen/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Jakob Nielsen&lt;/a&gt; (2004-09-27)&lt;br&gt;阅读时长：8m56s &lt;/blockquote&gt;

&lt;p&gt;摘要：何时使用复选框控件与何时使用单选按钮控件的用户界面设计指南。关于复选框与单选按钮的 12 个可用性问题。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="译文" scheme="http://zyunn.com/categories/%E8%AF%91%E6%96%87/"/>
    
    
      <category term="译文" scheme="http://zyunn.com/tags/%E8%AF%91%E6%96%87/"/>
    
      <category term="交互设计" scheme="http://zyunn.com/tags/%E4%BA%A4%E4%BA%92%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="NN/g" scheme="http://zyunn.com/tags/NN-g/"/>
    
      <category term="Web" scheme="http://zyunn.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>译 | 单选按钮与下拉菜单的 7 个使用原则</title>
    <link href="http://zyunn.com/2019/05/02/%E5%8D%95%E9%80%89%E6%8C%89%E9%92%AE%E4%B8%8E%E4%B8%8B%E6%8B%89%E8%8F%9C%E5%8D%95%E7%9A%84-7-%E4%B8%AA%E4%BD%BF%E7%94%A8%E5%8E%9F%E5%88%99/"/>
    <id>http://zyunn.com/2019/05/02/单选按钮与下拉菜单的-7-个使用原则/</id>
    <published>2019-05-02T07:45:14.000Z</published>
    <updated>2019-05-02T09:39:56.423Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="question"> 原文：<a href="https://blog.prototypr.io/7-rules-of-using-radio-buttons-vs-drop-down-menus-fddf50d312d1" target="_blank" rel="noopener">7 Rules of Using Radio Buttons vs Drop-Down Menus</a><br>作者：Saadia Minhas (2018-05-06)<br>阅读时长：3m43s </blockquote><p>不管你正在使用移动应用还是基于网页的工具，表单都是用户界面中至关重要的一部分。同时，表单也是用户交互的最佳来源。用户通过表单录入、提供信息，系统则通过理解这些信息来满足用户需求。<a id="more"></a> </p><p>输入控件、输入校验、错误处理、用户反馈等等，都是可用表单中的一些项目。</p><p>单选按钮和下拉菜单是其中两个非常重要的输入控件。当用户需要输入时，它们可以互换使用。然而，如果我们仔细研究这两个控件的可用性，很明显，它们都有各自特定的使用场景，以便用户更简单地选择给定的输入。</p><p>以下是基于这个可用性研究的一些使用原则，它们将有助于你在设计表单时决定使用哪个控件更合适。<br><br></p><h1 id="使用单选按钮"><a href="#使用单选按钮" class="headerlink" title="使用单选按钮"></a>使用单选按钮</h1><h3 id="1-当需要强调选项时"><a href="#1-当需要强调选项时" class="headerlink" title="#1 当需要强调选项时"></a>#1 当需要强调选项时</h3><p>下面是一些需要强调选项的情况：<br>• &nbsp; 没有明确的默认选项或推荐选项<br>• &nbsp; 希望用户阅读所有选项<br>• &nbsp; 用户不熟悉这些选项，并且较少有机会甚至没有机会预知它们</p><img src="/2019/05/02/单选按钮与下拉菜单的-7-个使用原则/when-options-need-to-be-emphasize.png"><p><center><p style="font-size:12px; color:#C0C0C0">当需要强调选项时</p><center></center></center></p><p>在上面这个例子中，使用下拉菜单并不是一个很好的方案，因为默认选项并没有提供关于其他选项的线索。</p><h3 id="2-当选项少于-5-个时"><a href="#2-当选项少于-5-个时" class="headerlink" title="#2 当选项少于 5 个时"></a>#2 当选项少于 5 个时</h3><p>选项较少时最好并排放置，以便：<br>• &nbsp; 用户可轻松快速的浏览所有选项<br>• &nbsp; 提供快速响应，而不是打开下拉菜单后再从多个选项中进行选择</p><img src="/2019/05/02/单选按钮与下拉菜单的-7-个使用原则/less-number-of-options.png"><p><center><p style="font-size:12px; color:#C0C0C0">选项较少时</p><center></center></center></p><p>如上面的例子所示，当用户需要从 2 至 4 个选项中进行选择时，使用单选按钮更合适。</p><h3 id="3-当选项之间需要进行明确的比较时"><a href="#3-当选项之间需要进行明确的比较时" class="headerlink" title="#3 当选项之间需要进行明确的比较时"></a>#3 当选项之间需要进行明确的比较时</h3><p>可比较的选项最好并排放置，因为：<br>• &nbsp; 用户可对所有选项一目了然，并轻松进行比较<br>• &nbsp; 从下拉菜单中比较和确定选项需要耗费时间<br>• &nbsp; 如果使用下拉菜单，那么用户每次需要检查已选项时，都必须再次打开下拉菜单对选项进行比较</p><img src="/2019/05/02/单选按钮与下拉菜单的-7-个使用原则/comparison-of-options-is-required.png"><p><center><p style="font-size:12px; color:#C0C0C0">当需要比较选项时</p><center></center></center></p><p>上面这个比较好的例子是，关于用户必须做出严肃决定的订阅计划的选择。</p><h3 id="4-当需要优先考虑可见性和快速响应时"><a href="#4-当需要优先考虑可见性和快速响应时" class="headerlink" title="#4 当需要优先考虑可见性和快速响应时"></a>#4 当需要优先考虑可见性和快速响应时</h3><p>清晰的可见性及选项的可快速浏览对用户来说更容易理解。<br>• &nbsp; 对于较长的表单，可更简单快捷地扫描并标记所需选项<br>• &nbsp; 每次都点击下拉菜单去选择某个选项，会耗费很多时间</p><img src="/2019/05/02/单选按钮与下拉菜单的-7-个使用原则/long-forms.png"><p><center><p style="font-size:12px; color:#C0C0C0">长表单──Survey Monkey Questionnaire</p><center></center></center></p><p>从上面例子可明显看出，所有可选项对用户可见的长表单提供了更好的用户体验。<br><br></p><h1 id="使用下拉菜单"><a href="#使用下拉菜单" class="headerlink" title="使用下拉菜单"></a>使用下拉菜单</h1><h3 id="1-当默认选项是推荐选项时"><a href="#1-当默认选项是推荐选项时" class="headerlink" title="#1 当默认选项是推荐选项时"></a>#1 当默认选项是推荐选项时</h3><p>这种情况下，仅查看推荐选项使用户更容易做出选择，因为：<br>• &nbsp; 显示所有选项将吸引用户的注意力<br>• &nbsp; 不鼓励用户更改默认选项</p><img src="/2019/05/02/单选按钮与下拉菜单的-7-个使用原则/default-recommended-option.png"><p><center><p style="font-size:12px; color:#C0C0C0">默认推荐选项</p><center></center></center></p><p>在上面的例子中，用户基本不需要改变默认选项，所以没有必要显示所有的选项。</p><h3 id="2-当有大量相似的选项可选时"><a href="#2-当有大量相似的选项可选时" class="headerlink" title="#2 当有大量相似的选项可选时"></a>#2 当有大量相似的选项可选时</h3><p>当有大量相似选项时，推荐使用下拉菜单，因为：<br>• &nbsp; 用户很容易预知这些选项<br>• &nbsp; 用户没有必要并排查看所有选项</p><img src="/2019/05/02/单选按钮与下拉菜单的-7-个使用原则/A-lot-of-familiar-options.png"><p><center><p style="font-size:12px; color:#C0C0C0">大量相似选项</p><center></center></center></p><h3 id="3-当选项超过-7-个时"><a href="#3-当选项超过-7-个时" class="headerlink" title="#3 当选项超过 7 个时"></a>#3 当选项超过 7 个时</h3><p>当选项个数较多时，并不适合并排显示，因为：<br>• &nbsp; 如果一大堆选项并排放置，用户界面将变得杂乱。用户在查看时有可能会感到困惑。<br>• &nbsp; 扫描大量的单选选项需要耗费时间</p><img src="/2019/05/02/单选按钮与下拉菜单的-7-个使用原则/More-than-7-options.png"><p><center><p style="font-size:12px; color:#C0C0C0">超过 7 个选项</p><center></center></center></p><p>此外，对于长下拉列表，提供文本输入框是一个不错的方法。用户在其中输入选项名称后，列表仅显示出过滤选项。这将使选择更轻松快捷。</p><img src="/2019/05/02/单选按钮与下拉菜单的-7-个使用原则/Enter-option-to-filter-the-list.png"><p><center><p style="font-size:12px; color:#C0C0C0">输入选项来过滤列表</p><center></center></center></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>为提高表单的用户体验，提供正确的控件以便用户输入是非常重要的。由于大量的选项会使表单变得很长，如果用户需要额外点击来输入信息的话，这将变得十分枯燥。<br>以上这些规则将帮助你决定在设计表单时使用哪个控件，单选按钮或者下拉菜单。<br><br></p><hr><p style="font-size:14px; color:#C0C0C0">以上翻译包含个人理解，仅用于个人学习。如有错误，求指正呀，非常感谢。^^<br>感谢原文作者及所有分享想法与经验的人。^^</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;question&quot;&gt; 原文：&lt;a href=&quot;https://blog.prototypr.io/7-rules-of-using-radio-buttons-vs-drop-down-menus-fddf50d312d1&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;7 Rules of Using Radio Buttons vs Drop-Down Menus&lt;/a&gt;&lt;br&gt;作者：Saadia Minhas (2018-05-06)&lt;br&gt;阅读时长：3m43s &lt;/blockquote&gt;

&lt;p&gt;不管你正在使用移动应用还是基于网页的工具，表单都是用户界面中至关重要的一部分。同时，表单也是用户交互的最佳来源。用户通过表单录入、提供信息，系统则通过理解这些信息来满足用户需求。&lt;/p&gt;
    
    </summary>
    
      <category term="译文" scheme="http://zyunn.com/categories/%E8%AF%91%E6%96%87/"/>
    
    
      <category term="译文" scheme="http://zyunn.com/tags/%E8%AF%91%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>译 | 字符计数器的 6 项设计原则</title>
    <link href="http://zyunn.com/2019/05/02/%E5%AD%97%E7%AC%A6%E8%AE%A1%E6%95%B0%E5%99%A8%E7%9A%84-6-%E9%A1%B9%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/"/>
    <id>http://zyunn.com/2019/05/02/字符计数器的-6-项设计原则/</id>
    <published>2019-05-02T04:22:54.000Z</published>
    <updated>2019-05-02T07:20:12.230Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="question"> 原文：<a href="http://www.breck-mckye.com/blog/2012/05/character-count-design-some-guidelines/" target="_blank" rel="noopener">Character count design: some guidelines</a><br>作者：Jimmy Breck-McKye (2012-05-30)<br>阅读时长：7m22s </blockquote><p>字符数限制在互联网产品中无处不在，尤其是在依赖于用户产生内容的应用中。尽管如此常见，字符数限制却总被设计得很糟糕。值得庆幸的是，通过遵循以下 6 个关于输入长度限制设计与字符计数器显示的简单原则，便可使输入受字符数限制的文本变得简单方便。<a id="more"></a></p><h4 id="总的来说，有以下-6-个设计字符有限的文本域的主要准则："><a href="#总的来说，有以下-6-个设计字符有限的文本域的主要准则：" class="headerlink" title="总的来说，有以下 6 个设计字符有限的文本域的主要准则："></a>总的来说，有以下 6 个设计字符有限的文本域的主要准则：</h4><ol><li>避免对文本输入作字数限制</li><li>为字符数限制增加视觉提示</li><li>在字数到达限制之前显示字符计数器</li><li>允许用户在达到字数限制之后继续编辑文本</li><li>允许用户方便地查看所有文本内容，以决定哪些内容需要被删减</li><li>为用户的内容输入提供其他渠道</li></ol><p>现在，我们依次来看这些原则。</p><h3 id="首先，避免对文本输入作字数限制。"><a href="#首先，避免对文本输入作字数限制。" class="headerlink" title="首先，避免对文本输入作字数限制。"></a>首先，避免对文本输入作字数限制。</h3><p>由于技术或架构上的限制，我们经常被迫需要对输入字数作出限制，因此导致输入变得非常不方便。但除此之外，这些限制毫无必要。有时我们本可以重新设计界面来满足更长长度的文本输入，有时我们草率地对用户如何构建他们的文本作出假设，有时我们并未作深入思考就对字数作了限制。我们要多思考与探寻是否有限制用户之外的其他替代方案。</p><h3 id="第二，-为字符数限制增加视觉提示。"><a href="#第二，-为字符数限制增加视觉提示。" class="headerlink" title="第二， 为字符数限制增加视觉提示。"></a>第二， 为字符数限制增加视觉提示。</h3><p>200 个字符有多长？您能想象得出来吗？300 个字符呢？40 个呢？抽象的数字对于人们来说并不重要，我们很难猜出一个特定的字符限制对于文本输入意味着什么。所以，我们需要为用户提供其他的提示以帮助他们更好的理解内容的最大输入长度，以及他们当前已输入的长度。</p><p>有一种方法是，设计尺寸合适的输入区域，以便粗略地表示允许输入的最长文本长度。虽然这很难做到绝对准确（因为 140 个字母「i」将比140 个字母「w」显示的行数更少），但这种方式可为用户提供一个直观的字符限制的感受。例如 Twitter，发帖输入框的尺寸就大致等于输入最大限制字数时的尺寸。</p><img src="/2019/05/02/字符计数器的-6-项设计原则/character-twitter.png"><p><center><p style="font-size:12px; color:#C0C0C0">Twitter 的发帖输入框</p><center></center></center></p><p>另一个方法是，当用户的输入接近最大限制字数时，改变字符计数器的颜色。例如 Stack-exchange 网站的评论输入框，当评论字数逐渐增加，计数器从灰色变成金色，最后变成红色。</p><img src="/2019/05/02/字符计数器的-6-项设计原则/character-soverflow.png"><p><center><p style="font-size:12px; color:#C0C0C0">Stack-exchange 网站的评论输入框</p><center></center></center></p><h3 id="第三，在达到最大字数限制之前，显示字符计数器。"><a href="#第三，在达到最大字数限制之前，显示字符计数器。" class="headerlink" title="第三，在达到最大字数限制之前，显示字符计数器。"></a>第三，在达到最大字数限制之前，显示字符计数器。</h3><p>您一定不希望用户在提交内容时才发现字数超出限制了，因为这将迫使用户不得不重新思考他们已经输入的内容，甚至是其他他们已经计划好提交的内容的结构。从认知上来说，这将耗费非常大的成本。您一定也不希望用超出字数限制的错误提示来打扰用户，所以，最好从一开始就显示字符计数器。如果计数器使你的设计变得凌乱，可以考虑给它设置一个不显眼的样式，比如灰色，当用户输入更多文字时，逐渐增强它的显眼程度。</p><h3 id="第四，允许用户超出字符限制，并且在超出之后进行编辑。"><a href="#第四，允许用户超出字符限制，并且在超出之后进行编辑。" class="headerlink" title="第四，允许用户超出字符限制，并且在超出之后进行编辑。"></a>第四，允许用户超出字符限制，并且在超出之后进行编辑。</h3><p>有一些字符数限制的设计是，一旦用户输入的文字达到最大限制，就禁止输入更多的文字。这是一个非常糟糕的设计，原因有两个。第一，它打断了用户复制和粘贴的操作；第二，提炼和修改文字内容比在输入完整文字前进行编辑来得更容易。允许用户输入完整的文字内容可帮助用户记住页面上的主要概念，然后开始编辑他们的素材。</p><h3 id="第五，方便用户清楚了解哪部分内容是需要被删减的。"><a href="#第五，方便用户清楚了解哪部分内容是需要被删减的。" class="headerlink" title="第五，方便用户清楚了解哪部分内容是需要被删减的。"></a>第五，方便用户清楚了解哪部分内容是需要被删减的。</h3><p>正如以上第 2 点所提到的，对于用户来说，一定数量的字符数在字数层面上究竟意味着什么是难以理解的。这就是为什么以其他的方式提示用户当前已超出限制的程度是非常重要的。调整输入区域的尺寸，以暗示可输入的内容数量，这是一种不错的方式。但另一种更好的方式是，高亮用户已输入的文本中超出字数限制的那部分。</p><p>如下图的例子中，超出字数限制的文字为红色，所以用户可以一目了然哪些内容是需要被删减的。同时，这里还将红色的错误提示信息与触发它的文本联系起来了。</p><img src="/2019/05/02/字符计数器的-6-项设计原则/character-red.png"><p><center><p style="font-size:12px; color:#C0C0C0">超出字数限制的文字为红色</p><center></center></center></p><h3 id="第六，为用户的内容提供其他的输入渠道。"><a href="#第六，为用户的内容提供其他的输入渠道。" class="headerlink" title="第六，为用户的内容提供其他的输入渠道。"></a>第六，为用户的内容提供其他的输入渠道。</h3><p>如果用户正在打破字符限制，那么很有可能他正在以一种不恰当的方式使用此输入区域。因此，可以使用字数限制的错误提示引导用户使用更适合他们的内容长度的渠道或者输入区域。</p><p>例如，在 Facebook 中，当用户发布过长的 Status 更新时，将会弹出错误对话框，建议用户使用长度不限制的 Notes 功能。这促使用户使用适合冗长日志的 Statuses 功能，而不是专用的日志系统。如果你的用户正在打破字符限制，仅仅是因为他们误解了某一功能的使用目的，那么这个方法将会有所帮助。<br><br></p><h4 id="用自己的话总结一下，就是："><a href="#用自己的话总结一下，就是：" class="headerlink" title="用自己的话总结一下，就是："></a>用自己的话总结一下，就是：</h4><p><strong>1. 在对文本输入作字数限制前先考虑是不是有其他方案。</strong><br>字数限制，并不是一种很好的方式，你有可能并未对用户的这个输入行为作深入了解，就草率地决定了这个最大限制字数。</p><p><strong>2. 为这个「最大限制字数」增加一些视觉提示。</strong><br>单纯地放一个数字「200」对用户来说是比较难理解的，他们并不知道 200 个字是什么概念。<br>增加提示的方式：如，将输入框的初始高度设置为刚好输入最大限制字数时的高度；或者，当用户的输入逐渐接近最大限制字数时，逐步改变字符计数器的颜色。</p><p><strong>3. 一开始就显示字符计数器，而不是等到用户的输入超过最大限制字数时才显示。</strong><br>当用户的输入超过最大限制字数时才显示字符计数器的话，用户可能需要重新思考和安排他们已经填好的内容，甚至可能因为这一个修改影响其他本来就已经准备好录入的内容。<br>如果担心你的界面设计因为字符计数器显得杂乱，可以给它设置一个比较不显眼的颜色 (如灰色)，当用户输入更多字数时，再慢慢提高字符计数器的显眼程度。</p><p><strong>4. 在用户的输入达到最大限制字数后，也要允许用户继续输入。</strong><br>有一些字符计数器是，当用户达到最大字数限制后，就禁止用户输入了。这是很糟糕的一种设计方式，首先，这样可能使用户复制粘贴的内容被截断；另外，在原本完整的文本内容上进行修改总是比在被截断所以不完整的内容上修改来得容易。</p><p><strong>5. 当用户的输入超出最大限制字数时，让用户清晰地知道哪些内容是超出的。</strong><br>例如，第 2 点中，将输入框的初始高度设置为刚好输入最大限制字数时的高度，这样，用户就知道超出这个输入框的部分就是超出的，需要把内容删减到能在这个输入框内完整显示；另一个更好的方式是，将超出最大字数限制的那部分文本变为红色。</p><p><strong>6. 如果用户输入的内容超出限定的最大字数，说明他们很可能正在以一种不恰当的方式使用这个输入框，这种情况下，可利用错误信息引导用户改用更适合他们想输入的内容的途径或文本框。</strong></p><blockquote class="question"> 其他相关讨论：<a href="https://ux.stackexchange.com/questions/60515/what-is-the-best-placement-of-character-counter-relative-to-the-text-field" target="_blank" rel="noopener">字符计数器应该放置在相应文本框的什么位置？</a></blockquote><p><br></p><hr><p style="font-size:14px; color:#C0C0C0">以上翻译包含个人理解，仅用于个人学习。如有错误，求指正呀，非常感谢。^^<br>感谢原文作者及所有分享想法与经验的人。^^</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;question&quot;&gt; 原文：&lt;a href=&quot;http://www.breck-mckye.com/blog/2012/05/character-count-design-some-guidelines/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Character count design: some guidelines&lt;/a&gt;&lt;br&gt;作者：Jimmy Breck-McKye (2012-05-30)&lt;br&gt;阅读时长：7m22s &lt;/blockquote&gt;

&lt;p&gt;字符数限制在互联网产品中无处不在，尤其是在依赖于用户产生内容的应用中。尽管如此常见，字符数限制却总被设计得很糟糕。值得庆幸的是，通过遵循以下 6 个关于输入长度限制设计与字符计数器显示的简单原则，便可使输入受字符数限制的文本变得简单方便。&lt;/p&gt;
    
    </summary>
    
      <category term="译文" scheme="http://zyunn.com/categories/%E8%AF%91%E6%96%87/"/>
    
    
      <category term="译文" scheme="http://zyunn.com/tags/%E8%AF%91%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>译 | 只有不超过 5% 的用户会调整默认设置</title>
    <link href="http://zyunn.com/2019/05/02/%E8%AF%91-%E5%8F%AA%E6%9C%89%E4%B8%8D%E8%B6%85%E8%BF%87-5-%E7%9A%84%E7%94%A8%E6%88%B7%E4%BC%9A%E8%B0%83%E6%95%B4%E9%BB%98%E8%AE%A4%E9%80%89%E9%A1%B9/"/>
    <id>http://zyunn.com/2019/05/02/译-只有不超过-5-的用户会调整默认选项/</id>
    <published>2019-05-02T03:53:06.000Z</published>
    <updated>2019-05-02T04:33:06.726Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="question"> 原文：<a href="https://www.uie.com/brainsparks/2011/09/14/do-users-change-their-settings/" target="_blank" rel="noopener">Do users change their settings?</a><br>作者：<a href="https://en.wikipedia.org/wiki/Jared_Spool" target="_blank" rel="noopener">Jared Spool</a> (2011-09-14)<br>阅读时长：4m15s </blockquote><p>早在 PC 时代，我们就对<strong>「用户是如何使用软件设计师为他们的应用程序所设计的选项、控件和设置的」</strong>这个问题感兴趣了。我们想知道，在多大程度上，用户会自定义他们的应用程序。<a id="more"></a></p><p>为此，我们着手进行了一些试验。我们邀请了大量的用户将他们的 Microsoft Word 的设置文件发送给我们。当时，MS Word 将所有的设置存储在一个名称诸如 config.ini 的文件中，所以我们邀请用户们将这个文件存入硬盘中，并通过电子邮件发送给我们。于是，我们收到了几百份这样的邮件。</p><p>然后，我们写了一个程序来分析这些文件，对「有多少用户曾经更改过应用中的 150 多项设置以及他们更改的是哪些设置」进行统计。</p><p>我们的发现非常有趣。在我们调研的用户中，<strong>只有不到 5% 的用户更改了设置，超过 95% 的用户则保留了应用程序安装时的默认设置。</strong></p><p>这令人非常惊讶，因为程序中有一些默认设置是非常重要的。例如，此应用有一个功能是，在你编辑文件的过程中为你自动保存文件，以防在系统或应用程序突然崩溃时丢失任何内容。而在我们分析调查的的版本中，这个功能是默认关闭的。用户必须手动打开它，才能使它生效。</p><p>所以，这就意味着，<strong>有 95% 的用户是在自动保存功能关闭的情况下使用此应用程序的。</strong>当我们对这些用户中的一部分人进行访问时，他们都告诉了我们同一个事情：他们认为 Microsoft 关闭这个功能肯定是有原因的，否则他们为什么要这么设置。还有一些用户告诉我们，「Microsoft 一定知道他们在做什么」。</p><p>我们再三思考了这个问题，并且对「将如此重要的一个功能设为默认关闭」的原因进行了猜想。我们猜想，之所以这么做或许是考虑到「用户使用的是软驱或者用户使用的硬盘空间较小运行较慢」，而自动保存会对性能造成影响，所以他们希望为最坏的情况做一些优化，而且，如果用户需要用到这个功能，他们自然会去打开它。</p><p>我们有朋友在 Microsoft Office 团队中工作，于是我们向他们询问了将这个功能默认设为关闭的原因，并且提出了我们关于性能优化的这个假设。但他们进行了解之后告诉我们，我们的假设是错的。</p><p>事实证明，在该版本中，将该功能默认关闭，并不是因为他们考虑到了用户的需求。相反的，这只是因为一个程序员决定将 config.ini 文件初始化。将一个文件初始化是一个又快工作量又小的工程，所以他就先这么做了，寄希望于之后会有人告诉他实际需要的默认设置应该是什么样的。但是结果并没有人这么做。</p><p>由于二进制中 0 代表关闭，所以「自动保存」以及其他一些功能，都被默认设为关闭。<strong>用户认为 Microsoft 一定是经过仔细考虑才这么设置的，但事实并非如此。</strong></p><p>我们向参与调查的用户了解一些背景资料，比如他们的年龄与职业，以看看是否存在一些区别。但毫无例外，<strong>只有一类人几乎总是主动调整他们的设置，这类人就是程序员和设计师</strong>。他们会调整应用程序中 40%，甚至多达 80% 的选项。</p><p>谁能想到，程序员和设计师们喜欢自定义他们的应用程序。这也许正好就是他们选择这份职业的原因？</p><p>（顺便说一句，<strong>如果你是一个程序员或者设计师，那么你将和大部人不一样</strong>。你习惯于调整你所使用的应用程序 的设置，并不意味着你的用户也会这么做，除非他们也是程序员或设计师。）</p><p>在几年的时间里，我们采用不同的形式重复了这个试验。我们发现，<strong>用户几乎不调整他们的设置</strong>。</p><p>如果你的应用程序也有很多设置，你是否曾调查研究过你的用户是如何使用它们的呢？有多少用户调整过这些设置？他们是否仍保持这些选项为默认状态？你的设置界面是否解释了每个设置的含义，并且告知用户为何要调整这些设置？<br><br></p><hr><p style="font-size:14px; color:#C0C0C0">以上翻译包含个人理解，仅用于个人学习。如有错误，求指正呀，非常感谢。^^<br>感谢原文作者及所有分享想法与经验的人。^^</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;question&quot;&gt; 原文：&lt;a href=&quot;https://www.uie.com/brainsparks/2011/09/14/do-users-change-their-settings/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Do users change their settings?&lt;/a&gt;&lt;br&gt;作者：&lt;a href=&quot;https://en.wikipedia.org/wiki/Jared_Spool&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Jared Spool&lt;/a&gt; (2011-09-14)&lt;br&gt;阅读时长：4m15s &lt;/blockquote&gt;

&lt;p&gt;早在 PC 时代，我们就对&lt;strong&gt;「用户是如何使用软件设计师为他们的应用程序所设计的选项、控件和设置的」&lt;/strong&gt;这个问题感兴趣了。我们想知道，在多大程度上，用户会自定义他们的应用程序。&lt;/p&gt;
    
    </summary>
    
      <category term="译文" scheme="http://zyunn.com/categories/%E8%AF%91%E6%96%87/"/>
    
    
      <category term="译文" scheme="http://zyunn.com/tags/%E8%AF%91%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>二零一九年五月</title>
    <link href="http://zyunn.com/2019/05/01/%E4%BA%8C%E9%9B%B6%E4%B8%80%E4%B9%9D%E5%B9%B4%E4%BA%94%E6%9C%88/"/>
    <id>http://zyunn.com/2019/05/01/二零一九年五月/</id>
    <published>2019-05-01T09:17:57.000Z</published>
    <updated>2019-05-06T03:47:18.001Z</updated>
    
    <content type="html"><![CDATA[<h3 id="2019-05-01"><a href="#2019-05-01" class="headerlink" title="# 2019.05.01"></a># 2019.05.01</h3><hr><p>今天是 2019 年 5 月 1 号，我们的社会依然面临三大严峻问题。<br>治疗胃溃疡的药，不良反应是，胃炎。<br>抗过敏的药，注意事项是，过敏体质者慎用。<br>缓解抑郁症的药，有增加自杀倾向的风险。<a id="more"></a><br><br><br></p><h3 id="2019-05-02"><a href="#2019-05-02" class="headerlink" title="# 2019.05.02"></a># 2019.05.02</h3><hr><p>今天是 2019 年 5 月 2 号，从朋友圈看当代中国青年的精神境况和生活状态。<br>世界杯。<br>创造 101。<br>权力的游戏。<br>热情一年不如一年。<br><br><br></p><h3 id="2019-05-03"><a href="#2019-05-03" class="headerlink" title="# 2019.05.03"></a># 2019.05.03</h3><hr><p>今天是 2019 年 5 月 3 号，在我的故乡吉林延边二道白河。<br>我看见过。<br>雪往天空里飘。<br>最后落入银河。<br>银河是白色的。<br><br><br></p><h3 id="2019-05-04"><a href="#2019-05-04" class="headerlink" title="# 2019.05.04"></a># 2019.05.04</h3><hr><p>今天是 2019 年 5 月 4 号，实体美颜滤镜的研发是时候提上日程了。<br>无色无味全透明支持个性化定制。<br>参数自定义，想几度美颜就几度美颜。<br>脸型自定义，根据人体工程学设计，完美贴合脸型，一秒穿戴绝无不舒适感。<br>还有日抛型、月抛型和终身型。<br>不用整容，不用化妆，不用美颜。<br>走，我们去创业。<br><br><br></p><h3 id="2019-05-05"><a href="#2019-05-05" class="headerlink" title="# 2019.05.05"></a># 2019.05.05</h3><hr><p>今天是 2019 年 5 月 5 号，喜欢是不能说出来的。<br>一说出来。<br>世界手中就有了你的把柄。<br><br><br></p><h3 id="2019-05-06"><a href="#2019-05-06" class="headerlink" title="# 2019.05.06"></a># 2019.05.06</h3><hr><p>今天是 2019 年 5 月 6 号，世上怎么会有一种乐器生来就催人泪下。<br>就是有这种乐器儿啊。<br>不信。<br>你听一听二胡版的生日快乐歌。<br>保证你快乐不起来。<br><br><br></p><h3 id="2019-05-07"><a href="#2019-05-07" class="headerlink" title="# 2019.05.07"></a># 2019.05.07</h3><hr><p>今天是 2019 年 5 月 7 号，互联网啊，就太不值得严肃了。<br>也是一堆热闹。<br>只有口号。<br>没有价值观。<br>Do the right thing。<br>Don’t be evil。</p><p><br><br><br><br><br></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;2019-05-01&quot;&gt;&lt;a href=&quot;#2019-05-01&quot; class=&quot;headerlink&quot; title=&quot;# 2019.05.01&quot;&gt;&lt;/a&gt;# 2019.05.01&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;今天是 2019 年 5 月 1 号，我们的社会依然面临三大严峻问题。&lt;br&gt;治疗胃溃疡的药，不良反应是，胃炎。&lt;br&gt;抗过敏的药，注意事项是，过敏体质者慎用。&lt;br&gt;缓解抑郁症的药，有增加自杀倾向的风险。&lt;/p&gt;
    
    </summary>
    
      <category term="碎碎念儿" scheme="http://zyunn.com/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5%E5%84%BF/"/>
    
    
  </entry>
  
  <entry>
    <title>历经九九八万五千六百七十一难，迎来互联网生涯新高！</title>
    <link href="http://zyunn.com/2019/04/21/%E5%8E%86%E7%BB%8F%E4%B9%9D%E4%B9%9D%E5%85%AB%E4%B8%87%E4%BA%94%E5%8D%83%E5%85%AD%E7%99%BE%E4%B8%83%E5%8D%81%E4%B8%80%E9%9A%BE%EF%BC%8C%E8%BF%8E%E6%9D%A5%E4%BA%92%E8%81%94%E7%BD%91%E7%94%9F%E6%B6%AF%E6%96%B0%E9%AB%98%EF%BC%81/"/>
    <id>http://zyunn.com/2019/04/21/历经九九八万五千六百七十一难，迎来互联网生涯新高！/</id>
    <published>2019-04-21T10:18:18.000Z</published>
    <updated>2019-05-02T09:40:26.397Z</updated>
    
    <content type="html"><![CDATA[<p>折腾了两天之后，我终于拥有自己的部落格啦！哈哈哈哈哈哈开心！快乐！满足！充满希望！（止不住的膨胀 </p><p>谁能想到，这个普普通通的周末也许可能就是我这一生中用脑强度最大的两天了。<a id="more"></a>在稀里糊涂地安装了 Git、Node.js、Xcode，新建了 repository，弄完了域名注册实名验证域名解析，各种注册各种设置，各种改样式，各种 hexo c、 hexo g、hexo s、hexo d，各种 error 各种 warning 之后，我终于迎来了自己的个人网站。 辛苦我自己了（高光时刻儿 。</p><p>虽然还很简单，但暂时还够用儿，其他的边用边学就好啦。还是要好好学习，好好写文章呐。</p><p>感恩 Hexo，感恩 GitHub，感恩互联网，感恩所有分享经验和想法的人儿吖（扑通一声跪下（感恩「简书」不让我改昵称改头像让我有了建站的小动机儿 。</p><p>Cowabunga！</p><img src="/2019/04/21/历经九九八万五千六百七十一难，迎来互联网生涯新高！/cowabunga.jpeg"><p style="font-size:12px; color:#C0C0C0">图片来源：动画《探险活宝》</p>  ]]></content>
    
    <summary type="html">
    
      &lt;p&gt;折腾了两天之后，我终于拥有自己的部落格啦！哈哈哈哈哈哈开心！快乐！满足！充满希望！（止不住的膨胀 &lt;/p&gt;
&lt;p&gt;谁能想到，这个普普通通的周末也许可能就是我这一生中用脑强度最大的两天了。&lt;/p&gt;
    
    </summary>
    
      <category term="碎碎念儿" scheme="http://zyunn.com/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5%E5%84%BF/"/>
    
    
  </entry>
  
</feed>
