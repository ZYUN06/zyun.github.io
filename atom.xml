<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZYUN</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zyunn.com/"/>
  <updated>2019-05-03T06:54:15.760Z</updated>
  <id>http://zyunn.com/</id>
  
  <author>
    <name>ZYUN</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>译 | 轮播图可用性：为内容过载的网站设计高效的用户界面</title>
    <link href="http://zyunn.com/2019/05/02/%E8%AF%91-%E8%BD%AE%E6%92%AD%E5%9B%BE%E5%8F%AF%E7%94%A8%E6%80%A7%EF%BC%9A%E4%B8%BA%E5%86%85%E5%AE%B9%E8%BF%87%E8%BD%BD%E7%9A%84%E7%BD%91%E7%AB%99%E8%AE%BE%E8%AE%A1%E9%AB%98%E6%95%88%E7%9A%84%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2/"/>
    <id>http://zyunn.com/2019/05/02/译-轮播图可用性：为内容过载的网站设计高效的用户界面/</id>
    <published>2019-05-02T14:24:25.000Z</published>
    <updated>2019-05-03T06:54:15.760Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="question"> 原文：<a href="https://www.nngroup.com/articles/designing-effective-carousels/" target="_blank" rel="noopener">Carousel Usability: Designing an Effective UI for Websites with Content Overload</a><br>作者：<a href="https://www.nngroup.com/articles/author/kara-pernice/" target="_blank" rel="noopener">Kara Pernice</a> (2013-09-14)<br>阅读时长：10m23s </blockquote><p><strong>摘要：轮播图允许多重内容占据同一个人人觊觎的空间。这可能会平息公司内讧，但是在或大或小的视窗中，人们通常都会直接滚动页面跳过轮播图。在用户界面中，静态的横幅图片或内容整合展示可能会是更好的解决方案。但如果轮播图就是你的主要元素，良好的导航和内容可以使它更高效。</strong><a id="more"></a><br><br></p><h1 id="随处可见的轮播图"><a href="#随处可见的轮播图" class="headerlink" title="随处可见的轮播图"></a>随处可见的轮播图</h1><p>有很多种不同的 UI 元素，都可被视为轮播图。</p><img src="/2019/05/02/译-轮播图可用性：为内容过载的网站设计高效的用户界面/dell.png"><p><center><p style="font-size:12px; color:#C0C0C0">例如，可点击的几张图片的幻灯片（如戴尔网站上的）</p><center></center></center></p><img src="/2019/05/02/译-轮播图可用性：为内容过载的网站设计高效的用户界面/nest.png"><p><center><p style="font-size:12px; color:#C0C0C0">或者是，展示多个导航标志的动画（如 Nest 网站上的）。</p><center></center></center></p><p>但最普遍的类型是功能区域的轮播图（本文所讨论的），它通常具有以下特征：</p><ul><li>出现在主页顶部</li><li>占据首屏大部分空间</li><li>在同一位置同时显示多个内容</li><li>提供一些指示（或导航），表明这个轮播图中有多个特色内容或多帧数</li><li>每一帧中都包含了图片和少量文本</li><li>包含了关于组织的品牌或使命、特色信息的内容，或由促销活动组成<br><br></li></ul><h1 id="轮播图最大的优点"><a href="#轮播图最大的优点" class="headerlink" title="轮播图最大的优点"></a>轮播图最大的优点</h1><p>使用轮播图最大的好处在于，它<strong>允许多个内容占据主页上同一块主要区域</strong>，这有助于消除任何关于谁的内容最具价值的内部争论。另外一个好处是，使更多的信息显示在可视区域的顶部，因此人们有更大的机会真正注意到它们。<br><br></p><h1 id="轮播图最大的缺点"><a href="#轮播图最大的缺点" class="headerlink" title="轮播图最大的缺点"></a>轮播图最大的缺点</h1><p>你无法指望人们会注意到网站或企业内部网上的轮播图中的信息。不管是在 30 英寸还是 3 英寸的显示器上查看内容，<strong>人们通常都会直接滚动页面跳过这些图像</strong>，并错过其中所有内容，或者至少错过除第一帧以外的其他内容。<br>的确，有一些眼动研究和网络计量学表明某些轮播图获得了大量的眼光停留与点击量。但是，使用轮播图时最需要注意的是，人们经常会忽略它们，以及其中部分或全部内容。</p><p>第二个最重要的注意事项是，设计师将轮播图视为一组图片的合辑，而用户通常只关注他所看到的那个图片。从整体上来说，轮播图中的一组图片可以令人对一个组织的作用产生准确的印象。但<strong>如果一个用户只看到其中的一张图片，他很可能会对一个组织产生误解</strong>。当一张图片描述的是一些反常的事情，或与业务、章程相关性较弱的事情时，这个问题就经常发生。<br><br></p><h1 id="主页横幅可成为你的网站的视觉主角吗？考虑使用主页横幅代替轮播图"><a href="#主页横幅可成为你的网站的视觉主角吗？考虑使用主页横幅代替轮播图" class="headerlink" title="主页横幅可成为你的网站的视觉主角吗？考虑使用主页横幅代替轮播图"></a>主页横幅可成为你的网站的视觉主角吗？考虑使用主页横幅代替轮播图</h1><p>如今，多图片的轮播图已经取代了以前网络上随处可见的单个的「主页横幅」。但在某些情况下，成熟的 UI 替代品可能比比它年轻、充满活动的后代产物更适合。<br>原因之一在于，设计师的态度。一个轮播图中有可供选择的多帧图片，所以有机会达成共识或抓住用户的注意力，<strong>知道这一点会给设计师一种错误的安全感</strong>。他们认为人们会看到轮播图中所有的图片，所以他们会选择一些低质量的粗劣图片，以期弥补信息量的问题。但如果一个设计师只能选择一张图片表达一个观点，他们可能更倾向于选择一些强有力和示范性的东西。这样一来，用户就可真正专注于一个图片，而不是将注意力分散在几个图片中。<br>此外，一个静态的主页横幅比轮播的元素更不容易分散用户注意力，因此可提高人们用于发现站点中其他区域的全局导航的可见性。（附带一提的是，将主页横幅或轮播图中的任何重要信息也放在用户界面中的其他地方，是一个很好的方式，因为这样一来，与 IA 或页面进行交互的人们就有机会看到它。）</p><img src="/2019/05/02/译-轮播图可用性：为内容过载的网站设计高效的用户界面/bestbuy.png"><p><center><p style="font-size:12px; color:#C0C0C0">BestBuy 网站的主页使用了一个主页横幅来展示促销文案「Labor Day Savings Event」，以及销售日期与一个鲜明的黄色动作按钮「Shop Now」。</p><center></center></center></p><p>使 Best Buy 的主页横幅变得有效的原因有以下几点：<br>• &nbsp;电视机、笔记本电脑和冰箱的图片易于辨认，清晰地展示了正在出售的产品。这个主题图片是引人注意的、信息丰富的。<br>• &nbsp;字体、颜色与全局导航和主页眉中的字体、颜色相匹配，所以主页横幅看起来是网站内容的一部分，而不是一个强势的广告。<br>此外，这些特征都有助于传达 Best Buy 品牌，加强宣传他们每天售卖的产品。<br><br></p><h1 id="轮播图的设计准则"><a href="#轮播图的设计准则" class="headerlink" title="轮播图的设计准则"></a>轮播图的设计准则</h1><p>如果你决定使用轮播图作为你的主要视觉形式，可遵循以下准则来把它们做好。</p><h3 id="1-一个轮播图只包含-5-帧或-5-帧以下的图片，因为用户不太可能会查看超过-5-帧。"><a href="#1-一个轮播图只包含-5-帧或-5-帧以下的图片，因为用户不太可能会查看超过-5-帧。" class="headerlink" title="1. 一个轮播图只包含 5 帧或 5 帧以下的图片，因为用户不太可能会查看超过 5 帧。"></a>1. 一个轮播图只包含 5 帧或 5 帧以下的图片，因为用户不太可能会查看超过 5 帧。</h3><p>在移动设备上滑动浏览多帧图片是很费力的，当帧数超过 5 帧时，用户将很难辨别他们已经浏览过的图片的主题。同时，限制帧数将有助于用户发现内容，并在轮播图中再次找到它。</p><h3 id="2-使用简洁清晰、与组织宗旨一致的文案和图片。"><a href="#2-使用简洁清晰、与组织宗旨一致的文案和图片。" class="headerlink" title="2. 使用简洁清晰、与组织宗旨一致的文案和图片。"></a>2. 使用简洁清晰、与组织宗旨一致的文案和图片。</h3><p>阅读字体太小的文本与辨认尺寸过小的图片是很困难的，尤其是在移动设备上。把一个大尺寸、高密度的图片塞进一个小区域中是不合适的。文案与图片越清晰，用户就越有可能注意到并理解其中表达的含义。</p><img src="/2019/05/02/译-轮播图可用性：为内容过载的网站设计高效的用户界面/corning_glass_museum1.png"><p><center><p style="font-size:12px; color:#C0C0C0">Corning Museum of Glass 使用引人注目的图片与高度相关的文案，这些都符合博物馆的工作性质。</p><center><br></center></center></p><img src="/2019/05/02/译-轮播图可用性：为内容过载的网站设计高效的用户界面/corning_glass_museum2.png"><p><center><p style="font-size:12px; color:#C0C0C0">Corning Museum of Glass 使用滑动手风琴来显示丰富的图片。</p><center></center></center></p><h3 id="3-提示用户轮播图中有多少帧图片，以及当前图片所在帧数位置，以提升用户的控制感。"><a href="#3-提示用户轮播图中有多少帧图片，以及当前图片所在帧数位置，以提升用户的控制感。" class="headerlink" title="3. 提示用户轮播图中有多少帧图片，以及当前图片所在帧数位置，以提升用户的控制感。"></a>3. 提示用户轮播图中有多少帧图片，以及当前图片所在帧数位置，以提升用户的控制感。</h3><img src="/2019/05/02/译-轮播图可用性：为内容过载的网站设计高效的用户界面/coldwell_bank.png"><p><center><p style="font-size:12px; color:#C0C0C0">Coldwell Banker 是我们内部网设计 2018 年年度竞赛的 10 个获胜者之一。他们内部网的轮播图设计清晰地展示了重要的信息：一共有 5 帧，每一帧的内容都是必需的，并且很容易识别出哪一帧是当前选中的。</p><center><br></center></center></p><img src="/2019/05/02/译-轮播图可用性：为内容过载的网站设计高效的用户界面/delta.png"><p><center><p style="font-size:12px; color:#C0C0C0">Delta 使选中的点（在屏幕截图的底部）比其他两个点大，但是尺寸差别太细微了，所以不起作用。(给那些辨别不出来的朋友：中间那个是选中的，更大的。)</p><center></center></center></p><h3 id="4-使用易于理解和识别的图标与链接。"><a href="#4-使用易于理解和识别的图标与链接。" class="headerlink" title="4. 使用易于理解和识别的图标与链接。"></a>4. 使用易于理解和识别的图标与链接。</h3><p>导航控件旨在帮助人们识别选项，并在看到主框架中的内容后重新调用它们。例如，用户无法猜测一个数字或一个点点击后会显示什么，但可能记住绿色背景与关于环境的文章相关。在移动设备上，点是特别糟糕的提示，因为人们通常不会注意到它们（而且它们在 Android 比在 iOS 中更不标准）。</p><h3 id="5-确保导航控件在轮播图内显示，而不是在轮播图下方或者通过折叠分开来。这个设计有助于避免大型或小型显示器上的问题。"><a href="#5-确保导航控件在轮播图内显示，而不是在轮播图下方或者通过折叠分开来。这个设计有助于避免大型或小型显示器上的问题。" class="headerlink" title="5. 确保导航控件在轮播图内显示，而不是在轮播图下方或者通过折叠分开来。这个设计有助于避免大型或小型显示器上的问题。"></a>5. 确保导航控件在轮播图内显示，而不是在轮播图下方或者通过折叠分开来。这个设计有助于避免大型或小型显示器上的问题。</h3><img src="/2019/05/02/译-轮播图可用性：为内容过载的网站设计高效的用户界面/IBM.png"><p><center><p style="font-size:12px; color:#C0C0C0">IBM 提供了一个引人注目的轮播图，轮播中有可点击的图片按钮，但按钮很小，并且按钮上没有描述性的文案。</p><center><br></center></center></p><img src="/2019/05/02/译-轮播图可用性：为内容过载的网站设计高效的用户界面/shining_star_therapy.png"><p><center><p style="font-size:12px; color:#C0C0C0">在 iPhone 上查看时，Shining Star Therapy 网站上的轮播控件被截断了。这种出血效果比完全不显示控件好，但如果能看到完整的控件更好。</p><center></center></center></p><h3 id="6-如果为每一帧提供一个导航按钮（而不是用于滚动的箭头），请确保每个按钮看起来是不一样的，并且代表所在的那帧。"><a href="#6-如果为每一帧提供一个导航按钮（而不是用于滚动的箭头），请确保每个按钮看起来是不一样的，并且代表所在的那帧。" class="headerlink" title="6. 如果为每一帧提供一个导航按钮（而不是用于滚动的箭头），请确保每个按钮看起来是不一样的，并且代表所在的那帧。"></a>6. 如果为每一帧提供一个导航按钮（而不是用于滚动的箭头），请确保每个按钮看起来是不一样的，并且代表所在的那帧。</h3><p><a href="https://www.deere.com/en/" target="_blank" rel="noopener">John Deere</a> 的主页提供了带有文字的图片作为按钮，并且显示在轮播图之内，这些都发挥了很大的作用。（同时，它还有可向前向后切换轮播图的箭头。）<br>然而，它的文本非常小，难以阅读，并且对于分配给它们的小空间而言，这些用作按钮的图片过于密集了。</p><img src="/2019/05/02/译-轮播图可用性：为内容过载的网站设计高效的用户界面/john_deere1.png"> <img src="/2019/05/02/译-轮播图可用性：为内容过载的网站设计高效的用户界面/john_deere2.png"> <img src="/2019/05/02/译-轮播图可用性：为内容过载的网站设计高效的用户界面/john_deere3.png"><h3 id="7-使用足够大的链接与按钮，以便于识别和点击。"><a href="#7-使用足够大的链接与按钮，以便于识别和点击。" class="headerlink" title="7. 使用足够大的链接与按钮，以便于识别和点击。"></a>7. 使用足够大的链接与按钮，以便于识别和点击。</h3><p>尺寸小、紧挨着或显示在一个复杂背景上的按钮，将不容易被注意到或点击。</p><img src="/2019/05/02/译-轮播图可用性：为内容过载的网站设计高效的用户界面/roku.png"><p><center><p style="font-size:12px; color:#C0C0C0">在 Roku 网站上，当所在帧背景为浅色时，轮播图左右侧的箭头很容易被注意到与点击，但是在背景比较复杂的帧中，它们就不够明显了。</p><center><br></center></center></p><img src="/2019/05/02/译-轮播图可用性：为内容过载的网站设计高效的用户界面/roku2.png"><p><center><p style="font-size:12px; color:#C0C0C0">滚动后的 Roku 网站。</p><center><br></center></center></p><h1 id="自动轮播"><a href="#自动轮播" class="headerlink" title="自动轮播"></a>自动轮播</h1><p>在帧之间<a href="https://www.nngroup.com/articles/auto-forwarding/" target="_blank" rel="noopener">自动轮播</a>可引导人们浏览信息。但有些情况下，不推荐使用自动轮播。</p><h3 id="如果是以下情况，请勿使用自动轮播："><a href="#如果是以下情况，请勿使用自动轮播：" class="headerlink" title="如果是以下情况，请勿使用自动轮播："></a>如果是以下情况，请勿使用自动轮播：</h3><p>• &nbsp;  你不确定能否把握好<strong>轮播时长</strong>，以便大多数人在指定的时间内阅读并吸收轮播图中的内容。若轮播得太快，用户将无法读取信息，这对他们来说是令人沮丧的，对于试图突出重点的组织来说也是不好的。若轮播得太慢，则当它们动起来时，用户会对此感到惊讶。<br>• &nbsp;  你的<strong>内容与广告相似</strong>。用户倾向于<a href="https://www.nngroup.com/articles/banner-blindness-old-and-new-findings/" target="_blank" rel="noopener">忽略看起来像广告的动画</a>（如果他们并没有购物的心态）。我们的<a href="https://www.nngroup.com/topic/eyetracking/" target="_blank" rel="noopener">眼球追踪</a>研究表明，动画广告的浏览率仅为 27%。<br><br></p><h1 id="自动轮播的建议"><a href="#自动轮播的建议" class="headerlink" title="自动轮播的建议"></a>自动轮播的建议</h1><p>• &nbsp;<strong>不要在移动设备上使用自动轮播</strong>，因为：1. 它降低了页面的加载速度；2. 因为页面很短，用户通常会快速滚动，所以当轮播图切换时，用户可能正往下看，并忽略这个变化。<br>• &nbsp;<strong>通过测试得出正确的轮播时长</strong>，或者至少估计用户阅读文本和处理图像需要的平均时间。我们以每秒 3 个单词为准则。<br>• &nbsp;不要停在最后一帧。<strong>继续循环轮播</strong>（并显示所选的帧）。<br><br></p><h1 id="静态（非自动轮播）的轮播图建议"><a href="#静态（非自动轮播）的轮播图建议" class="headerlink" title="静态（非自动轮播）的轮播图建议"></a>静态（非自动轮播）的轮播图建议</h1><p>确保对轮播图感兴趣的用户能意识到除了当前显示的图像、内容外还有其他内容。提供清晰的视觉元素，<a href="https://www.nngroup.com/articles/illusion-of-completeness/" target="_blank" rel="noopener">以代表还有更多内容</a>，比如：</p><p>• &nbsp;  导航链接和图标（如上所述）<br>• &nbsp;  切断，或者使图片“出血”，并显示下一个图片的一部分。</p><img src="/2019/05/02/译-轮播图可用性：为内容过载的网站设计高效的用户界面/skyscanner.png"><p><center><p style="font-size:12px; color:#C0C0C0">Windows 8 上的 Skyscanner app 将（右侧的）页面内容截断，以表明还有更多内容。</p><center><br></center></center></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>如果你正在使用轮播图，以期人们可以看到多种多样的内容，要记住大部分用户只会注意到第一帧，甚至全部都不会注意到。因此，请确保那些重要的内容也被谨慎地放置在 IA 网站上的其他页面中。考虑使用静态的轮播图或主页横幅，而不是自动轮播的图片。此外，在任何轮播图的导航中，都要确保按钮和链接是清晰的，足够大、易于理解和点击的，并且当前选中的那一帧的按钮应该显示为选中的状态。这样，你将创造出一种奇妙的愉悦感，而不是一个恐怖屋。<br><br></p><hr><p style="font-size:14px; color:#C0C0C0">以上翻译包含个人理解，仅用于个人学习。如有错误，求指正呀，非常感谢。^^<br>感谢原文作者及所有分享想法与经验的人。^^</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;question&quot;&gt; 原文：&lt;a href=&quot;https://www.nngroup.com/articles/designing-effective-carousels/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Carousel Usability: Designing an Effective UI for Websites with Content Overload&lt;/a&gt;&lt;br&gt;作者：&lt;a href=&quot;https://www.nngroup.com/articles/author/kara-pernice/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Kara Pernice&lt;/a&gt; (2013-09-14)&lt;br&gt;阅读时长：10m23s &lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;摘要：轮播图允许多重内容占据同一个人人觊觎的空间。这可能会平息公司内讧，但是在或大或小的视窗中，人们通常都会直接滚动页面跳过轮播图。在用户界面中，静态的横幅图片或内容整合展示可能会是更好的解决方案。但如果轮播图就是你的主要元素，良好的导航和内容可以使它更高效。&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="译文" scheme="http://zyunn.com/categories/%E8%AF%91%E6%96%87/"/>
    
    
      <category term="译文" scheme="http://zyunn.com/tags/%E8%AF%91%E6%96%87/"/>
    
      <category term="交互设计" scheme="http://zyunn.com/tags/%E4%BA%A4%E4%BA%92%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="Web" scheme="http://zyunn.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>译 | 复选框与单选按钮的 12 个可用性问题</title>
    <link href="http://zyunn.com/2019/05/02/%E5%A4%8D%E9%80%89%E6%A1%86%E4%B8%8E%E5%8D%95%E9%80%89%E6%8C%89%E9%92%AE%E7%9A%84-12-%E4%B8%AA%E5%8F%AF%E7%94%A8%E6%80%A7%E9%97%AE%E9%A2%98/"/>
    <id>http://zyunn.com/2019/05/02/复选框与单选按钮的-12-个可用性问题/</id>
    <published>2019-05-02T09:04:40.000Z</published>
    <updated>2019-05-02T14:21:57.304Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="question"> 原文：<a href="https://www.nngroup.com/articles/checkboxes-vs-radio-buttons/" target="_blank" rel="noopener">Checkboxes vs. Radio Buttons</a><br>作者：<a href="https://www.nngroup.com/articles/author/jakob-nielsen/" target="_blank" rel="noopener">Jakob Nielsen</a> (2004-09-27)<br>阅读时长：8m56s </blockquote><p><strong>摘要：何时使用复选框控件与何时使用单选按钮控件的用户界面设计指南。关于复选框与单选按钮的 12 个可用性问题。</strong><br><a id="more"></a></p><p>我最近在一个网站的注册页面中遇到了下面的这个提示框。它至少存在 2 个设计上的错误。在进一步阅读之前，试试你能否找出来吧。</p><img src="/2019/05/02/复选框与单选按钮的-12-个可用性问题/来自一个网站的注册页面.png"><p><center><p style="font-size:12px; color:#C0C0C0">一个网站的注册页面</p><center></center></center></p><p>• &nbsp; 错误一是本文的主要焦点：这里本应使用单选按钮，却错误地使用了复选框。因为上面的两个选择是互斥的，所以这个页面应该提供给用户的是单选按钮，以限制用户准确地选择某一个选项。</p><p>• &nbsp; 错误二是这里先提出了两个问题，然后把它们放在了一个又大又冗长的提示框里。在这里，只用一个简短的问题会好很多：「好的，向我发送关于其他特色产品、解决方案、服务和教育机会的信息。」</p><p>• &nbsp; 好笑的是，对于单个问题来说，使用复选框是正确的，因为用户将回答「是」或「否」。来自<a href="https://www.nngroup.com/reports/ecommerce-user-experience/" target="_blank" rel="noopener">电商网站用户测试</a>报告的建议是，复选框默认不勾选，这样用户就必须主动点击它才能选择接收更多的消息。<br><br></p><h1 id="何时使用哪个控件"><a href="#何时使用哪个控件" class="headerlink" title="何时使用哪个控件"></a>何时使用哪个控件</h1><p>自 1984 年第一版《Inside Macintosh》问世以来，复选框和单选按钮的使用规则一直都是一样的。后续所有的 GUI 标准与 W3C 官方的 Web 标准都包含了与之相同的、这两个控件的定义。</p><ol><li><p>当列表中有 2 个或多个互斥的选项，并且用户必须从中明确选择一个选项时，<strong>使用单选按钮</strong>。换而言之，单击未选中的单选按钮，将取消选中列表中先前已选中的其他任何按钮。</p></li><li><p>当有一系列的选项，并且用户可选择任意个数的选项（包括 0 个，1 个或多个）时，<strong>使用复选框</strong>。换而言之，列表中每一个复选框都与其他复选框相互独立，因此选中一个复选框不会取消选中其他复选框。</p></li><li><p>一个<strong>单独的复选框</strong>可用作用户可打开或关闭的单个选项。</p></li></ol><p>听起来十分简单，对吧？</p><p>然而，我却经常遇到错误使用单选按钮和复选框的网页。即使已经过了 20 年，还是值得再次提出这些设计准则。<br><br></p><h1 id="其他设计准则"><a href="#其他设计准则" class="headerlink" title="其他设计准则"></a>其他设计准则</h1><ol start="4"><li><p><strong>使用标准的视觉表现形式</strong>。复选框应该是一个小方框，选中时带有一个复选标记或一个 X。而单选按钮则应该是一个小圆圈，选中时，圆圈中有一个实心圆。</p></li><li><p><strong>以组的视觉形式呈现一组选项</strong>，并将它与同一页面上的其他组明显区分开。上面的提示框案例就违反了这个原则，因为布局使两个复选框看起来像是单独的主题，而实际上它们是同一个主题的两个可选项。<br>• &nbsp; 使用子标题将一长串的复选框按逻辑分解成不同的组，可使这些选项便于快速扫描，易于理解。这样做的风险在于，用户可能会将每个子组视为一组单独的选项，但这对于复选框来说并不一定是致命的──因为无论如何，每个复选框都是独立的选择。而相反地，单选按钮列表则必须是统一的，你不能使用子标题来分解它。</p></li></ol><ol start="6"><li><strong>垂直排列你的列表，每一行仅放置一个选项</strong>。如果必须使用一行包含多个选项的水平布局，请确保把按钮和标签分隔开，以便清楚地知道哪个选项与哪个标签匹配。<br>例如，下面这个列表，就很难明白哪个按钮是与选项四匹配的。</li></ol><img src="/2019/05/02/复选框与单选按钮的-12-个可用性问题/一个水平布局的单选按钮列表.png"><p><center><p style="font-size:12px; color:#C0C0C0">一个水平布局的单选按钮列表</p><center></center></center></p><ol start="7"><li><strong>复选框标签应使用正向、主动的措辞</strong>，以便明确当用户勾选复选框时将会发生什么。换句话说，避免使用譬如「不要向我发送电子邮件」的否定语态，因为这将意味着用户必须勾选这个复选框，以阻止某件事情的发生。<br>• &nbsp; 使用清晰的复选框标签，以便用户了解勾选与不勾选这个复选框分别会发生什么。<br>• &nbsp; 如果你无法做到这一点，最好使用两个单选按钮──一个用于打开这个功能，一个用于关闭它──并且为这两者写上明确的标签。</li></ol><ol start="8"><li><p>如果可能的话，<strong>使用单选按钮而不是下拉菜单</strong>。单选按钮具有较低的<a href="https://www.nngroup.com/articles/minimize-cognitive-load/" target="_blank" rel="noopener">认知负荷</a>，因为它使所有选项永久可见，以便用户可轻松地比较它们。对于那些难以进行精确的鼠标移动的用户，单选按钮也更容易操作。（有限的空间有时可能会迫使你违反这个准则，但请尽可能保持所有选项可见。）</p></li><li><p><strong>始终为单选按钮列表提供一个默认选择</strong>。根据定义，<a href="https://www.nngroup.com/articles/radio-buttons-default-selection/" target="_blank" rel="noopener">单选按钮总是有且仅有一个选项被选中</a>，因此不应呈现没有默认选择的情况。（相反地，复选框则通常默认不选中任何选项。）<br>• &nbsp;  如果用户有可能需要避免做出选择，那么您应该为这个选择提供一个单选按钮，例如一个标签为「无」的单选按钮。为用户提供一个明确的、中性的可点击选项，比要求不从列表中进行选择的隐性行为要好，特别是因为后者违反了总是只选择一个选项的规则。</p></li><li><p><strong>因为单选按钮总是只需要一个选项，所以要确保选项既全面又清晰</strong>。例如，在<a href="https://www.nngroup.com/reports/senior-citizens-on-the-web/" target="_blank" rel="noopener">对年长用户的测试</a>中，他们无法完成一个要求他们选择工作类型的表单，因为它没有提供一个「退休」的选项。如果无法做到全面，则需要提供一个标签为「其他」的选项，并辅以输入字段。</p></li><li><p><strong>让用户通过点击按钮 / 复选框本身或它的标签来选择一个选项</strong>：根据<a href="http://www.asktog.com/columns/022DesignedToGiveFitts.html" target="_blank" rel="noopener">费茨定律</a>，点击目标越大越易于点击。在 HTML 表单中，通过<a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label" target="_blank" rel="noopener">使用「Label」元素对每个标签进行编码</a>，可轻松实现这一点，就像我在上面的水平单选按钮示例中所展示的那样（点击单词「Four」可选中该选项）。（译者注：上面那个水平单选按钮的图片截自原文网页页面，原页面上是可交互的）。在对<a href="https://www.nngroup.com/articles/ephemeral-web-based-applications/" target="_blank" rel="noopener">Flash 中基于 Web 的应用</a>的测试中，我们发现，通过在可视点击区域以外增加一些像素来增大点击区域的话，可使用户的错误远远减少。（这种效果在 HTML 中很难实现，尽管一些 CSS 技巧可能会奏效。）</p></li><li><p><strong>复选框和单选按钮只用于改变设置，而不是作为动作按钮来使某些事件发生</strong>。此外，在用户单击命令按钮（如标签为「确定」，或者「继续进行 XXX（XXX 为进程中的下一步）」）之前，这些更改的设置不会生效。<br>• &nbsp; 如果用户点击了「后退」按钮，则对页面上的复选框和单选按钮所做的任何更改都应被取消，并恢复原有的设置。如果用户点击了「取消」按钮，相同的准则也是成立的（虽然导航网页并<a href="https://www.nngroup.com/articles/reset-and-cancel-buttons/" target="_blank" rel="noopener">不需要「取消」按钮</a>，因为「后退」按钮的作用是相同的）。<br>• &nbsp; 如果用户点击「后退」按钮后，又点击了「前进」按钮，那这种情况按「撤销 - 重做」的顺序来理解是最合适的，这意味着控件的外观应该呈现用户的更改，就像用户从未点击过「后退」一样。在用户点击「确定」或其他相同的命令之前，这些更改仍然不会对后端起作用。<br><br></p></li></ol><h1 id="为什么这些准则很重要"><a href="#为什么这些准则很重要" class="headerlink" title="为什么这些准则很重要"></a>为什么这些准则很重要</h1><p>当我在坚持复选框和单选按钮的正确使用时，我是不是太挑剔了？不。<a href="https://www.nngroup.com/articles/do-interface-standards-stifle-design-creativity/" target="_blank" rel="noopener">遵循 GUI 标准和正确使用控件有着很重要的可用性原因</a>。</p><p>最重要的是，<a href="https://www.nngroup.com/articles/the-need-for-web-design-standards/" target="_blank" rel="noopener">遵循设计标准</a><strong>提高了用户预知控件的功能与操作方式的能力</strong>。当他们看到一个复选框列表时，他们知道可以选择多个选项。当他们看到一个单选按钮列表时，他们知道只能选择一个选项。（当然，不是每个用户都知道这一点，但大部分用户都知道，特别是自从 1984 年这成为一个设计标准以来。）</p><p>因为许多人都知道如何操作标准的 GUI 小部件，所以正确地使用这些元素可<a href="https://www.nngroup.com/articles/ideologies-of-web-design/" target="_blank" rel="noopener">增强用户对技术的掌握感</a>。相反地，<strong>违反这些标准则会使用户界面感觉很脆弱</strong>──就好像任何事情都可能在没有任何警告的情况下发生一样。譬如说，你猜想你在点击一个单选按钮后是不会立即产生任何影响的，所以你可以在做了一个选择之后、但点击「确定」之前重新考虑你的选择。在这种情况下，如果一个网站违反了这个标准，并且在你输入一个选择之后，意外地使你进入下一个页面，那这将令人感到不快。更糟糕的是，这促使你对在网站上其他地方录入表单时可能会发生的情况产生担心。</p><p><strong>复选框和单选按钮最大的可用性问题来自那些含糊不清、具有误导性或者描述了普通用户无法理解的选项的标签</strong>。语境线索可缓解后一个问题，但最好还是对任何一组重要的交互控件进行用户测试。幸运的是，复选框和单选按钮都很容易使用<a href="https://www.nngroup.com/reports/paper-prototyping-training-video/" target="_blank" rel="noopener">纸质原型</a>来进行测试，所以你不需要实现任何东西就可以查看用户是否理解这些标签、并正确使用这些小部件。</p><p>没有专业的交互设计师会犯在应该使用单选按钮时却使用复选框的错误。这两个控件之间的区别是任何交互设计课程中首先会教的东西之一。因此，还有正确使用小部件的最后一个理由：如果你不这样做，你将会被视为一个业余爱好者。<br><br></p><hr><p style="font-size:14px; color:#C0C0C0">以上翻译包含个人理解，仅用于个人学习。如有错误，求指正呀，非常感谢。^^<br>感谢原文作者及所有分享想法与经验的人。^^</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;question&quot;&gt; 原文：&lt;a href=&quot;https://www.nngroup.com/articles/checkboxes-vs-radio-buttons/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Checkboxes vs. Radio Buttons&lt;/a&gt;&lt;br&gt;作者：&lt;a href=&quot;https://www.nngroup.com/articles/author/jakob-nielsen/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Jakob Nielsen&lt;/a&gt; (2004-09-27)&lt;br&gt;阅读时长：8m56s &lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;摘要：何时使用复选框控件与何时使用单选按钮控件的用户界面设计指南。关于复选框与单选按钮的 12 个可用性问题。&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="译文" scheme="http://zyunn.com/categories/%E8%AF%91%E6%96%87/"/>
    
    
      <category term="译文" scheme="http://zyunn.com/tags/%E8%AF%91%E6%96%87/"/>
    
      <category term="交互设计" scheme="http://zyunn.com/tags/%E4%BA%A4%E4%BA%92%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="Web" scheme="http://zyunn.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>译 | 单选按钮与下拉菜单的 7 个使用原则</title>
    <link href="http://zyunn.com/2019/05/02/%E5%8D%95%E9%80%89%E6%8C%89%E9%92%AE%E4%B8%8E%E4%B8%8B%E6%8B%89%E8%8F%9C%E5%8D%95%E7%9A%84-7-%E4%B8%AA%E4%BD%BF%E7%94%A8%E5%8E%9F%E5%88%99/"/>
    <id>http://zyunn.com/2019/05/02/单选按钮与下拉菜单的-7-个使用原则/</id>
    <published>2019-05-02T07:45:14.000Z</published>
    <updated>2019-05-02T09:39:56.423Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="question"> 原文：<a href="https://blog.prototypr.io/7-rules-of-using-radio-buttons-vs-drop-down-menus-fddf50d312d1" target="_blank" rel="noopener">7 Rules of Using Radio Buttons vs Drop-Down Menus</a><br>作者：Saadia Minhas (2018-05-06)<br>阅读时长：3m43s </blockquote><p>不管你正在使用移动应用还是基于网页的工具，表单都是用户界面中至关重要的一部分。同时，表单也是用户交互的最佳来源。用户通过表单录入、提供信息，系统则通过理解这些信息来满足用户需求。<a id="more"></a> </p><p>输入控件、输入校验、错误处理、用户反馈等等，都是可用表单中的一些项目。</p><p>单选按钮和下拉菜单是其中两个非常重要的输入控件。当用户需要输入时，它们可以互换使用。然而，如果我们仔细研究这两个控件的可用性，很明显，它们都有各自特定的使用场景，以便用户更简单地选择给定的输入。</p><p>以下是基于这个可用性研究的一些使用原则，它们将有助于你在设计表单时决定使用哪个控件更合适。<br><br></p><h1 id="使用单选按钮"><a href="#使用单选按钮" class="headerlink" title="使用单选按钮"></a>使用单选按钮</h1><h3 id="1-当需要强调选项时"><a href="#1-当需要强调选项时" class="headerlink" title="#1 当需要强调选项时"></a>#1 当需要强调选项时</h3><p>下面是一些需要强调选项的情况：<br>• &nbsp; 没有明确的默认选项或推荐选项<br>• &nbsp; 希望用户阅读所有选项<br>• &nbsp; 用户不熟悉这些选项，并且较少有机会甚至没有机会预知它们</p><img src="/2019/05/02/单选按钮与下拉菜单的-7-个使用原则/when-options-need-to-be-emphasize.png"><p><center><p style="font-size:12px; color:#C0C0C0">当需要强调选项时</p><center></center></center></p><p>在上面这个例子中，使用下拉菜单并不是一个很好的方案，因为默认选项并没有提供关于其他选项的线索。</p><h3 id="2-当选项少于-5-个时"><a href="#2-当选项少于-5-个时" class="headerlink" title="#2 当选项少于 5 个时"></a>#2 当选项少于 5 个时</h3><p>选项较少时最好并排放置，以便：<br>• &nbsp; 用户可轻松快速的浏览所有选项<br>• &nbsp; 提供快速响应，而不是打开下拉菜单后再从多个选项中进行选择</p><img src="/2019/05/02/单选按钮与下拉菜单的-7-个使用原则/less-number-of-options.png"><p><center><p style="font-size:12px; color:#C0C0C0">选项较少时</p><center></center></center></p><p>如上面的例子所示，当用户需要从 2 至 4 个选项中进行选择时，使用单选按钮更合适。</p><h3 id="3-当选项之间需要进行明确的比较时"><a href="#3-当选项之间需要进行明确的比较时" class="headerlink" title="#3 当选项之间需要进行明确的比较时"></a>#3 当选项之间需要进行明确的比较时</h3><p>可比较的选项最好并排放置，因为：<br>• &nbsp; 用户可对所有选项一目了然，并轻松进行比较<br>• &nbsp; 从下拉菜单中比较和确定选项需要耗费时间<br>• &nbsp; 如果使用下拉菜单，那么用户每次需要检查已选项时，都必须再次打开下拉菜单对选项进行比较</p><img src="/2019/05/02/单选按钮与下拉菜单的-7-个使用原则/comparison-of-options-is-required.png"><p><center><p style="font-size:12px; color:#C0C0C0">当需要比较选项时</p><center></center></center></p><p>上面这个比较好的例子是，关于用户必须做出严肃决定的订阅计划的选择。</p><h3 id="4-当需要优先考虑可见性和快速响应时"><a href="#4-当需要优先考虑可见性和快速响应时" class="headerlink" title="#4 当需要优先考虑可见性和快速响应时"></a>#4 当需要优先考虑可见性和快速响应时</h3><p>清晰的可见性及选项的可快速浏览对用户来说更容易理解。<br>• &nbsp; 对于较长的表单，可更简单快捷地扫描并标记所需选项<br>• &nbsp; 每次都点击下拉菜单去选择某个选项，会耗费很多时间</p><img src="/2019/05/02/单选按钮与下拉菜单的-7-个使用原则/long-forms.png"><p><center><p style="font-size:12px; color:#C0C0C0">长表单──Survey Monkey Questionnaire</p><center></center></center></p><p>从上面例子可明显看出，所有可选项对用户可见的长表单提供了更好的用户体验。<br><br></p><h1 id="使用下拉菜单"><a href="#使用下拉菜单" class="headerlink" title="使用下拉菜单"></a>使用下拉菜单</h1><h3 id="1-当默认选项是推荐选项时"><a href="#1-当默认选项是推荐选项时" class="headerlink" title="#1 当默认选项是推荐选项时"></a>#1 当默认选项是推荐选项时</h3><p>这种情况下，仅查看推荐选项使用户更容易做出选择，因为：<br>• &nbsp; 显示所有选项将吸引用户的注意力<br>• &nbsp; 不鼓励用户更改默认选项</p><img src="/2019/05/02/单选按钮与下拉菜单的-7-个使用原则/default-recommended-option.png"><p><center><p style="font-size:12px; color:#C0C0C0">默认推荐选项</p><center></center></center></p><p>在上面的例子中，用户基本不需要改变默认选项，所以没有必要显示所有的选项。</p><h3 id="2-当有大量相似的选项可选时"><a href="#2-当有大量相似的选项可选时" class="headerlink" title="#2 当有大量相似的选项可选时"></a>#2 当有大量相似的选项可选时</h3><p>当有大量相似选项时，推荐使用下拉菜单，因为：<br>• &nbsp; 用户很容易预知这些选项<br>• &nbsp; 用户没有必要并排查看所有选项</p><img src="/2019/05/02/单选按钮与下拉菜单的-7-个使用原则/A-lot-of-familiar-options.png"><p><center><p style="font-size:12px; color:#C0C0C0">大量相似选项</p><center></center></center></p><h3 id="3-当选项超过-7-个时"><a href="#3-当选项超过-7-个时" class="headerlink" title="#3 当选项超过 7 个时"></a>#3 当选项超过 7 个时</h3><p>当选项个数较多时，并不适合并排显示，因为：<br>• &nbsp; 如果一大堆选项并排放置，用户界面将变得杂乱。用户在查看时有可能会感到困惑。<br>• &nbsp; 扫描大量的单选选项需要耗费时间</p><img src="/2019/05/02/单选按钮与下拉菜单的-7-个使用原则/More-than-7-options.png"><p><center><p style="font-size:12px; color:#C0C0C0">超过 7 个选项</p><center></center></center></p><p>此外，对于长下拉列表，提供文本输入框是一个不错的方法。用户在其中输入选项名称后，列表仅显示出过滤选项。这将使选择更轻松快捷。</p><img src="/2019/05/02/单选按钮与下拉菜单的-7-个使用原则/Enter-option-to-filter-the-list.png"><p><center><p style="font-size:12px; color:#C0C0C0">输入选项来过滤列表</p><center></center></center></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>为提高表单的用户体验，提供正确的控件以便用户输入是非常重要的。由于大量的选项会使表单变得很长，如果用户需要额外点击来输入信息的话，这将变得十分枯燥。<br>以上这些规则将帮助你决定在设计表单时使用哪个控件，单选按钮或者下拉菜单。<br><br></p><hr><p style="font-size:14px; color:#C0C0C0">以上翻译包含个人理解，仅用于个人学习。如有错误，求指正呀，非常感谢。^^<br>感谢原文作者及所有分享想法与经验的人。^^</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;question&quot;&gt; 原文：&lt;a href=&quot;https://blog.prototypr.io/7-rules-of-using-radio-buttons-vs-drop-down-menus-fddf50d312d1&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;7 Rules of Using Radio Buttons vs Drop-Down Menus&lt;/a&gt;&lt;br&gt;作者：Saadia Minhas (2018-05-06)&lt;br&gt;阅读时长：3m43s &lt;/blockquote&gt;

&lt;p&gt;不管你正在使用移动应用还是基于网页的工具，表单都是用户界面中至关重要的一部分。同时，表单也是用户交互的最佳来源。用户通过表单录入、提供信息，系统则通过理解这些信息来满足用户需求。&lt;/p&gt;
    
    </summary>
    
      <category term="译文" scheme="http://zyunn.com/categories/%E8%AF%91%E6%96%87/"/>
    
    
      <category term="译文" scheme="http://zyunn.com/tags/%E8%AF%91%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>译 | 字符计数器的 6 项设计原则</title>
    <link href="http://zyunn.com/2019/05/02/%E5%AD%97%E7%AC%A6%E8%AE%A1%E6%95%B0%E5%99%A8%E7%9A%84-6-%E9%A1%B9%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/"/>
    <id>http://zyunn.com/2019/05/02/字符计数器的-6-项设计原则/</id>
    <published>2019-05-02T04:22:54.000Z</published>
    <updated>2019-05-02T07:20:12.230Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="question"> 原文：<a href="http://www.breck-mckye.com/blog/2012/05/character-count-design-some-guidelines/" target="_blank" rel="noopener">Character count design: some guidelines</a><br>作者：Jimmy Breck-McKye (2012-05-30)<br>阅读时长：7m22s </blockquote><p>字符数限制在互联网产品中无处不在，尤其是在依赖于用户产生内容的应用中。尽管如此常见，字符数限制却总被设计得很糟糕。值得庆幸的是，通过遵循以下 6 个关于输入长度限制设计与字符计数器显示的简单原则，便可使输入受字符数限制的文本变得简单方便。<a id="more"></a></p><h4 id="总的来说，有以下-6-个设计字符有限的文本域的主要准则："><a href="#总的来说，有以下-6-个设计字符有限的文本域的主要准则：" class="headerlink" title="总的来说，有以下 6 个设计字符有限的文本域的主要准则："></a>总的来说，有以下 6 个设计字符有限的文本域的主要准则：</h4><ol><li>避免对文本输入作字数限制</li><li>为字符数限制增加视觉提示</li><li>在字数到达限制之前显示字符计数器</li><li>允许用户在达到字数限制之后继续编辑文本</li><li>允许用户方便地查看所有文本内容，以决定哪些内容需要被删减</li><li>为用户的内容输入提供其他渠道</li></ol><p>现在，我们依次来看这些原则。</p><h3 id="首先，避免对文本输入作字数限制。"><a href="#首先，避免对文本输入作字数限制。" class="headerlink" title="首先，避免对文本输入作字数限制。"></a>首先，避免对文本输入作字数限制。</h3><p>由于技术或架构上的限制，我们经常被迫需要对输入字数作出限制，因此导致输入变得非常不方便。但除此之外，这些限制毫无必要。有时我们本可以重新设计界面来满足更长长度的文本输入，有时我们草率地对用户如何构建他们的文本作出假设，有时我们并未作深入思考就对字数作了限制。我们要多思考与探寻是否有限制用户之外的其他替代方案。</p><h3 id="第二，-为字符数限制增加视觉提示。"><a href="#第二，-为字符数限制增加视觉提示。" class="headerlink" title="第二， 为字符数限制增加视觉提示。"></a>第二， 为字符数限制增加视觉提示。</h3><p>200 个字符有多长？您能想象得出来吗？300 个字符呢？40 个呢？抽象的数字对于人们来说并不重要，我们很难猜出一个特定的字符限制对于文本输入意味着什么。所以，我们需要为用户提供其他的提示以帮助他们更好的理解内容的最大输入长度，以及他们当前已输入的长度。</p><p>有一种方法是，设计尺寸合适的输入区域，以便粗略地表示允许输入的最长文本长度。虽然这很难做到绝对准确（因为 140 个字母「i」将比140 个字母「w」显示的行数更少），但这种方式可为用户提供一个直观的字符限制的感受。例如 Twitter，发帖输入框的尺寸就大致等于输入最大限制字数时的尺寸。</p><img src="/2019/05/02/字符计数器的-6-项设计原则/character-twitter.png"><p><center><p style="font-size:12px; color:#C0C0C0">Twitter 的发帖输入框</p><center></center></center></p><p>另一个方法是，当用户的输入接近最大限制字数时，改变字符计数器的颜色。例如 Stack-exchange 网站的评论输入框，当评论字数逐渐增加，计数器从灰色变成金色，最后变成红色。</p><img src="/2019/05/02/字符计数器的-6-项设计原则/character-soverflow.png"><p><center><p style="font-size:12px; color:#C0C0C0">Stack-exchange 网站的评论输入框</p><center></center></center></p><h3 id="第三，在达到最大字数限制之前，显示字符计数器。"><a href="#第三，在达到最大字数限制之前，显示字符计数器。" class="headerlink" title="第三，在达到最大字数限制之前，显示字符计数器。"></a>第三，在达到最大字数限制之前，显示字符计数器。</h3><p>您一定不希望用户在提交内容时才发现字数超出限制了，因为这将迫使用户不得不重新思考他们已经输入的内容，甚至是其他他们已经计划好提交的内容的结构。从认知上来说，这将耗费非常大的成本。您一定也不希望用超出字数限制的错误提示来打扰用户，所以，最好从一开始就显示字符计数器。如果计数器使你的设计变得凌乱，可以考虑给它设置一个不显眼的样式，比如灰色，当用户输入更多文字时，逐渐增强它的显眼程度。</p><h3 id="第四，允许用户超出字符限制，并且在超出之后进行编辑。"><a href="#第四，允许用户超出字符限制，并且在超出之后进行编辑。" class="headerlink" title="第四，允许用户超出字符限制，并且在超出之后进行编辑。"></a>第四，允许用户超出字符限制，并且在超出之后进行编辑。</h3><p>有一些字符数限制的设计是，一旦用户输入的文字达到最大限制，就禁止输入更多的文字。这是一个非常糟糕的设计，原因有两个。第一，它打断了用户复制和粘贴的操作；第二，提炼和修改文字内容比在输入完整文字前进行编辑来得更容易。允许用户输入完整的文字内容可帮助用户记住页面上的主要概念，然后开始编辑他们的素材。</p><h3 id="第五，方便用户清楚了解哪部分内容是需要被删减的。"><a href="#第五，方便用户清楚了解哪部分内容是需要被删减的。" class="headerlink" title="第五，方便用户清楚了解哪部分内容是需要被删减的。"></a>第五，方便用户清楚了解哪部分内容是需要被删减的。</h3><p>正如以上第 2 点所提到的，对于用户来说，一定数量的字符数在字数层面上究竟意味着什么是难以理解的。这就是为什么以其他的方式提示用户当前已超出限制的程度是非常重要的。调整输入区域的尺寸，以暗示可输入的内容数量，这是一种不错的方式。但另一种更好的方式是，高亮用户已输入的文本中超出字数限制的那部分。</p><p>如下图的例子中，超出字数限制的文字为红色，所以用户可以一目了然哪些内容是需要被删减的。同时，这里还将红色的错误提示信息与触发它的文本联系起来了。</p><img src="/2019/05/02/字符计数器的-6-项设计原则/character-red.png"><p><center><p style="font-size:12px; color:#C0C0C0">超出字数限制的文字为红色</p><center></center></center></p><h3 id="第六，为用户的内容提供其他的输入渠道。"><a href="#第六，为用户的内容提供其他的输入渠道。" class="headerlink" title="第六，为用户的内容提供其他的输入渠道。"></a>第六，为用户的内容提供其他的输入渠道。</h3><p>如果用户正在打破字符限制，那么很有可能他正在以一种不恰当的方式使用此输入区域。因此，可以使用字数限制的错误提示引导用户使用更适合他们的内容长度的渠道或者输入区域。</p><p>例如，在 Facebook 中，当用户发布过长的 Status 更新时，将会弹出错误对话框，建议用户使用长度不限制的 Notes 功能。这促使用户使用适合冗长日志的 Statuses 功能，而不是专用的日志系统。如果你的用户正在打破字符限制，仅仅是因为他们误解了某一功能的使用目的，那么这个方法将会有所帮助。<br><br></p><h4 id="用自己的话总结一下，就是："><a href="#用自己的话总结一下，就是：" class="headerlink" title="用自己的话总结一下，就是："></a>用自己的话总结一下，就是：</h4><p><strong>1. 在对文本输入作字数限制前先考虑是不是有其他方案。</strong><br>字数限制，并不是一种很好的方式，你有可能并未对用户的这个输入行为作深入了解，就草率地决定了这个最大限制字数。</p><p><strong>2. 为这个「最大限制字数」增加一些视觉提示。</strong><br>单纯地放一个数字「200」对用户来说是比较难理解的，他们并不知道 200 个字是什么概念。<br>增加提示的方式：如，将输入框的初始高度设置为刚好输入最大限制字数时的高度；或者，当用户的输入逐渐接近最大限制字数时，逐步改变字符计数器的颜色。</p><p><strong>3. 一开始就显示字符计数器，而不是等到用户的输入超过最大限制字数时才显示。</strong><br>当用户的输入超过最大限制字数时才显示字符计数器的话，用户可能需要重新思考和安排他们已经填好的内容，甚至可能因为这一个修改影响其他本来就已经准备好录入的内容。<br>如果担心你的界面设计因为字符计数器显得杂乱，可以给它设置一个比较不显眼的颜色 (如灰色)，当用户输入更多字数时，再慢慢提高字符计数器的显眼程度。</p><p><strong>4. 在用户的输入达到最大限制字数后，也要允许用户继续输入。</strong><br>有一些字符计数器是，当用户达到最大字数限制后，就禁止用户输入了。这是很糟糕的一种设计方式，首先，这样可能使用户复制粘贴的内容被截断；另外，在原本完整的文本内容上进行修改总是比在被截断所以不完整的内容上修改来得容易。</p><p><strong>5. 当用户的输入超出最大限制字数时，让用户清晰地知道哪些内容是超出的。</strong><br>例如，第 2 点中，将输入框的初始高度设置为刚好输入最大限制字数时的高度，这样，用户就知道超出这个输入框的部分就是超出的，需要把内容删减到能在这个输入框内完整显示；另一个更好的方式是，将超出最大字数限制的那部分文本变为红色。</p><p><strong>6. 如果用户输入的内容超出限定的最大字数，说明他们很可能正在以一种不恰当的方式使用这个输入框，这种情况下，可利用错误信息引导用户改用更适合他们想输入的内容的途径或文本框。</strong></p><blockquote class="question"> 其他相关讨论：<a href="https://ux.stackexchange.com/questions/60515/what-is-the-best-placement-of-character-counter-relative-to-the-text-field" target="_blank" rel="noopener">字符计数器应该放置在相应文本框的什么位置？</a></blockquote><p><br></p><hr><p style="font-size:14px; color:#C0C0C0">以上翻译包含个人理解，仅用于个人学习。如有错误，求指正呀，非常感谢。^^<br>感谢原文作者及所有分享想法与经验的人。^^</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;question&quot;&gt; 原文：&lt;a href=&quot;http://www.breck-mckye.com/blog/2012/05/character-count-design-some-guidelines/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Character count design: some guidelines&lt;/a&gt;&lt;br&gt;作者：Jimmy Breck-McKye (2012-05-30)&lt;br&gt;阅读时长：7m22s &lt;/blockquote&gt;

&lt;p&gt;字符数限制在互联网产品中无处不在，尤其是在依赖于用户产生内容的应用中。尽管如此常见，字符数限制却总被设计得很糟糕。值得庆幸的是，通过遵循以下 6 个关于输入长度限制设计与字符计数器显示的简单原则，便可使输入受字符数限制的文本变得简单方便。&lt;/p&gt;
    
    </summary>
    
      <category term="译文" scheme="http://zyunn.com/categories/%E8%AF%91%E6%96%87/"/>
    
    
      <category term="译文" scheme="http://zyunn.com/tags/%E8%AF%91%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>译 | 只有不超过 5% 的用户会调整默认设置</title>
    <link href="http://zyunn.com/2019/05/02/%E8%AF%91-%E5%8F%AA%E6%9C%89%E4%B8%8D%E8%B6%85%E8%BF%87-5-%E7%9A%84%E7%94%A8%E6%88%B7%E4%BC%9A%E8%B0%83%E6%95%B4%E9%BB%98%E8%AE%A4%E9%80%89%E9%A1%B9/"/>
    <id>http://zyunn.com/2019/05/02/译-只有不超过-5-的用户会调整默认选项/</id>
    <published>2019-05-02T03:53:06.000Z</published>
    <updated>2019-05-02T04:33:06.726Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="question"> 原文：<a href="https://www.uie.com/brainsparks/2011/09/14/do-users-change-their-settings/" target="_blank" rel="noopener">Do users change their settings?</a><br>作者：<a href="https://en.wikipedia.org/wiki/Jared_Spool" target="_blank" rel="noopener">Jared Spool</a> (2011-09-14)<br>阅读时长：4m15s </blockquote><p>早在 PC 时代，我们就对<strong>「用户是如何使用软件设计师为他们的应用程序所设计的选项、控件和设置的」</strong>这个问题感兴趣了。我们想知道，在多大程度上，用户会自定义他们的应用程序。<a id="more"></a></p><p>为此，我们着手进行了一些试验。我们邀请了大量的用户将他们的 Microsoft Word 的设置文件发送给我们。当时，MS Word 将所有的设置存储在一个名称诸如 config.ini 的文件中，所以我们邀请用户们将这个文件存入硬盘中，并通过电子邮件发送给我们。于是，我们收到了几百份这样的邮件。</p><p>然后，我们写了一个程序来分析这些文件，对「有多少用户曾经更改过应用中的 150 多项设置以及他们更改的是哪些设置」进行统计。</p><p>我们的发现非常有趣。在我们调研的用户中，<strong>只有不到 5% 的用户更改了设置，超过 95% 的用户则保留了应用程序安装时的默认设置。</strong></p><p>这令人非常惊讶，因为程序中有一些默认设置是非常重要的。例如，此应用有一个功能是，在你编辑文件的过程中为你自动保存文件，以防在系统或应用程序突然崩溃时丢失任何内容。而在我们分析调查的的版本中，这个功能是默认关闭的。用户必须手动打开它，才能使它生效。</p><p>所以，这就意味着，<strong>有 95% 的用户是在自动保存功能关闭的情况下使用此应用程序的。</strong>当我们对这些用户中的一部分人进行访问时，他们都告诉了我们同一个事情：他们认为 Microsoft 关闭这个功能肯定是有原因的，否则他们为什么要这么设置。还有一些用户告诉我们，「Microsoft 一定知道他们在做什么」。</p><p>我们再三思考了这个问题，并且对「将如此重要的一个功能设为默认关闭」的原因进行了猜想。我们猜想，之所以这么做或许是考虑到「用户使用的是软驱或者用户使用的硬盘空间较小运行较慢」，而自动保存会对性能造成影响，所以他们希望为最坏的情况做一些优化，而且，如果用户需要用到这个功能，他们自然会去打开它。</p><p>我们有朋友在 Microsoft Office 团队中工作，于是我们向他们询问了将这个功能默认设为关闭的原因，并且提出了我们关于性能优化的这个假设。但他们进行了解之后告诉我们，我们的假设是错的。</p><p>事实证明，在该版本中，将该功能默认关闭，并不是因为他们考虑到了用户的需求。相反的，这只是因为一个程序员决定将 config.ini 文件初始化。将一个文件初始化是一个又快工作量又小的工程，所以他就先这么做了，寄希望于之后会有人告诉他实际需要的默认设置应该是什么样的。但是结果并没有人这么做。</p><p>由于二进制中 0 代表关闭，所以「自动保存」以及其他一些功能，都被默认设为关闭。<strong>用户认为 Microsoft 一定是经过仔细考虑才这么设置的，但事实并非如此。</strong></p><p>我们向参与调查的用户了解一些背景资料，比如他们的年龄与职业，以看看是否存在一些区别。但毫无例外，<strong>只有一类人几乎总是主动调整他们的设置，这类人就是程序员和设计师</strong>。他们会调整应用程序中 40%，甚至多达 80% 的选项。</p><p>谁能想到，程序员和设计师们喜欢自定义他们的应用程序。这也许正好就是他们选择这份职业的原因？</p><p>（顺便说一句，<strong>如果你是一个程序员或者设计师，那么你将和大部人不一样</strong>。你习惯于调整你所使用的应用程序 的设置，并不意味着你的用户也会这么做，除非他们也是程序员或设计师。）</p><p>在几年的时间里，我们采用不同的形式重复了这个试验。我们发现，<strong>用户几乎不调整他们的设置</strong>。</p><p>如果你的应用程序也有很多设置，你是否曾调查研究过你的用户是如何使用它们的呢？有多少用户调整过这些设置？他们是否仍保持这些选项为默认状态？你的设置界面是否解释了每个设置的含义，并且告知用户为何要调整这些设置？<br><br></p><hr><p style="font-size:14px; color:#C0C0C0">以上翻译包含个人理解，仅用于个人学习。如有错误，求指正呀，非常感谢。^^<br>感谢原文作者及所有分享想法与经验的人。^^</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;question&quot;&gt; 原文：&lt;a href=&quot;https://www.uie.com/brainsparks/2011/09/14/do-users-change-their-settings/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Do users change their settings?&lt;/a&gt;&lt;br&gt;作者：&lt;a href=&quot;https://en.wikipedia.org/wiki/Jared_Spool&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Jared Spool&lt;/a&gt; (2011-09-14)&lt;br&gt;阅读时长：4m15s &lt;/blockquote&gt;

&lt;p&gt;早在 PC 时代，我们就对&lt;strong&gt;「用户是如何使用软件设计师为他们的应用程序所设计的选项、控件和设置的」&lt;/strong&gt;这个问题感兴趣了。我们想知道，在多大程度上，用户会自定义他们的应用程序。&lt;/p&gt;
    
    </summary>
    
      <category term="译文" scheme="http://zyunn.com/categories/%E8%AF%91%E6%96%87/"/>
    
    
      <category term="译文" scheme="http://zyunn.com/tags/%E8%AF%91%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>二零一九年五月</title>
    <link href="http://zyunn.com/2019/05/01/%E4%BA%8C%E9%9B%B6%E4%B8%80%E4%B9%9D%E5%B9%B4%E4%BA%94%E6%9C%88/"/>
    <id>http://zyunn.com/2019/05/01/二零一九年五月/</id>
    <published>2019-05-01T09:17:57.000Z</published>
    <updated>2019-05-03T02:51:55.281Z</updated>
    
    <content type="html"><![CDATA[<h3 id="2019-05-01"><a href="#2019-05-01" class="headerlink" title="# 2019.05.01"></a># 2019.05.01</h3><hr><p>今天是 2019 年 5 月 1 号，我们的社会依然面临三大严峻问题。<br>治疗胃溃疡的药，不良反应是，胃炎。<br>抗过敏的药，注意事项是，过敏体质者慎用。<br>缓解抑郁症的药，有增加自杀倾向的风险。<a id="more"></a><br><br></p><h3 id="2019-05-02"><a href="#2019-05-02" class="headerlink" title="# 2019.05.02"></a># 2019.05.02</h3><hr><p>今天是 2019 年 5 月 2 号，从朋友圈看当代中国青年的精神境况和生活状态。<br>世界杯。<br>创造 101。<br>权力的游戏。<br>热情一年不如一年。<br><br></p><h3 id="2019-05-03"><a href="#2019-05-03" class="headerlink" title="# 2019.05.03"></a># 2019.05.03</h3><hr><p>今天是 2019 年 5 月 3 号，在我的故乡吉林延边二道白河。<br>我看见过。<br>雪往天空里飘。<br>最后落入银河。<br>银河是白色的。</p><p><br><br><br><br><br></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;2019-05-01&quot;&gt;&lt;a href=&quot;#2019-05-01&quot; class=&quot;headerlink&quot; title=&quot;# 2019.05.01&quot;&gt;&lt;/a&gt;# 2019.05.01&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;今天是 2019 年 5 月 1 号，我们的社会依然面临三大严峻问题。&lt;br&gt;治疗胃溃疡的药，不良反应是，胃炎。&lt;br&gt;抗过敏的药，注意事项是，过敏体质者慎用。&lt;br&gt;缓解抑郁症的药，有增加自杀倾向的风险。&lt;/p&gt;
    
    </summary>
    
      <category term="碎碎念儿" scheme="http://zyunn.com/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5%E5%84%BF/"/>
    
    
  </entry>
  
  <entry>
    <title>历经九九八万五千六百七十一难，迎来互联网生涯新高！</title>
    <link href="http://zyunn.com/2019/04/21/%E5%8E%86%E7%BB%8F%E4%B9%9D%E4%B9%9D%E5%85%AB%E4%B8%87%E4%BA%94%E5%8D%83%E5%85%AD%E7%99%BE%E4%B8%83%E5%8D%81%E4%B8%80%E9%9A%BE%EF%BC%8C%E8%BF%8E%E6%9D%A5%E4%BA%92%E8%81%94%E7%BD%91%E7%94%9F%E6%B6%AF%E6%96%B0%E9%AB%98%EF%BC%81/"/>
    <id>http://zyunn.com/2019/04/21/历经九九八万五千六百七十一难，迎来互联网生涯新高！/</id>
    <published>2019-04-21T10:18:18.000Z</published>
    <updated>2019-05-02T09:40:26.397Z</updated>
    
    <content type="html"><![CDATA[<p>折腾了两天之后，我终于拥有自己的部落格啦！哈哈哈哈哈哈开心！快乐！满足！充满希望！（止不住的膨胀 </p><p>谁能想到，这个普普通通的周末也许可能就是我这一生中用脑强度最大的两天了。<a id="more"></a>在稀里糊涂地安装了 Git、Node.js、Xcode，新建了 repository，弄完了域名注册实名验证域名解析，各种注册各种设置，各种改样式，各种 hexo c、 hexo g、hexo s、hexo d，各种 error 各种 warning 之后，我终于迎来了自己的个人网站。 辛苦我自己了（高光时刻儿 。</p><p>虽然还很简单，但暂时还够用儿，其他的边用边学就好啦。还是要好好学习，好好写文章呐。</p><p>感恩 Hexo，感恩 GitHub，感恩互联网，感恩所有分享经验和想法的人儿吖（扑通一声跪下（感恩「简书」不让我改昵称改头像让我有了建站的小动机儿 。</p><p>Cowabunga！</p><img src="/2019/04/21/历经九九八万五千六百七十一难，迎来互联网生涯新高！/cowabunga.jpeg"><p style="font-size:12px; color:#C0C0C0">图片来源：动画《探险活宝》</p>  ]]></content>
    
    <summary type="html">
    
      &lt;p&gt;折腾了两天之后，我终于拥有自己的部落格啦！哈哈哈哈哈哈开心！快乐！满足！充满希望！（止不住的膨胀 &lt;/p&gt;
&lt;p&gt;谁能想到，这个普普通通的周末也许可能就是我这一生中用脑强度最大的两天了。&lt;/p&gt;
    
    </summary>
    
      <category term="碎碎念儿" scheme="http://zyunn.com/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5%E5%84%BF/"/>
    
    
  </entry>
  
</feed>
